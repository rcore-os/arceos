var searchIndex = new Map(JSON.parse('[\
["allocator",{"t":"GIFKFFKPKPPPPPTKFFMNNNNMNNNMMMNNMMNNNMNNNNNNNNNNNNNNNMNNNMMNNNNNNNNNMNNNNNNNNNNMNNNNNMNMNNNMNNNNNNNNNNNNNNNNNNNMMNNNMN","n":["AllocError","AllocResult","AllocatorRc","BaseAllocator","BitmapPageAllocator","BuddyByteAllocator","ByteAllocator","Err","IdAllocator","InvalidParam","MemoryOverlap","NoMemory","NotAllocated","Ok","PAGE_SIZE","PageAllocator","SlabByteAllocator","TlsfByteAllocator","add_memory","add_memory","add_memory","add_memory","add_memory","alloc","alloc","alloc","alloc","alloc_fixed_id","alloc_id","alloc_pages","alloc_pages","allocate","available","available_bytes","available_bytes","available_bytes","available_bytes","available_pages","available_pages","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","dealloc","dealloc","dealloc","dealloc","dealloc_id","dealloc_pages","dealloc_pages","deallocate","fmt","from","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","into","is_allocated","new","new","new","new","new","size","to_owned","total_bytes","total_bytes","total_bytes","total_bytes","total_pages","total_pages","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","used","used_bytes","used_bytes","used_bytes","used_bytes","used_pages","used_pages"],"q":[[0,"allocator"],[118,"allocator::bitmap"],[119,"allocator::buddy"],[120,"allocator::slab"],[121,"allocator::tlsf"],[122,"core::alloc::layout"],[123,"core::ptr::non_null"],[124,"allocator::allocator_api"],[125,"core::alloc"],[126,"core::result"],[127,"core::fmt"],[128,"core::any"]],"i":[0,0,0,0,0,0,0,3,0,19,19,19,19,3,13,0,0,0,1,4,5,6,7,8,5,6,7,12,12,13,4,14,12,8,5,6,7,13,4,4,5,6,7,14,19,4,5,6,7,14,19,14,14,8,5,6,7,12,13,4,14,19,4,5,6,7,14,19,1,4,5,6,7,4,5,6,7,14,19,12,4,5,6,7,14,12,14,8,5,6,7,13,4,4,5,6,7,14,19,4,5,6,7,14,19,4,5,6,7,14,19,12,8,5,6,7,13,4],"f":"``````````````````{{bdd}f}{{hdd}f}{{jdd}f}{{ldd}f}{{ndd}f}{{A`Ab}{{f{{Af{Ad}}}}}}{{jAb}{{f{{Af{Ad}}}}}}{{lAb}{{f{{Af{Ad}}}}}}{{nAb}{{f{{Af{Ad}}}}}}{{Ahd}f}{{Ahdd}{{f{d}}}}{{Ajdd}{{f{d}}}}{{hdd}{{f{d}}}}{{{Al{c}}Ab}{{Bb{{Af{{An{Ad}}}}B`}}}A`}{Ahd}{A`d}{jd}{ld}{nd}{Ajd}{hd}{ce{}{}}00000000000{{{Al{c}}}{{Al{c}}}A`}{{ce}Bd{}{}}{{A`{Af{Ad}}Ab}Bd}{{j{Af{Ad}}Ab}Bd}{{l{Af{Ad}}Ab}Bd}{{n{Af{Ad}}Ab}Bd}{{Ahdd}Bd}{{Ajdd}Bd}{{hdd}Bd}{{{Al{c}}{Af{Ad}}Ab}BdA`}{{BfBh}Bj}{cc{}}00000{{bdd}Bd}4{{jdd}Bd}{{ldd}Bd}{{ndd}Bd}{ce{}{}}00000{{Ahd}Bl}{{}h}{{}j}{{}l}{{}n}{{c{An{Ad}}}{{Al{c}}}A`}{Ahd}7{A`d}{jd}{ld}{nd}{Ajd}{hd}{c{{Bb{e}}}{}{}}00000000000{cBn{}}000008765432","D":"Fn","p":[[10,"BaseAllocator",0],[1,"usize"],[8,"AllocResult",0],[5,"BitmapPageAllocator",0,118],[5,"BuddyByteAllocator",0,119],[5,"SlabByteAllocator",0,120],[5,"TlsfByteAllocator",0,121],[10,"ByteAllocator",0],[5,"Layout",122],[1,"u8"],[5,"NonNull",123],[10,"IdAllocator",0],[10,"PageAllocator",0],[5,"AllocatorRc",0,124],[1,"slice"],[5,"AllocError",125],[6,"Result",126],[1,"unit"],[6,"AllocError",0],[5,"Formatter",127],[8,"Result",127],[1,"bool"],[5,"TypeId",128]],"r":[[2,124],[4,118],[5,119],[16,120],[17,121]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAD8ADQAUAAMAGQACAB8AAQAjAAIAJwAOADcAAgA8AAIARgADAFcAAABZAAIAXQASAHIAAgB2AAAA"}],\
["arceos_api",{"t":"PPGIPPPPPPPPPPPPPPPPPPPPPPNNNNNNCCNNNNNCNCCCCCCCNNNNNNSSSSSSSSSSSSSSSSSSFHHNNNNOONNONNNNNOIFFIFIIFGPPPPPPPKPPPNHHHHHHHHHHHHHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNONNNNOHHFFHHHHHHHHHHHHHHHHHHHHHHHHHHNNNNNNNNNNNNNNHHHHFFHHHHHHHHHNNNNNNNNNNNNNNNNIH","n":["AddrInUse","AlreadyExists","AxError","AxResult","BadAddress","BadState","ConnectionRefused","ConnectionReset","DirectoryNotEmpty","Err","InvalidData","InvalidInput","Io","IsADirectory","NoMemory","NotADirectory","NotConnected","NotFound","Ok","PermissionDenied","ResourceBusy","StorageFull","UnexpectedEof","Unsupported","WouldBlock","WriteZero","as_str","borrow","borrow_mut","clone","clone_into","code","config","display","eq","fmt","fmt","from","from","fs","into","io","mem","net","stdio","sys","task","time","to_owned","to_string","try_from","try_from","try_into","type_id","ARCH","FAMILY","KERNEL_BASE_PADDR","KERNEL_BASE_VADDR","MMIO_REGIONS","PCI_BUS_END","PCI_ECAM_BASE","PCI_RANGES","PHYS_MEMORY_BASE","PHYS_MEMORY_END","PHYS_MEMORY_SIZE","PHYS_VIRT_OFFSET","PLATFORM","SMP","TASK_STACK_SIZE","TICKS_PER_SEC","TIMER_FREQUENCY","VIRTIO_MMIO_REGIONS","AxDisplayInfo","ax_framebuffer_flush","ax_framebuffer_info","borrow","borrow_mut","clone","clone_into","fb_base_vaddr","fb_size","fmt","from","height","into","to_owned","try_from","try_into","type_id","width","AxDirEntry","AxDirHandle","AxDisk","AxFileAttr","AxFileHandle","AxFilePerm","AxFileType","AxOpenOptions","AxSeekFrom","BlockDevice","CharDevice","Current","Dir","End","Fifo","File","MyFileSystemIf","Socket","Start","SymLink","append","ax_create_dir","ax_current_dir","ax_file_attr","ax_flush_file","ax_open_dir","ax_open_file","ax_read_dir","ax_read_file","ax_read_file_at","ax_remove_dir","ax_remove_file","ax_rename","ax_seek_file","ax_set_current_dir","ax_truncate_file","ax_write_file","ax_write_file_at","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create","create_new","eq","fmt","fmt","from","from","from","from","from","into","into","into","into","into","new","new","new_myfs","position","read","read_one","set_position","size","to_owned","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write","write_one","AxPollState","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","readable","to_owned","try_from","try_into","type_id","writable","ax_alloc","ax_dealloc","AxTcpSocketHandle","AxUdpSocketHandle","ax_dns_query","ax_poll_interfaces","ax_tcp_accept","ax_tcp_bind","ax_tcp_connect","ax_tcp_listen","ax_tcp_peer_addr","ax_tcp_poll","ax_tcp_recv","ax_tcp_send","ax_tcp_set_nonblocking","ax_tcp_shutdown","ax_tcp_socket","ax_tcp_socket_addr","ax_udp_bind","ax_udp_connect","ax_udp_peek_from","ax_udp_peer_addr","ax_udp_poll","ax_udp_recv","ax_udp_recv_from","ax_udp_send","ax_udp_send_to","ax_udp_set_nonblocking","ax_udp_socket","ax_udp_socket_addr","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","ax_console_read_byte","ax_console_write_bytes","ax_console_write_fmt","ax_terminate","AxTaskHandle","AxWaitQueueHandle","ax_current_task_id","ax_exit","ax_set_current_priority","ax_sleep_until","ax_spawn","ax_wait_for_exit","ax_wait_queue_wait","ax_wait_queue_wake","ax_yield_now","borrow","borrow","borrow_mut","borrow_mut","from","from","id","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","AxTimeValue","ax_current_time"],"q":[[0,"arceos_api"],[54,"arceos_api::config"],[72,"arceos_api::display"],[90,"arceos_api::fs"],[185,"arceos_api::io"],[200,"arceos_api::mem"],[202,"arceos_api::net"],[244,"arceos_api::stdio"],[247,"arceos_api::sys"],[248,"arceos_api::task"],[275,"arceos_api::time"],[277,"axerrno"],[278,"core::fmt"],[279,"core::result"],[280,"capability"],[281,"alloc::string"],[282,"core::any"],[283,"arceos_api::imp::fs"],[284,"axfs_vfs"],[285,"alloc::sync"],[286,"driver_common"],[287,"core::alloc::layout"],[288,"core::ptr::non_null"],[289,"core::option"],[290,"core::net::ip_addr"],[291,"alloc::vec"],[292,"arceos_api::imp::net"],[293,"core::net::socket_addr"],[294,"arceos_api::imp::task"],[295,"core::ops::function"],[296,"core::marker"],[297,"core::time"],[298,"axconfig::config"],[299,"axconfig"],[300,"axfs::fs::myfs"]],"i":[1,1,0,0,1,1,1,1,1,14,1,1,1,1,1,1,1,1,14,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,51,51,23,51,23,51,51,0,51,23,51,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,15,17,23,13,24,15,17,23,13,23,13,23,13,13,13,23,23,13,24,15,17,23,13,24,15,17,23,13,24,13,52,24,13,24,24,24,23,13,13,24,15,17,23,13,24,15,17,23,13,24,15,17,23,13,13,24,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,37,34,37,34,37,34,37,34,37,34,37,34,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,46,43,46,43,46,43,43,46,46,43,46,43,46,43,46,0,0],"f":"``````````````````````````{bd}{ce{}{}}0{bb}{{ce}f{}{}}{bh}``{{bb}j}{{bl}{{A`{fn}}}}0{cc{}}{Abb}`7```````7{cAd{}}{h{{A`{b}}}}{c{{A`{e}}}{}{}}0{cAf{}}```````````````````{{}f}{{}Ah}=={AhAh}<``{{Ahl}{{A`{fn}}}}9`??554`````````````````````{{Ajj}f}{dAl}{{}{{Al{Ad}}}}{An{{Al{B`}}}}{AnAl}{{dAj}{{Al{Bb}}}}{{dAj}{{Al{An}}}}{{Bb{Bf{Bd}}}{{Al{Bh}}}}{{An{Bf{Bj}}}{{Al{Bh}}}}{{AnBl{Bf{Bj}}}{{Al{Bh}}}}88{{dd}Al}{{AnBn}{{Al{Bl}}}}:{{AnBl}Al}43{ce{}{}}000000000{BnBn}{AjAj}{{ce}f{}{}}0{{Ajj}f}0{{BnBn}j}{{Bnl}{{A`{fn}}}}{{Ajl}{{A`{fn}}}}{cc{}}000088888{{}C`}{{}Aj}{C`{{Cd{Cb}}}}{C`Bl}8{{C`{Bf{Bj}}}{{A`{BhCf}}}}{{C`Bl}f}2>>:{c{{A`{e}}}{}{}}000000000{cAf{}}0000<3`{ce{}{}}0{ChCh}?{{}Ch}{{Chl}{{A`{fn}}}}<3`3554`{Cj{{Cn{{Cl{Bj}}}}}}{{{Cl{Bj}}Cj}f}``{d{{Al{{Db{D`}}}}}}{{}Al}{Dd{{Al{{Dh{DdDf}}}}}}{{DdDf}Al}0{{DdBh}Al}{Dd{{Al{Df}}}}{Dd{{Al{Ch}}}}{{Dd{Bf{Bj}}}{{Al{Bh}}}}0{{Ddj}Al}{DdAl}{{}Dd}5{{DjDf}Al}0{{Dj{Bf{Bj}}}{{Al{{Dh{BhDf}}}}}}{Dj{{Al{Df}}}}{Dj{{Al{Ch}}}}{{Dj{Bf{Bj}}}{{Al{Bh}}}}30{{Dj{Bf{Bj}}Df}{{Al{Bh}}}}{{Djj}Al}{{}Dj}5{ce{}{}}000{cc{}}011{c{{A`{e}}}{}{}}000{cAf{}}0{{}{{Cn{Bj}}}}{{{Bf{Bj}}}{{Al{Bh}}}}{DlDn}{{}E`}``{{}Bl}{hE`}{EbAl}{Edf}{{cAdBh}Ef{EhEj}}{Ef{{Cn{h}}}}{{Elc{Cn{En}}}j{{Fb{}{{F`{j}}}}}}{{ElFd}f}{{}f}{ce{}{}}000{cc{}}0{EfBl}22{{}El}{c{{A`{e}}}{}{}}000{cAf{}}0`{{}Ed}","D":"AGn","p":[[6,"AxError",0,277],[1,"str"],[1,"unit"],[1,"i32"],[1,"bool"],[5,"Formatter",278],[5,"Error",278],[6,"Result",279],[5,"CapError",280],[5,"String",281],[5,"TypeId",282],[5,"AxDisplayInfo",72],[5,"AxOpenOptions",90],[8,"AxResult",0,277],[5,"AxFileHandle",90,283],[8,"AxFileAttr",90],[5,"AxDirHandle",90,283],[8,"AxDirEntry",90],[1,"slice"],[1,"usize"],[1,"u8"],[1,"u64"],[6,"AxSeekFrom",90],[5,"AxDisk",90],[10,"VfsOps",284],[5,"Arc",285],[6,"DevError",286],[5,"AxPollState",185],[5,"Layout",287],[5,"NonNull",288],[6,"Option",289],[6,"IpAddr",290],[5,"Vec",291],[5,"AxTcpSocketHandle",202,292],[6,"SocketAddr",293],[1,"tuple"],[5,"AxUdpSocketHandle",202,292],[5,"Arguments",278],[8,"Result",278],[1,"never"],[1,"isize"],[8,"AxTimeValue",275],[5,"AxTaskHandle",248,294],[10,"FnOnce",295],[10,"Send",296],[5,"AxWaitQueueHandle",248,294],[5,"Duration",297],[17,"Output"],[10,"Fn",295],[1,"u32"],[8,"AxFileType",90],[10,"MyFileSystemIf",90]],"r":[[2,277],[3,277],[54,298],[55,298],[56,298],[57,298],[58,298],[59,298],[60,298],[61,298],[62,298],[63,299],[64,298],[65,298],[66,298],[67,298],[68,298],[69,298],[70,298],[71,298],[91,283],[94,283],[106,300],[202,292],[203,292],[248,294],[249,294]],"b":[[35,"impl-Debug-for-AxError"],[36,"impl-Display-for-AxError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFYAEQAcAAMAIwACACcAAAAxAAUATAADAFIAAABWAAMAgQANAJEAAgCmAAEAqQAOALsABQDEAAMA5wADAO8ABQAEAQMADgEFAA=="}],\
["arceos_posix_api",{"t":"CCHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSOOOOOOOOOOOOFOOOOOOOOOFUIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNIUIFOOOFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIFUFIIINNNNNNNNNNNNNNNNNNNNNNOOFOIIIFUFFIOOOOOIFOOOOIOOOOOOOOOOOIOFFFFIOIOOOOOOOOOOOOOFIFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNOOOOI","n":["config","ctypes","sys_accept","sys_bind","sys_clock_gettime","sys_close","sys_connect","sys_dup","sys_dup2","sys_epoll_create","sys_epoll_ctl","sys_epoll_wait","sys_exit","sys_fcntl","sys_freeaddrinfo","sys_fstat","sys_getaddrinfo","sys_getcwd","sys_getpeername","sys_getpid","sys_getrlimit","sys_getsockname","sys_listen","sys_lseek","sys_lstat","sys_nanosleep","sys_open","sys_pipe","sys_pthread_create","sys_pthread_exit","sys_pthread_join","sys_pthread_mutex_init","sys_pthread_mutex_lock","sys_pthread_mutex_unlock","sys_pthread_self","sys_read","sys_recv","sys_recvfrom","sys_rename","sys_sched_yield","sys_select","sys_send","sys_sendto","sys_setrlimit","sys_shutdown","sys_socket","sys_stat","sys_sysconf","sys_write","sys_writev","ARCH","FAMILY","KERNEL_BASE_PADDR","KERNEL_BASE_VADDR","MMIO_REGIONS","PCI_BUS_END","PCI_ECAM_BASE","PCI_RANGES","PHYS_MEMORY_BASE","PHYS_MEMORY_END","PHYS_MEMORY_SIZE","PHYS_VIRT_OFFSET","PLATFORM","SMP","TASK_STACK_SIZE","TICKS_PER_SEC","TIMER_FREQUENCY","VIRTIO_MMIO_REGIONS","AF_ALG","AF_APPLETALK","AF_ASH","AF_ATMPVC","AF_ATMSVC","AF_AX25","AF_BLUETOOTH","AF_BRIDGE","AF_CAIF","AF_CAN","AF_DECnet","AF_ECONET","AF_FILE","AF_IB","AF_IEEE802154","AF_INET","AF_INET6","AF_IPX","AF_IRDA","AF_ISDN","AF_IUCV","AF_KCM","AF_KEY","AF_LLC","AF_LOCAL","AF_MAX","AF_MPLS","AF_NETBEUI","AF_NETLINK","AF_NETROM","AF_NFC","AF_PACKET","AF_PHONET","AF_PPPOX","AF_QIPCRTR","AF_RDS","AF_ROSE","AF_ROUTE","AF_RXRPC","AF_SECURITY","AF_SMC","AF_SNA","AF_TIPC","AF_UNIX","AF_UNSPEC","AF_VSOCK","AF_WANPIPE","AF_X25","AF_XDP","EAI_AGAIN","EAI_BADFLAGS","EAI_FAIL","EAI_FAMILY","EAI_MEMORY","EAI_NONAME","EAI_OVERFLOW","EAI_SERVICE","EAI_SOCKTYPE","EAI_SYSTEM","EPOLLERR","EPOLLET","EPOLLEXCLUSIVE","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLNVAL","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWAKEUP","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EPOLL_CTL_ADD","EPOLL_CTL_DEL","EPOLL_CTL_MOD","EPOLL_NONBLOCK","FD_CLOEXEC","FD_SETSIZE","F_DUPFD","F_DUPFD_CLOEXEC","F_GETFD","F_GETFL","F_GETLK","F_GETOWN","F_GETSIG","F_LOCK","F_OK","F_RDLCK","F_SETFD","F_SETFL","F_SETLK","F_SETLKW","F_SETOWN","F_SETSIG","F_TEST","F_TLOCK","F_ULOCK","F_UNLCK","F_WRLCK","IPPROTO_AH","IPPROTO_BEETPH","IPPROTO_COMP","IPPROTO_DCCP","IPPROTO_DSTOPTS","IPPROTO_EGP","IPPROTO_ENCAP","IPPROTO_ESP","IPPROTO_ETHERNET","IPPROTO_FRAGMENT","IPPROTO_GRE","IPPROTO_HOPOPTS","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_IDP","IPPROTO_IGMP","IPPROTO_IP","IPPROTO_IPIP","IPPROTO_IPV6","IPPROTO_MAX","IPPROTO_MH","IPPROTO_MPLS","IPPROTO_MPTCP","IPPROTO_MTP","IPPROTO_NONE","IPPROTO_PIM","IPPROTO_PUP","IPPROTO_RAW","IPPROTO_ROUTING","IPPROTO_RSVP","IPPROTO_SCTP","IPPROTO_TCP","IPPROTO_TP","IPPROTO_UDP","IPPROTO_UDPLITE","MAXADDRS","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_EXEC","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_RSYNC","O_SEARCH","O_SYNC","O_TMPFILE","O_TRUNC","O_TTY_INIT","O_WRONLY","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_LOCKS","RLIMIT_MEMLOCK","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_NLIMITS","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_SIGPENDING","RLIMIT_STACK","SOCK_CLOEXEC","SOCK_DCCP","SOCK_DGRAM","SOCK_NONBLOCK","SOCK_PACKET","SOCK_RAW","SOCK_RDM","SOCK_SEQPACKET","SOCK_STREAM","_SC_2_CHAR_TERM","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_LOCALEDEF","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_CHECKPOINT","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_2_SW_DEV","_SC_2_UPE","_SC_2_VERSION","_SC_ADVISORY_INFO","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_ARG_MAX","_SC_ASYNCHRONOUS_IO","_SC_ATEXIT_MAX","_SC_AVPHYS_PAGES","_SC_BARRIERS","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_CLOCK_SELECTION","_SC_COLL_WEIGHTS_MAX","_SC_CPUTIME","_SC_DELAYTIMER_MAX","_SC_EXPR_NEST_MAX","_SC_FSYNC","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_HOST_NAME_MAX","_SC_IOV_MAX","_SC_IPV6","_SC_JOB_CONTROL","_SC_LINE_MAX","_SC_LOGIN_NAME_MAX","_SC_MAPPED_FILES","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_MONOTONIC_CLOCK","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_NGROUPS_MAX","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_NZERO","_SC_OPEN_MAX","_SC_PAGESIZE","_SC_PAGE_SIZE","_SC_PASS_MAX","_SC_PHYS_PAGES","_SC_PRIORITIZED_IO","_SC_PRIORITY_SCHEDULING","_SC_RAW_SOCKETS","_SC_READER_WRITER_LOCKS","_SC_REALTIME_SIGNALS","_SC_REGEXP","_SC_RE_DUP_MAX","_SC_RTSIG_MAX","_SC_SAVED_IDS","_SC_SEMAPHORES","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SHARED_MEMORY_OBJECTS","_SC_SHELL","_SC_SIGQUEUE_MAX","_SC_SPAWN","_SC_SPIN_LOCKS","_SC_SPORADIC_SERVER","_SC_SS_REPL_MAX","_SC_STREAMS","_SC_STREAM_MAX","_SC_SYMLOOP_MAX","_SC_SYNCHRONIZED_IO","_SC_THREADS","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_CPUTIME","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_THREAD_ROBUST_PRIO_INHERIT","_SC_THREAD_ROBUST_PRIO_PROTECT","_SC_THREAD_SAFE_FUNCTIONS","_SC_THREAD_SPORADIC_SERVER","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_TIMEOUTS","_SC_TIMERS","_SC_TIMER_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_TTY_NAME_MAX","_SC_TYPED_MEMORY_OBJECTS","_SC_TZNAME_MAX","_SC_UIO_MAXIOV","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_V7_ILP32_OFF32","_SC_V7_ILP32_OFFBIG","_SC_V7_LP64_OFF64","_SC_V7_LPBIG_OFFBIG","_SC_VERSION","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_XOPEN_SHM","_SC_XOPEN_STREAMS","_SC_XOPEN_UNIX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_SC_XOPEN_XPG2","_SC_XOPEN_XPG3","_SC_XOPEN_XPG4","__attr","__i","__in6_union","__l","__s","__s6_addr","__s6_addr16","__s6_addr32","__ss_align","__ss_padding","__u","__vi","addrinfo","ai","ai_addr","ai_addrlen","ai_canonname","ai_family","ai_flags","ai_next","ai_protocol","ai_socktype","aibuf","aibuf_sa","blkcnt_t","blksize_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","dev_t","epoll_data","epoll_data_t","epoll_event","events","fd","fd","fd_set","fds_bits","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gid_t","in6_addr","in6_addr__bindgen_ty_1","in_addr","in_addr_t","in_port_t","ino_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","iov_base","iov_len","iovec","lock","mode_t","nlink_t","off_t","pthread_attr_t","pthread_attr_t__bindgen_ty_1","pthread_mutex_t","pthread_mutexattr_t","pthread_t","ptr","ptr","ref_","rlim_cur","rlim_max","rlim_t","rlimit","s_addr","sa","sa_data","sa_family","sa_family_t","sin","sin6","sin6_addr","sin6_family","sin6_flowinfo","sin6_port","sin6_scope_id","sin_addr","sin_family","sin_port","sin_zero","size_t","slot","sockaddr","sockaddr_in","sockaddr_in6","sockaddr_storage","socklen_t","ss_family","ssize_t","st_atime","st_blksize","st_blocks","st_ctime","st_dev","st_gid","st_ino","st_mode","st_mtime","st_nlink","st_rdev","st_size","st_uid","stat","time_t","timespec","timeval","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tv_nsec","tv_sec","tv_sec","tv_usec","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u32_","u32_","u64_","u64_","uid_t"],"q":[[0,"arceos_posix_api"],[50,"arceos_posix_api::config"],[68,"arceos_posix_api::ctypes"],[772,"core::ffi"],[773,"core::fmt"],[774,"core::net::socket_addr"],[775,"core::time"],[776,"core::result"],[777,"core::any"],[778,"arceos_posix_api::imp::net"],[779,"arceos_posix_api::imp::time"],[780,"arceos_posix_api::imp::fd_ops"],[781,"arceos_posix_api::imp::io_mpx::epoll"],[782,"arceos_posix_api::imp::task"],[783,"arceos_posix_api::imp::fs"],[784,"arceos_posix_api::imp::resources"],[785,"arceos_posix_api::imp::pipe"],[786,"arceos_posix_api::imp::pthread"],[787,"arceos_posix_api::imp::pthread::mutex"],[788,"arceos_posix_api::imp::io"],[789,"arceos_posix_api::imp::io_mpx::select"],[790,"arceos_posix_api::imp::sys"],[791,"axconfig::config"],[792,"axconfig"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,38,33,23,38,34,34,34,30,30,19,38,0,36,9,9,9,9,9,9,9,9,0,0,0,0,2,30,31,32,33,34,35,9,36,37,27,5,23,24,19,38,39,6,13,26,11,29,2,30,31,32,33,34,35,9,36,37,27,5,23,24,19,38,39,6,13,26,11,29,0,2,30,31,32,33,34,35,9,36,37,27,5,23,24,19,38,39,6,13,26,11,29,2,30,31,32,33,34,35,9,36,37,27,5,23,24,19,38,39,6,13,26,11,29,6,2,30,31,32,33,34,35,9,36,37,27,5,23,24,19,38,39,6,13,26,11,29,0,0,0,0,6,46,39,0,26,2,30,31,32,9,27,5,23,24,13,26,11,29,2,30,31,32,32,33,34,35,9,36,37,27,27,5,5,23,24,19,38,39,6,13,26,11,29,0,0,0,0,0,0,0,2,30,31,32,33,34,35,9,36,37,27,5,23,24,19,38,39,6,13,26,11,29,29,29,0,36,0,0,0,0,0,0,0,0,46,39,36,13,13,0,0,31,36,2,2,0,37,37,35,35,35,35,35,32,32,32,32,0,36,0,0,0,0,0,30,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,2,30,31,32,33,34,35,9,36,37,27,5,23,24,19,38,39,6,13,26,11,29,2,30,31,32,33,34,35,9,36,37,27,5,23,24,19,38,39,6,13,26,11,29,2,30,31,32,33,34,35,9,36,37,27,5,23,24,19,38,39,6,13,26,11,29,5,27,5,27,2,30,31,32,33,34,35,9,36,37,27,5,23,24,19,38,39,6,13,26,11,29,46,39,46,39,0],"f":"``{{bdf}b}0{{hj}b}{bb}20{{bb}b}1{{bbbl}b}{{blbb}b}{bn}{{bbA`}b}{AbAd}{{bAf}b}{{AhAhAbAb}b}{{AhA`}Ah};{{}b}{{bAj}b}=:{{bAlb}Al}{{AhAf}An}{{jj}b}{{AhbB`}b}{{{Bb{b}}}b}{{BdBf{Bl{Bh}{{Bj{Bh}}}}Bh}b}{Bhn}{{BdBh}b}{{BnC`}b}{Bnb}0{{}Bd}{{bBhA`}An}{{bBhCbb}An}{{bBhCbbdf}An}{{AhAh}b}{{}b}{{bCdCdCdCf}b}43{{bAj}b}{{bb}b}{{bbb}b}{{AhAf}b}{bCh}:{{bCjb}An}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{ce{}{}}0000000000000000000000000000000000000000000`{dd}{ClCl}{CnCn}{D`D`}{DbDb}{DdDd}{DfDf}{AbAb}{DhDh}{DjDj}{CfCf}{jj}{BnBn}{C`C`}{BfBf}{DlDl}{DnDn}{ll}{AjAj}{CdCd}{AfAf}{CjCj}{{ce}Ad{}{}}000000000000000000000`{{}d}{{}Cl}{{}Cn}{{}D`}{{}Db}{{}Dd}{{}Df}{{}Ab}{{}Dh}{{}Dj}{{}Cf}{{}j}{{}Bn}{{}C`}{{}Bf}{{}Dl}{{}Dn}{{}l}{{}Aj}{{}Cd}{{}Af}{{}Cj}`````````{{dE`}Eb}{{ClE`}Eb}{{CnE`}Eb}{{D`E`}Eb}{{AbE`}Eb}{{CfE`}Eb}{{jE`}Eb}{{BnE`}Eb}{{C`E`}Eb}{{AjE`}Eb}{{CdE`}Eb}{{AfE`}Eb}{{CjE`}Eb}{cc{}}000{EdD`}1111111{EfCf}{Efj}33333333333```````{ce{}{}}000000000000000000000`````````````````````````````````````````````````````````````0000000000000000000000{c{{Eh{e}}}{}{}}0000000000000000000000000000000000000000000````{cEj{}}000000000000000000000`````","D":"Nb","p":[[8,"c_int",772],[5,"sockaddr",68],[8,"socklen_t",68],[8,"clockid_t",68],[5,"timespec",68],[5,"epoll_event",68],[1,"never"],[1,"usize"],[5,"addrinfo",68],[1,"unit"],[5,"stat",68],[8,"c_char",772],[5,"rlimit",68],[8,"off_t",68],[8,"ssize_t",68],[8,"mode_t",68],[1,"slice"],[8,"pthread_t",68],[5,"pthread_attr_t",68],[6,"c_void",772],[17,"Output"],[1,"fn"],[5,"pthread_mutex_t",68],[5,"pthread_mutexattr_t",68],[8,"size_t",68],[5,"fd_set",68],[5,"timeval",68],[8,"c_long",772],[5,"iovec",68],[5,"sockaddr_storage",68],[5,"in_addr",68],[5,"sockaddr_in",68],[5,"in6_addr",68],[20,"in6_addr__bindgen_ty_1",68],[5,"sockaddr_in6",68],[5,"aibuf",68],[20,"aibuf_sa",68],[20,"pthread_attr_t__bindgen_ty_1",68],[20,"epoll_data",68],[5,"Formatter",773],[8,"Result",773],[5,"SocketAddrV4",774],[5,"Duration",775],[6,"Result",776],[5,"TypeId",777],[8,"epoll_data_t",68]],"r":[[2,778],[3,778],[4,779],[5,780],[6,778],[7,780],[8,780],[9,781],[10,781],[11,781],[12,782],[13,780],[14,778],[15,783],[16,778],[17,783],[18,778],[19,782],[20,784],[21,778],[22,778],[23,783],[24,783],[25,779],[26,783],[27,785],[28,786],[29,786],[30,786],[31,787],[32,787],[33,787],[34,786],[35,788],[36,778],[37,778],[38,783],[39,782],[40,789],[41,778],[42,778],[43,784],[44,778],[45,778],[46,783],[47,790],[48,788],[49,788],[50,791],[51,791],[52,791],[53,791],[54,791],[55,791],[56,791],[57,791],[58,791],[59,792],[60,791],[61,791],[62,791],[63,791],[64,791],[65,791],[66,791],[67,791]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJMCBQBFAOsBNQIAAD0CAQBKAgYAZwKdAA=="}],\
["arm_gic",{"t":"PSGPPSPSPSGNNNNNNCNNHNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Edge","GIC_MAX_IRQ","InterruptType","Level","PPI","PPI_RANGE","SGI","SGI_RANGE","SPI","SPI_RANGE","TriggerMode","borrow","borrow","borrow_mut","borrow_mut","from","from","gic_v2","into","into","translate_irq","try_from","try_from","try_into","try_into","type_id","type_id","GicCpuInterface","GicDistributor","borrow","borrow","borrow_mut","borrow_mut","configure_interrupt","cpu_num","eoi","from","from","handle_irq","iar","init","init","into","into","max_irqs","new","new","set_enable","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"arm_gic"],[27,"arm_gic::gic_v2"],[54,"core::option"],[55,"core::result"],[56,"core::any"],[57,"core::ops::function"]],"i":[7,0,0,7,2,0,2,0,2,0,0,7,2,7,2,7,2,0,7,2,0,7,2,7,2,7,2,0,0,6,9,6,9,6,6,9,6,9,9,9,6,9,6,9,6,6,9,6,6,9,6,9,6,9],"f":"```````````{ce{}{}}000{cc{}}0`11{{bd}{{f{b}}}}{c{{h{e}}}{}{}}000{cj{}}0``4444{{lbn}A`}{lb}{{AbAd}A`}66{{Abc}A`{{Af{Ad}}}}{AbAd}{lA`}{AbA`};;5{Ahl}{AhAb}{{lbAj}A`};;;;::","D":"Df","p":[[1,"usize"],[6,"InterruptType",0],[6,"Option",54],[6,"Result",55],[5,"TypeId",56],[5,"GicDistributor",27],[6,"TriggerMode",0],[1,"unit"],[5,"GicCpuInterface",27],[1,"u32"],[10,"FnOnce",57],[1,"u8"],[1,"bool"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABMABAAMAAMAFgAFAB4AAwAxAAUA"}],\
["arm_pl011",{"t":"CFNNNNNNNNNNNNN","n":["pl011","Pl011Uart","ack_interrupts","borrow","borrow_mut","from","getchar","init","into","is_receive_interrupt","new","putchar","try_from","try_into","type_id"],"q":[[0,"arm_pl011"],[1,"arm_pl011::pl011"],[15,"core::option"],[16,"core::result"],[17,"core::any"]],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":"``{bd}{ce{}{}}0{cc{}}{b{{h{f}}}}32{bj}{fb}{{bf}d}{c{{l{e}}}{}{}}0{cn{}}","D":"Af","p":[[5,"Pl011Uart",1],[1,"unit"],[1,"u8"],[6,"Option",15],[1,"bool"],[6,"Result",16],[5,"TypeId",17]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAQAEAAAAAQABQANAA4ADwA="}],\
["axalloc",{"t":"FFNNNNNNNNNNNNNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNNN","n":["GlobalAllocator","GlobalPage","add_memory","alloc","alloc","alloc","alloc_contiguous","alloc_pages","alloc_zero","as_mut_ptr","as_ptr","as_slice","as_slice_mut","available_bytes","available_pages","borrow","borrow","borrow_mut","borrow_mut","dealloc","dealloc","dealloc_pages","drop","fill","fmt","from","from","global_add_memory","global_allocator","global_init","init","into","into","name","new","size","start_paddr","start_vaddr","try_from","try_from","try_into","try_into","type_id","type_id","used_bytes","used_pages","zero"],"q":[[0,"axalloc"],[47,"allocator"],[48,"core::alloc::layout"],[49,"core::ptr::non_null"],[50,"axalloc::page"],[51,"axerrno"],[52,"core::fmt"],[53,"memory_addr"],[54,"core::ops::function"],[55,"core::result"],[56,"core::any"]],"i":[0,0,1,1,1,7,7,1,7,7,7,7,7,1,1,1,7,1,7,1,1,1,7,7,7,1,7,0,0,0,1,1,7,1,1,7,7,7,1,7,1,7,1,7,1,1,7],"f":"``{{bdd}f}{{bh}j}{{bh}{{f{{l{j}}}}}}{{}{{A`{n}}}}{{dd}{{A`{n}}}}{{bdd}{{f{d}}}}2{nj}0{n{{Ab{j}}}}0{bd}0{ce{}{}}000{{b{l{j}}h}Ad}{{bjh}Ad}{{bdd}Ad}{nAd}{{nj}Ad}{{nAf}Ah}{cc{}}0{{dd}f}{{}b}{{dd}Ad}7::{bAj}2{nd}{{nc}Al{{Bb{An}{{B`{Al}}}}}}{nAn}{c{{Bd{e}}}{}{}}000{cBf{}}0{bd}0=","D":"Dd","p":[[5,"GlobalAllocator",0],[1,"usize"],[8,"AllocResult",47],[5,"Layout",48],[1,"u8"],[5,"NonNull",49],[5,"GlobalPage",0,50],[8,"AxResult",51],[1,"slice"],[1,"unit"],[5,"Formatter",52],[8,"Result",52],[1,"str"],[5,"PhysAddr",53],[5,"VirtAddr",53],[17,"Output"],[10,"FnOnce",54],[6,"Result",55],[5,"TypeId",56]],"r":[[1,50]],"b":[[3,"impl-GlobalAlloc-for-GlobalAllocator"],[4,"impl-GlobalAllocator"],[19,"impl-GlobalAllocator"],[20,"impl-GlobalAlloc-for-GlobalAllocator"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA0ABgAEAAAAEAADABUAAAAXAAAAGQAAACcABQA="}],\
["axconfig",{"t":"SSSSSSSSSSSSSSSSSS","n":["ARCH","FAMILY","KERNEL_BASE_PADDR","KERNEL_BASE_VADDR","MMIO_REGIONS","PCI_BUS_END","PCI_ECAM_BASE","PCI_RANGES","PHYS_MEMORY_BASE","PHYS_MEMORY_END","PHYS_MEMORY_SIZE","PHYS_VIRT_OFFSET","PLATFORM","SMP","TASK_STACK_SIZE","TICKS_PER_SEC","TIMER_FREQUENCY","VIRTIO_MMIO_REGIONS"],"q":[[0,"axconfig"],[18,"axconfig::config"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````````````````","D":"Bf","p":[],"r":[[0,18],[1,18],[2,18],[3,18],[4,18],[5,18],[6,18],[7,18],[8,18],[10,18],[11,18],[12,18],[13,18],[14,18],[15,18],[16,18],[17,18]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["axdisplay",{"t":"EHHH","n":["DisplayInfo","framebuffer_flush","framebuffer_info","init_display"],"q":[[0,"axdisplay"],[4,"driver_display"],[5,"axdriver::dummy"],[6,"axdriver::structs::imp"]],"i":[0,0,0,0],"f":"`{{}b}{{}d}{{{h{f}}}b}","D":"h","p":[[1,"unit"],[5,"DisplayInfo",4],[8,"AxDisplayDevice",5],[5,"AxDeviceContainer",6]],"r":[[0,4]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAEA"}],\
["axdriver",{"t":"FIFGIIPPPONNNNNNNNNNNNONNNNNNNHNNNNNOCNNNNNNNNNNPPIIIPKPKPGIGPKPPPPKPPPPMMNNNNMMNNMMNMMMNNNNMNNMMMMMMMMNMNNNNMNNM","n":["AllDevices","AxBlockDevice","AxDeviceContainer","AxDeviceEnum","AxDisplayDevice","AxNetDevice","Block","Display","Net","block","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","default","deref","device_model","device_name","device_type","display","from","from","from","from_block","from_display","from_net","from_one","init_drivers","into","into","into","is_empty","len","net","prelude","take_one","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Again","AlreadyExists","AxBlockDevice","AxDisplayDevice","AxNetDevice","BadState","BaseDriverOps","Block","BlockDriverOps","Char","DevError","DevResult","DeviceType","Display","DisplayDriverOps","Err","InvalidParam","Io","Net","NetDriverOps","NoMemory","Ok","ResourceBusy","Unsupported","alloc_tx_buffer","block_size","borrow","borrow","borrow_mut","borrow_mut","can_receive","can_transmit","clone","clone_into","device_name","device_type","eq","fb","flush","flush","fmt","fmt","from","from","info","into","into","mac_address","need_flush","num_blocks","read_block","receive","recycle_rx_buffer","recycle_tx_buffers","rx_queue_size","to_owned","transmit","try_from","try_from","try_into","try_into","tx_queue_size","type_id","type_id","write_block"],"q":[[0,"axdriver"],[48,"axdriver::prelude"],[113,"axdriver::structs::imp"],[114,"axdriver::structs"],[115,"driver_common"],[116,"driver_block"],[117,"driver_display"],[118,"driver_net"],[119,"core::option"],[120,"core::result"],[121,"core::any"],[122,"core::fmt"]],"i":[0,0,0,0,0,0,4,4,4,2,1,4,2,1,4,2,1,2,1,2,4,4,2,1,4,2,4,4,4,1,0,1,4,2,1,1,2,0,1,1,4,2,1,4,2,1,4,2,15,15,0,0,0,15,0,5,0,5,0,0,0,5,0,26,15,15,5,0,15,26,15,15,8,6,5,15,5,15,8,8,5,5,17,17,5,7,7,6,5,15,5,15,7,5,15,8,7,6,6,8,8,8,8,5,8,5,15,5,15,8,5,15,6],"f":"``````````{ce{}{}}00000{{}{{b{c}}}{}}{{}d}{{{b{c}}}e{}{}}{{}f}{hf}{hj}`{cc{}}00{chl}{chn}{chA`}{c{{b{c}}}{}}9;;;{{{b{c}}}Ab{}}{{{b{c}}}Ad{}}``{{{b{c}}}{{Af{c}}}{}}{c{{Ah{e}}}{}{}}00000{cAj{}}00````````````````````````{{A`Ad}{{Ah{AlAn}}}}{lAd}{ce{}{}}000{A`Ab}0{jj}{{ce}B`{}{}}{Bbf}{Bbj}{{jj}Ab}{nBd}{n{{Ah{B`An}}}}{l{{Ah{B`An}}}}{{jBf}{{Ah{B`Bh}}}}{{AnBf}{{Ah{B`Bh}}}}{cc{}}0{nBj}=={A`Bl}{nAb}{lBn}{{lBn{Cb{C`}}}{{Ah{B`An}}}}{A`{{Ah{AlAn}}}}{{A`Al}{{Ah{B`An}}}}{A`{{Ah{B`An}}}}{A`Ad}{ce{}{}}3{c{{Ah{e}}}{}{}}0002{cAj{}}07","D":"Il","p":[[5,"AxDeviceContainer",0,113],[5,"AllDevices",0],[1,"str"],[6,"AxDeviceEnum",0,114],[6,"DeviceType",48,115],[10,"BlockDriverOps",48,116],[10,"DisplayDriverOps",48,117],[10,"NetDriverOps",48,118],[1,"bool"],[1,"usize"],[6,"Option",119],[6,"Result",120],[5,"TypeId",121],[5,"NetBufPtr",118],[6,"DevError",48,115],[1,"unit"],[10,"BaseDriverOps",48,115],[5,"FrameBuffer",117],[5,"Formatter",122],[5,"Error",122],[5,"DisplayInfo",117],[5,"EthernetAddress",118],[1,"u64"],[1,"u8"],[1,"slice"],[8,"DevResult",48]],"r":[[1,113],[2,113],[3,114],[4,113],[5,113],[50,113],[51,113],[52,113],[54,115],[56,116],[58,115],[59,115],[60,115],[62,117],[67,118]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACMACgALAAgAFQABACgACABLAAMAUQABAFUAAABZAAEAaAAAAGoAAwBvAAEA"}],\
["axerrno",{"t":"PPGIPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGIPPPPPPPPPPPPPNNQQNNNNNNNNQNNNNNNNNNNNNNNNNNNN","n":["AddrInUse","AlreadyExists","AxError","AxResult","BadAddress","BadState","ConnectionRefused","ConnectionReset","DirectoryNotEmpty","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTTY","ENOTUNIQ","ENXIO","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUCLEAN","EUNATCH","EUSERS","EXDEV","EXFULL","Err","Err","InvalidData","InvalidInput","Io","IsADirectory","LinuxError","LinuxResult","NoMemory","NotADirectory","NotConnected","NotFound","Ok","Ok","PermissionDenied","ResourceBusy","StorageFull","UnexpectedEof","Unsupported","WouldBlock","WriteZero","as_str","as_str","ax_err","ax_err_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","code","code","ensure","eq","eq","fmt","fmt","fmt","fmt","from","from","from","into","into","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"axerrno"],[193,"axerrno::linux_errno"],[194,"core::fmt"],[195,"core::result"],[196,"core::any"]],"i":[3,3,0,0,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,11,3,3,3,3,0,0,3,3,3,3,10,11,3,3,3,3,3,3,3,1,3,0,0,1,3,1,3,1,3,1,3,0,1,3,1,1,3,3,1,1,3,1,3,1,1,3,3,1,3,1,3],"f":"`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{bd}{fd}``{ce{}{}}000{bb}{ff}{bh}{fh}`{{bb}j}{{ff}j}{{bl}n}0{{fl}n}0{cc{}}{fb}1::{c{{A`{e}}}{}{}}{h{{A`{bc}}}{}}{h{{A`{fc}}}{}}222{cAb{}}0","D":"AEj","p":[[6,"LinuxError",0,193],[1,"str"],[6,"AxError",0],[1,"i32"],[1,"bool"],[5,"Formatter",194],[8,"Result",194],[6,"Result",195],[5,"TypeId",196],[8,"AxResult",0],[8,"LinuxResult",0]],"r":[[146,193]],"b":[[176,"impl-Debug-for-LinuxError"],[177,"impl-Display-for-LinuxError"],[178,"impl-Display-for-AxError"],[179,"impl-Debug-for-AxError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABQABACmAAUArwAFALYAAAC6AAcA"}],\
["axfeat",{"t":"","n":[],"q":[],"i":[],"f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["axfs",{"t":"CCHPPPFFPFPIFFIFPPNNNNNNNNNNNNNNHNNNNNHHNNHNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNHNNHHNHHHNHNNNNNNNNNNNNNNNNNNNNNNHNNPPPIFFPFPIIIKFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["api","fops","init_filesystems","BlockDevice","CharDevice","Dir","DirBuilder","DirEntry","Fifo","File","File","FileType","Metadata","OpenOptions","Permissions","ReadDir","Socket","SymLink","append","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonicalize","clone","clone_into","create","create","create","create_dir","create_dir_all","create_new","create_new","current_dir","default","file_name","file_type","file_type","flush","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","is_dir","is_file","len","metadata","metadata","new","new","next","open","open","options","path","permissions","read","read","read","read_dir","read_to_string","recursive","remove_dir","remove_file","rename","seek","set_current_dir","set_len","size","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","BlockDevice","CharDevice","Dir","DirEntry","Directory","Disk","Fifo","File","File","FileAttr","FilePerm","FileType","MyFileSystemIf","OpenOptions","Socket","SymLink","append","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create","create_dir","create_file","create_new","drop","drop","flush","fmt","from","from","from","from","get_attr","into","into","into","into","new","new","new_myfs","open","open_dir","open_dir_at","open_file_at","position","read","read","read_at","read_dir","read_one","remove_dir","remove_file","rename","seek","set_position","size","to_owned","truncate","truncate","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","write","write_at","write_one"],"q":[[0,"axfs"],[3,"axfs::api"],[114,"axfs::fops"],[196,"axdriver::dummy"],[197,"axdriver::structs::imp"],[198,"axfs::api::file"],[199,"alloc::string"],[200,"axerrno"],[201,"axfs::api::dir"],[202,"core::fmt"],[203,"core::option"],[204,"alloc::vec"],[205,"axio"],[206,"core::result"],[207,"core::any"],[208,"core::convert"],[209,"axfs_vfs"],[210,"axfs::dev"],[211,"alloc::sync"],[212,"driver_common"],[213,"axfs::fs::myfs"]],"i":[0,0,0,14,14,14,0,0,14,0,14,0,0,0,0,0,14,14,4,6,17,13,11,6,12,4,17,13,11,6,12,4,0,4,4,11,12,4,0,0,11,4,0,12,13,13,6,11,13,6,12,4,17,13,11,6,12,4,17,13,11,6,12,4,17,6,6,6,0,11,12,4,17,11,4,11,13,6,0,11,4,0,0,12,0,0,0,11,0,11,6,4,4,17,13,11,6,12,4,17,13,11,6,12,4,17,13,11,6,12,4,0,11,4,38,38,38,0,0,0,38,0,38,0,0,0,0,0,38,38,28,33,31,29,28,33,31,29,28,28,28,28,29,29,28,31,29,31,28,33,31,29,28,31,33,31,29,28,33,28,39,31,29,29,29,33,31,28,31,29,33,29,29,29,31,33,33,28,31,28,33,31,29,28,33,31,29,28,33,31,29,28,31,28,31,33],"f":"``{{{d{b}}}f}```````````````{{hj}h}{ln}{ce{}{}}00000000000{A`{{Ad{Ab}}}}{hh}{{ce}f{}{}}{A`{{Ad{Af}}}}{{AhA`}{{Ad{f}}}}7{A`{{Ad{f}}}}028{{}{{Ad{Ab}}}}{{}Ah}{AjAb}{AjAl}{lAl}{Af{{Ad{f}}}}{{AjAn}B`}{{lAn}B`}{{AhAn}B`}{{hAn}B`}{cc{}}00000{ce{}{}}000000{lj}0{ln}{A`{{Ad{l}}}}{Af{{Ad{l}}}}>{{}h}{Bb{{Bd{{Ad{Aj}}}}}}{A`{{Ad{Af}}}}{{hA`}{{Ad{Af}}}}3{AjAb}{lBf}{A`{{Ad{{Bj{Bh}}}}}}{{Af{Bl{Bh}}}{{Ad{Bn}}}}{{hj}h}{A`{{Ad{Bb}}}}{A`{{Ad{Ab}}}}{{Ahj}Ah}{A`{{Ad{f}}}}0{{A`A`}{{Ad{f}}}}{{AfC`}{{Ad{n}}}}2{{Afn}{{Ad{f}}}}{ln}{ce{}{}}9{c{{Cb{e}}}{}{}}00000000000{cCd{}}00000{{A`c}{{Ad{f}}}{{Cf{{Bl{Bh}}}}}}=<````````````````{{Chj}f}44444444{ChCh}{{ce}f{}{}}2{{CjA`}Ad}{{CjA`}{{Ad{Cl}}}}4{Cnf}{Cjf}{CnAd}{{ChAn}B`}{cc{}}000{Cn{{Ad{D`}}}}>>>>{bDb}{{}Ch}{Db{{Df{Dd}}}}{{A`Ch}{{Ad{Cn}}}}{{A`Ch}{{Ad{Cj}}}}{{CjA`Ch}{{Ad{Cj}}}}{{CjA`Ch}{{Ad{Cn}}}}{Dbn}{{Cn{Bl{Bh}}}{{Ad{Bn}}}}{{Chj}f}{{Cnn{Bl{Bh}}}{{Ad{Bn}}}}{{Cj{Bl{Dh}}}{{Ad{Bn}}}}{{Db{Bl{Bh}}}{{Dj{Bn}}}}{{CjA`}Ad}0{{CjA`A`}Ad}{{CnC`}{{Ad{n}}}}{{Dbn}f}9{ce{}{}}{{Cnn}Ad}9{c{{Cb{e}}}{}{}}0000000{cCd{}}000<;:8","D":"On","p":[[8,"AxBlockDevice",196],[5,"AxDeviceContainer",197],[1,"unit"],[5,"OpenOptions",3,198],[1,"bool"],[5,"Metadata",3,198],[1,"u64"],[1,"str"],[5,"String",199],[8,"AxResult",200],[5,"File",3,198],[5,"DirBuilder",3,201],[5,"DirEntry",3,201],[8,"FileType",3,198],[5,"Formatter",202],[8,"Result",202],[5,"ReadDir",3,201],[6,"Option",203],[8,"Permissions",3,198],[1,"u8"],[5,"Vec",204],[1,"slice"],[1,"usize"],[6,"SeekFrom",205],[6,"Result",206],[5,"TypeId",207],[10,"AsRef",208],[5,"OpenOptions",114],[5,"Directory",114],[8,"VfsNodeRef",209],[5,"File",114],[8,"FileAttr",114],[5,"Disk",114,210],[10,"VfsOps",209],[5,"Arc",211],[8,"DirEntry",114],[8,"DevResult",212],[8,"FileType",114],[10,"MyFileSystemIf",114]],"r":[[6,201],[7,201],[9,198],[11,198],[12,198],[13,198],[14,198],[15,201],[119,210],[126,213]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEUAEAAVAAsAIgABACwAAAAwAAQAQQAAAEkAAABQAAAAWAAAAFwAAABeABEAcQAAAIQACQCSAAEAlQAAALIAAAC1AAsA"}],\
["axfs_devfs",{"t":"FFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["DeviceFileSystem","DirNode","NullDev","ZeroDev","add","add","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","create","create","create","default","from","from","from","from","fsync","get_attr","get_attr","get_attr","into","into","into","into","lookup","lookup","lookup","mkdir","mkdir","mount","new","parent","read_at","read_at","read_at","read_dir","read_dir","read_dir","remove","remove","remove","root_dir","truncate","truncate","truncate","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write_at","write_at","write_at"],"q":[[0,"axfs_devfs"],[69,"axfs_devfs::dir"],[70,"axfs_vfs"],[71,"core::any"],[72,"axfs_devfs::null"],[73,"axfs_devfs::zero"],[74,"axfs_vfs::structs"],[75,"alloc::sync"],[76,"core::option"],[77,"core::result"]],"i":[0,0,0,0,1,5,1,7,8,1,7,8,5,1,7,8,5,1,7,8,5,1,7,8,5,1,1,7,8,1,7,8,5,1,7,8,1,5,5,5,1,1,7,8,1,7,8,1,7,8,5,1,7,8,1,7,8,5,1,7,8,5,1,7,8,5,1,7,8],"f":"````{{bdf}h}{{jdf}h}{bl}{nl}{A`l}{ce{}{}}0000000{{bdAb}Ad}{{ndAb}Ad}{{A`dAb}Ad}{{}j}{cc{}}000{bAd}{b{{Ad{Af}}}}{n{{Ad{Af}}}}{A`{{Ad{Af}}}}9999{{{Ah{b}}d}{{Ad{f}}}}{{{Ah{n}}d}{{Ad{f}}}}{{{Ah{A`}}d}{{Ad{f}}}}{{{Ah{b}}d}{{Ah{b}}}}{{jd}{{Ah{b}}}}{{jdf}Ad};{b{{Aj{f}}}}{{bAl{B`{An}}}{{Ad{Bb}}}}{{nAl{B`{An}}}{{Ad{Bb}}}}{{A`Al{B`{An}}}{{Ad{Bb}}}}{{bBb{B`{Bd}}}{{Ad{Bb}}}}{{nBb{B`{Bd}}}{{Ad{Bb}}}}{{A`Bb{B`{Bd}}}{{Ad{Bb}}}}{{bd}Ad}{{nd}Ad}{{A`d}Ad}{jf}{{bAl}Ad}{{nAl}Ad}{{A`Al}Ad}{c{{Bf{e}}}{}{}}0000000{cBh{}}000>=<","D":"Bd","p":[[5,"DirNode",0,69],[1,"str"],[8,"VfsNodeRef",70],[1,"unit"],[5,"DeviceFileSystem",0],[10,"Any",71],[5,"NullDev",0,72],[5,"ZeroDev",0,73],[6,"VfsNodeType",74],[8,"VfsResult",70],[5,"VfsNodeAttr",74],[5,"Arc",75],[6,"Option",76],[1,"u64"],[1,"u8"],[1,"slice"],[1,"usize"],[5,"VfsDirEntry",74],[6,"Result",77],[5,"TypeId",71]],"r":[[1,69],[2,72],[3,73]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADMABQAHAA4AGgADACIAAgAnAAAAKQAcAA=="}],\
["axfs_ramfs",{"t":"FFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["DirNode","FileNode","RamFileSystem","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","create","create","create_node","default","exist","from","from","from","fsync","get_attr","get_attr","get_entries","into","into","into","lookup","lookup","mount","new","parent","read_at","read_at","read_dir","read_dir","remove","remove","remove_node","root_dir","root_dir_node","truncate","truncate","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write_at","write_at"],"q":[[0,"axfs_ramfs"],[53,"axfs_ramfs::dir"],[54,"core::any"],[55,"axfs_ramfs::file"],[56,"axfs_vfs::structs"],[57,"axfs_vfs"],[58,"alloc::string"],[59,"alloc::vec"],[60,"alloc::sync"],[61,"core::option"],[62,"core::result"]],"i":[0,0,0,1,3,1,3,7,1,3,7,1,3,1,7,1,1,3,7,1,1,3,1,1,3,7,1,3,7,7,1,1,3,1,3,1,3,1,7,7,1,3,1,3,7,1,3,7,1,3,7,1,3],"f":"```{bd}{fd}{ce{}{}}00000{{bhj}l}{{fhj}l}1{{}n}{{bh}A`}{cc{}}00{bl}{b{{l{Ab}}}}{f{{l{Ab}}}}{b{{Af{Ad}}}}999{{{Ah{b}}h}{{l{Aj}}}}{{{Ah{f}}h}{{l{Aj}}}}{{nhAj}l}9{b{{Al{Aj}}}}{{bAn{Bb{B`}}}{{l{Bd}}}}{{fAn{Bb{B`}}}{{l{Bd}}}}{{bBd{Bb{Bf}}}{{l{Bd}}}}{{fBd{Bb{Bf}}}{{l{Bd}}}}{{bh}l}{{fh}l}1{nAj}{n{{Ah{b}}}}{{bAn}l}{{fAn}l}{c{{Bh{e}}}{}{}}00000{cBj{}}00;:","D":"B`","p":[[5,"DirNode",0,53],[10,"Any",54],[5,"FileNode",0,55],[1,"str"],[6,"VfsNodeType",56],[8,"VfsResult",57],[5,"RamFileSystem",0],[1,"bool"],[5,"VfsNodeAttr",56],[5,"String",58],[5,"Vec",59],[5,"Arc",60],[8,"VfsNodeRef",57],[6,"Option",61],[1,"u64"],[1,"u8"],[1,"slice"],[1,"usize"],[5,"VfsDirEntry",56],[6,"Result",62],[5,"TypeId",54]],"r":[[0,53],[1,55]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACUABwAEAAkADwAAABQAAgAbAAIAHwAGACcAAAApAAwA"}],\
["axfs_vfs",{"t":"PPPPPPPPPPPPPFTTTPPPPPPPPTTTTTTPPPPPPPPFIFKFIGKIPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNH","n":["AddrInUse","AlreadyExists","BadAddress","BadState","BlockDevice","CharDevice","ConnectionRefused","ConnectionReset","Dir","DirectoryNotEmpty","Err","Fifo","File","FileSystemInfo","GROUP_EXEC","GROUP_READ","GROUP_WRITE","InvalidData","InvalidInput","Io","IsADirectory","NoMemory","NotADirectory","NotConnected","NotFound","OTHER_EXEC","OTHER_READ","OTHER_WRITE","OWNER_EXEC","OWNER_READ","OWNER_WRITE","Ok","PermissionDenied","ResourceBusy","Socket","StorageFull","SymLink","UnexpectedEof","Unsupported","VfsDirEntry","VfsError","VfsNodeAttr","VfsNodeOps","VfsNodePerm","VfsNodeRef","VfsNodeType","VfsOps","VfsResult","WouldBlock","WriteZero","all","as_any","as_char","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","blocks","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","complement","contains","create","default","default_dir","default_file","difference","empty","entry_type","eq","extend","file_type","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","fsync","get_attr","impl_vfs_dir_default","impl_vfs_non_dir_default","insert","intersection","intersects","into","into","into","into","into","into_iter","is_all","is_block_device","is_char_device","is_dir","is_dir","is_empty","is_fifo","is_file","is_file","is_socket","is_symlink","iter","iter_names","lookup","mode","mount","name_as_bytes","new","new","new_dir","new_file","not","open","owner_executable","owner_readable","owner_writable","parent","path","perm","read_at","read_dir","release","remove","remove","rename","root_dir","rwx_buf","set","set_perm","size","statfs","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","toggle","truncate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","umount","union","write_at","canonicalize"],"q":[[0,"axfs_vfs"],[189,"axfs_vfs::path"],[190,"axfs_vfs::structs"],[191,"core::any"],[192,"core::iter::traits::collect"],[193,"core::fmt"],[194,"core::option"],[195,"bitflags::iter"],[196,"alloc::sync"],[197,"core::result"],[198,"alloc::string"]],"i":[33,33,33,33,4,4,33,33,4,33,12,4,4,0,1,1,1,33,33,33,33,33,33,33,33,1,1,1,1,1,1,12,33,33,4,33,4,33,33,0,0,0,0,0,0,0,0,0,33,33,1,2,4,1,1,1,1,1,1,1,1,8,29,13,8,1,4,29,13,8,1,4,8,1,4,8,1,4,1,1,2,13,1,1,1,1,13,4,1,8,8,1,1,1,1,1,4,18,29,13,8,1,4,1,1,1,1,1,1,2,2,0,0,1,1,1,29,13,8,1,4,1,1,4,4,8,4,1,4,8,4,4,4,1,1,2,1,18,13,13,8,8,8,1,2,1,1,1,2,0,8,2,2,2,2,1,2,18,1,1,8,8,18,1,1,1,8,1,4,1,2,29,13,8,1,4,29,13,8,1,4,29,13,8,1,4,18,1,2,0],"f":"``````````````````````````````````````````````````{{}b}{df}{hj}{{bb}b}{{bb}l}10{bn}021{A`Ab}{ce{}{}}000000000{A`A`}{bb}{hh}{{ce}l{}{}}002{{bb}Ad}{{dAfh}Ah}{{}Aj}>>;>{Ajh}{{hh}Ad}{{bc}l{{An{}{{Al{b}}}}}}{A`h}{{A`B`}Bb}{{bB`}Bb}0000{{hB`}Bb}{BdAh}{cc{}}0000{n{{Bf{b}}}}{nb}00{cb{{An{}{{Al{b}}}}}}{Af{{Bf{b}}}}{dAh}{d{{Ah{A`}}}}``{{bb}l}{{bb}b}{{bb}Ad}{ce{}{}}0000{bc{}}{bAd}{hAd}0{A`Ad}1210111{b{{Bh{b}}}}{b{{Bj{b}}}}{{{Bl{d}}Af}{{Ah{Bn}}}}{bC`}{{BdAfBn}Ah}{Aj{{Cd{Cb}}}}{{Afh}Aj}{{bhAbAb}A`}{{AbAb}A`}0{bb}{dAh}==={d{{Bf{Bn}}}}`{A`b}{{dAb{Cd{Cb}}}{{Ah{Cf}}}}{{dCf{Cd{Aj}}}{{Ah{Cf}}}}4{{dAf}Ah}{{bb}l}{{dAfAf}Ah}{BdBn}{b{{Ch{Cb}}}}{{bbAd}l}{{A`b}l}{A`Ab}{Bd{{Ah{Cj}}}}{{bb}b}80{ce{}{}}009{{dAb}Ah}{c{{Cl{e}}}{}{}}000000000{cCn{}}0000{BdAh}5{{dAb{Cd{Cb}}}{{Ah{Cf}}}}{AfD`}","D":"ABd","p":[[5,"VfsNodePerm",0,190],[10,"VfsNodeOps",0],[10,"Any",191],[6,"VfsNodeType",0,190],[1,"char"],[1,"unit"],[1,"u16"],[5,"VfsNodeAttr",0,190],[1,"u64"],[1,"bool"],[1,"str"],[8,"VfsResult",0],[5,"VfsDirEntry",0,190],[17,"Item"],[10,"IntoIterator",192],[5,"Formatter",193],[8,"Result",193],[10,"VfsOps",0],[6,"Option",194],[5,"Iter",195],[5,"IterNames",195],[5,"Arc",196],[8,"VfsNodeRef",0],[1,"u32"],[1,"u8"],[1,"slice"],[1,"usize"],[1,"array"],[5,"FileSystemInfo",0,190],[6,"Result",197],[5,"TypeId",191],[5,"String",198],[8,"VfsError",0]],"r":[[13,190],[39,190],[41,190],[43,190],[45,190]],"b":[[57,"impl-VfsNodePerm"],[58,"impl-Flags-for-VfsNodePerm"],[91,"impl-UpperHex-for-VfsNodePerm"],[92,"impl-Debug-for-VfsNodePerm"],[93,"impl-Octal-for-VfsNodePerm"],[94,"impl-LowerHex-for-VfsNodePerm"],[95,"impl-Binary-for-VfsNodePerm"],[104,"impl-Flags-for-VfsNodePerm"],[105,"impl-VfsNodePerm"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACwACAA7AAAAPwAPAFgAAABbAAYAaQAAAHoAAACnAAIArAAOAA=="}],\
["axhal",{"t":"CCCCCCCCHHCCCFFFFTTTTFFFTTTNNNNNNNNNNNNNNNNNNONHHOOOOOHNNNNNNNONNNNNNNOOOOHNONNNNNNNOHNONNNOONNNNNNOOOOOOOOOOOOOOOHHOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNOHHHOHHHHHHHIHHHTTTFFEETTTETNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNHONOHNNONNNNNNNNNNNHHHEEIEFENNNNNNNNNNFTTSTSTSSSTSITNNNNNNNNNNNNNHHNNNNNNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNHNNNNNNNHNNNNNNFNNNNNNNNNNKM","n":["arch","console","cpu","irq","mem","misc","mp","paging","platform_init","platform_init_secondary","time","tls","trap","ExtendedState","FxsaveArea","GdtStruct","IdtStruct","KCODE32_SELECTOR","KCODE64_SELECTOR","KDATA_SELECTOR","TSS_SELECTOR","TaskContext","TaskStateSegment","TrapFrame","UCODE32_SELECTOR","UCODE64_SELECTOR","UDATA_SELECTOR","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cs","default","disable_irqs","enable_irqs","error_code","ext_state","fcw","fdp","fip","flush_tlb","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fop","from","from","from","from","from","from","from","fs_base","fsw","ftw","fxsave_area","halt","init","interrupt_stack_table","into","into","into","into","into","into","into","iomap_base","irqs_enabled","is_user","kstack_top","load","load","load_tss","mxcsr","mxcsr_mask","new","new","new","new","pointer","pointer","privilege_stack_table","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","read_page_table_root","read_thread_pointer","rflags","rip","rsi","rsp","rsp","ss","st","switch_to","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vector","wait_for_irqs","write_page_table_root","write_thread_pointer","xmm","getchar","putchar","write_bytes","current_task_ptr","set_current_task_ptr","this_cpu_id","this_cpu_is_bsp","IrqHandler","dispatch_irq","register_handler","set_enable","DEVICE","EXECUTE","FREE","MemRegion","MemRegionFlags","PAGE_SIZE_4K","PhysAddr","READ","RESERVED","UNCACHED","VirtAddr","WRITE","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","complement","contains","difference","empty","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","insert","intersection","intersects","into","into","into_iter","is_all","is_empty","iter","iter_names","memory_regions","name","not","paddr","phys_to_virt","remove","set","size","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","virt_to_phys","terminate","start_secondary_cpu","MappingFlags","PageSize","PageTable","PagingError","PagingIfImpl","PagingResult","alloc_frame","borrow","borrow_mut","dealloc_frame","from","into","phys_to_virt","try_from","try_into","type_id","Duration","MAX","MICROSECOND","MICROS_PER_SEC","MILLISECOND","MILLIS_PER_SEC","NANOSECOND","NANOS_PER_MICROS","NANOS_PER_MILLIS","NANOS_PER_SEC","SECOND","TIMER_IRQ_NUM","TimeValue","ZERO","abs_diff","add","add_assign","as_micros","as_millis","as_millis_f32","as_millis_f64","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow_mut","busy_wait","busy_wait_until","checked_add","checked_div","checked_mul","checked_sub","clone","clone_into","cmp","current_ticks","current_time","current_time_nanos","default","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","eq","fmt","from","from_days","from_hours","from_micros","from_millis","from_mins","from_nanos","from_secs","from_secs_f32","from_secs_f64","from_weeks","hash","into","is_zero","mul","mul_assign","mul_f32","mul_f64","nanos_to_ticks","new","partial_cmp","saturating_add","saturating_mul","saturating_sub","set_oneshot_timer","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","ticks_to_nanos","to_owned","try_from","try_from_secs_f32","try_from_secs_f64","try_into","type_id","TlsArea","alloc","borrow","borrow_mut","drop","from","into","tls_ptr","try_from","try_into","type_id","TrapHandler","handle_irq"],"q":[[0,"axhal"],[13,"axhal::arch"],[152,"axhal::console"],[155,"axhal::cpu"],[159,"axhal::irq"],[163,"axhal::mem"],[238,"axhal::misc"],[239,"axhal::mp"],[240,"axhal::paging"],[256,"axhal::time"],[343,"axhal::tls"],[354,"axhal::trap"],[356,"axhal::arch::x86_64::context"],[357,"x86_64::structures::tss"],[358,"memory_addr"],[359,"core::option"],[360,"core::fmt"],[361,"axhal::arch::x86_64::gdt"],[362,"axhal::arch::x86_64::idt"],[363,"core::result"],[364,"x86_64::structures"],[365,"core::any"],[366,"core::iter::traits::collect"],[367,"bitflags::iter"],[368,"core::iter::traits::iterator"],[369,"core::time"],[370,"core::cmp"],[371,"core::hash"],[372,"axhal::platform::x86_pc"],[373,"axhal::arch::x86_64"],[374,"axhal::platform::x86_pc::uart16550"],[375,"axhal::platform::x86_pc::apic"],[376,"axhal::platform::x86_pc::misc"],[377,"axhal::platform::x86_pc::mp"],[378,"page_table_entry"],[379,"page_table"],[380,"axhal::platform::x86_pc::time"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,9,9,9,6,9,10,2,11,12,3,6,9,10,2,11,12,3,2,3,2,3,2,2,0,0,2,12,11,11,11,0,6,9,10,2,11,12,3,11,6,9,10,2,11,12,3,12,11,11,6,0,12,3,6,9,10,2,11,12,3,3,0,2,12,9,10,9,11,11,9,10,12,3,9,10,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,2,2,2,2,12,2,11,12,2,3,6,9,10,2,11,12,3,6,9,10,2,11,12,3,6,9,10,2,11,12,3,2,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,23,23,23,0,0,0,0,23,23,23,0,23,23,23,23,23,23,23,23,23,23,23,26,23,26,23,23,23,23,23,26,23,23,23,23,23,26,23,26,23,23,23,23,23,23,23,23,23,23,26,23,23,23,23,23,0,26,23,26,0,23,23,26,23,23,23,23,23,26,23,26,23,26,23,0,0,0,0,0,0,0,0,0,43,43,43,43,43,43,43,43,43,43,0,32,32,0,32,0,32,0,0,0,32,0,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,32,32,32,32,32,32,32,0,0,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,32,32,32,32,32,0,32,32,32,32,32,32,32,0,32,32,32,32,32,32,0,42,42,42,42,42,42,42,42,42,42,0,44],"f":"````````{{}b}0`````````````````{ce{}{}}0000000000000{dd}{ff}{{ce}b{}{}}0`{{}d}55`````{{{j{h}}}b}{{ln}A`}{{Abn}A`}{{Adn}A`}{{dn}A`}{{Afn}A`}{{Ahn}A`}{{fn}{{Al{bAj}}}}`{cc{}}000000````>{{AhAnhh}b}`>>>>>>>`{{}B`}{dB`}`{Abb}{Adb}1``{fAb}{{}Ad}{{}Ah}{{}f}{AbBb}{AdBb}```````````````{{}Bd}{{}An}```````{{AhAh}b}{ce{}{}}0{c{{Al{e}}}{}{}}0000000000000{cBf{}}000000`{{}b}{Bdb}{Anb}`{{}{{j{Bh}}}}{Bhb}{{{Bj{Bh}}}b}{{}}6;{{}B`}`5{{AnBl}B`}{{AnB`}b}````````````{{}Bn}{{BnBn}Bn}{{BnBn}b}10{BnAn}021{ce{}{}}000{BnBn}{{BnBn}B`}56{{Bnc}b{{Cb{}{{C`{Bn}}}}}}`{{Bnn}A`}0000{{Cdn}A`}{cc{}}0{An{{j{Bn}}}}{AnBn}00{cBn{{Cb{}{{C`{Bn}}}}}}{Cf{{j{Bn}}}}<=8::{Bnc{}}{BnB`}0{Bn{{Ch{Bn}}}}{Bn{{Cj{Bn}}}}{{}{{`{{Cl{}{{C`{Cd}}}}}}}}`>`{Bdh}{{BnBn}b}{{BnBnB`}b}`{{BnBn}Bn}202{c{{Al{e}}}{}{}}000{cBf{}}02{hBd}{{}Cn}{{AnBd}b}``````{{}{{j{Bd}}}}{ce{}{}}0{Bdb}{cc{}}2<887``````````````{{D`D`}D`}0{{D`D`}b}{D`Db}0{D`Dd}{D`Df}2{D`Dh}2188{D`b}{Djb}{{D`D`}{{j{D`}}}}{{D`Dl}{{j{D`}}}}01{D`D`}{{ce}b{}{}}{{D`D`}Dn}{{}Dh}{{}Dj}1{{}D`}{{D`Dl}D`}{{D`Dl}b}{{D`D`}Dd}{{D`D`}Df}{{D`Dd}D`}{{D`Df}D`}{{D`D`}B`}{{D`n}{{Al{bAj}}}}{cc{}}{DhD`}000000{DdD`}{DfD`}2{{D`c}bE`}{ce{}{}}{D`B`}>=:9{DhDh}{{DhDl}D`}{{D`D`}{{j{Dn}}}}{{D`D`}D`}{{D`Dl}D`}1{Dhb}2{{D`D`}b}{D`Dl}00{cD`{{Cl{}{{C`{D`}}}}}}08:{c{{Al{e}}}{}{}}{Dd{{Al{D`Eb}}}}{Df{{Al{D`Eb}}}}2{cBf{}}`{{}Ed}??{Edb}{cc{}}{ce{}{}}{EdBh}885`{Anb}","D":"AJh","p":[[1,"unit"],[5,"TrapFrame",13,356],[5,"TaskStateSegment",13,357],[5,"VirtAddr",358],[6,"Option",359],[5,"ExtendedState",13,356],[5,"Formatter",360],[8,"Result",360],[5,"GdtStruct",13,361],[5,"IdtStruct",13,362],[5,"FxsaveArea",13,356],[5,"TaskContext",13,356],[5,"Error",360],[6,"Result",363],[1,"usize"],[1,"bool"],[5,"DescriptorTablePointer",364],[5,"PhysAddr",358],[5,"TypeId",365],[1,"u8"],[1,"slice"],[8,"IrqHandler",159],[5,"MemRegionFlags",163],[17,"Item"],[10,"IntoIterator",366],[5,"MemRegion",163],[1,"str"],[5,"Iter",367],[5,"IterNames",367],[10,"Iterator",368],[1,"never"],[5,"Duration",256,369],[1,"u128"],[1,"f32"],[1,"f64"],[1,"u64"],[8,"TimeValue",256],[1,"u32"],[6,"Ordering",370],[10,"Hasher",371],[5,"TryFromFloatSecsError",369],[5,"TlsArea",343],[5,"PagingIfImpl",240],[10,"TrapHandler",354]],"r":[[8,372],[9,372],[13,356],[14,356],[15,361],[16,362],[21,356],[22,357],[23,356],[47,373],[48,373],[54,373],[74,373],[85,373],[114,373],[115,373],[148,373],[149,373],[150,373],[152,374],[153,374],[160,375],[161,375],[162,375],[168,358],[169,358],[173,358],[238,376],[239,377],[240,378],[241,379],[243,379],[245,379],[256,369],[267,375],[292,380],[322,380],[328,380],[336,380]],"b":[[180,"impl-Flags-for-MemRegionFlags"],[181,"impl-MemRegionFlags"],[194,"impl-Octal-for-MemRegionFlags"],[195,"impl-Binary-for-MemRegionFlags"],[196,"impl-LowerHex-for-MemRegionFlags"],[197,"impl-UpperHex-for-MemRegionFlags"],[198,"impl-Debug-for-MemRegionFlags"],[203,"impl-Flags-for-MemRegionFlags"],[204,"impl-MemRegionFlags"],[334,"impl-Sum-for-Duration"],[335,"impl-Sum%3C%26Duration%3E-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJAAJQAcABMAMgAAADQAAgA4AAcASAABAFwAAQBlAA0AdQADAHoAAQB9ABcAmAAAAKkAAQCuAAAAtQAAALkAAwDDAAUAzAAAANYAAADnAAUA8QABAPQAAAD2AAQA/QADABABAQAaAQEAIgECACgBAgAvAQEAPAEAAD8BAQBFAQAASgEBAE8BAQBSAQEAVgEBAFoBAgBgAQIA"}],\
["axio",{"t":"PPPPKFPPPPPPGPPPPPPPPPPFKPIKGPPPPPKPNNNNNNNNNNNNNNNNNNMNNNNMNMNNNNNNNNNNNNNNNNNCMNNNNNNNNNONMNNNNNNNNNNNNNNNNNNOMNNEEEE","n":["AddrInUse","AlreadyExists","BadAddress","BadState","BufRead","BufReader","ConnectionRefused","ConnectionReset","Current","DirectoryNotEmpty","End","Err","Error","InvalidData","InvalidInput","Io","IsADirectory","NoMemory","NotADirectory","NotConnected","NotFound","Ok","PermissionDenied","PollState","Read","ResourceBusy","Result","Seek","SeekFrom","Start","StorageFull","UnexpectedEof","Unsupported","WouldBlock","Write","WriteZero","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","capacity","clone","clone","clone","clone_into","clone_into","clone_into","code","consume","consume","default","eq","eq","fill_buf","fill_buf","flush","fmt","fmt","fmt","fmt","from","from","from","from","get_mut","get_ref","has_data_left","into","into","into","into","into_inner","new","prelude","read","read","read_exact","read_exact","read_line","read_to_end","read_to_end","read_to_string","read_to_string","read_until","readable","rewind","seek","stream_position","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","writable","write","write_all","write_fmt","BufRead","Read","Seek","Write"],"q":[[0,"axio"],[115,"axio::prelude"],[119,"axio::buffered::bufreader"],[120,"core::fmt"],[121,"core::result"],[122,"alloc::string"],[123,"alloc::vec"],[124,"core::any"]],"i":[1,1,1,1,0,0,1,1,7,1,7,14,0,1,1,1,1,1,1,1,1,14,1,0,0,1,0,0,0,7,1,1,1,1,0,1,1,3,7,8,1,3,7,8,1,3,3,7,8,1,7,8,1,1,11,3,8,7,1,11,3,15,7,8,1,1,3,7,8,1,3,3,11,3,7,8,1,3,3,0,12,3,3,12,11,3,12,3,12,11,8,22,22,22,7,8,1,1,3,7,8,1,1,3,7,8,1,3,7,8,1,8,15,15,15,0,0,0,0],"f":"````````````````````````````````````{bd}{ce{}{}}0000000{{{f{c}}}{{j{h}}}{}}{{{f{c}}}l{}}{nn}{A`A`}{bb}{{ce}Ab{}{}}00{bAd}{{Afl}Ab}{{{f{c}}l}AbAh}{{}A`}{{nn}Aj}{{bb}Aj}{Af{{Al{{j{h}}}}}}{{{f{c}}}{{Al{{j{h}}}}}Ah}{AnAl}{{nB`}Bb}{{A`B`}Bb}{{bB`}{{Bf{AbBd}}}}0{cc{}}000{{{f{c}}}c{}}0{Af{{Al{Aj}}}}{ce{}{}}0002{c{{f{c}}}Ah}`{{Ah{j{h}}}{{Al{l}}}}{{{f{c}}{j{h}}}{{Al{l}}}Ah}{{{f{c}}{j{h}}}{{Al{Ab}}}Ah}{{Ah{j{h}}}Al}{{AfBh}{{Al{l}}}}{{{f{c}}{Bj{h}}}{{Al{l}}}Ah}{{Ah{Bj{h}}}{{Al{l}}}}{{{f{c}}Bh}{{Al{l}}}Ah}{{AhBh}{{Al{l}}}}{{Afh{Bj{h}}}{{Al{l}}}}`{Bl{{Al{Ab}}}}{{Bln}{{Al{Bn}}}}{Bl{{Al{Bn}}}}>>>{cBh{}}{c{{Bf{e}}}{}{}}000{Ad{{Bf{b}}}}1111{cC`{}}000`{{An{j{h}}}{{Al{l}}}}{{An{j{h}}}Al}{{AnCb}{{Al{Ab}}}}````","D":"I`","p":[[6,"Error",0],[1,"str"],[5,"BufReader",0,119],[1,"u8"],[1,"slice"],[1,"usize"],[6,"SeekFrom",0],[5,"PollState",0],[1,"unit"],[1,"i32"],[10,"BufRead",0],[10,"Read",0],[1,"bool"],[8,"Result",0],[10,"Write",0],[5,"Formatter",120],[8,"Result",120],[5,"Error",120],[6,"Result",121],[5,"String",122],[5,"Vec",123],[10,"Seek",0],[1,"u64"],[5,"TypeId",124],[5,"Arguments",120]],"r":[[5,119],[115,0],[116,0],[117,0],[118,0]],"b":[[64,"impl-Display-for-AxError"],[65,"impl-Debug-for-AxError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAC8ACgAmAAcAMAAFADgAAwA9AAAAPwADAFIAAQBWAAAAWAAAAF8AEAB0AAMA"}],\
["axlibc",{"t":"HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH","n":["abort","accept","ax_fcntl","ax_open","bind","clock_gettime","close","connect","dup","dup2","dup3","epoll_create","epoll_ctl","epoll_wait","exit","free","freeaddrinfo","fstat","getaddrinfo","getcwd","getpeername","getpid","getrlimit","getsockname","listen","longjmp","lseek","lstat","malloc","mktime","nanosleep","pipe","pthread_create","pthread_exit","pthread_join","pthread_mutex_init","pthread_mutex_lock","pthread_mutex_unlock","pthread_self","rand","random","read","recv","recvfrom","rename","select","send","sendto","setjmp","setrlimit","shutdown","socket","srand","stat","strerror","strftime","strtod","strtof","sysconf","write","writev"],"q":[[0,"axlibc"],[61,"core::ffi"],[62,"arceos_posix_api::ctypes"],[63,"axlibc::unistd"],[64,"axlibc::net"],[65,"axlibc::fd_ops"],[66,"axlibc::fs"],[67,"axlibc::time"],[68,"axlibc::io_mpx"],[69,"axlibc::malloc"],[70,"axlibc::resource"],[71,"axlibc::setjmp"],[72,"axlibc::mktime"],[73,"axlibc::pipe"],[74,"axlibc::pthread"],[75,"axlibc::rand"],[76,"axlibc::io"],[77,"axlibc::errno"],[78,"axlibc::strftime"],[79,"axlibc::strtod"],[80,"axlibc::sys"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"{{}b}{{dfh}d}{{ddj}d}{{ldn}d}2{{A`Ab}d}{dd}40{{dd}d}{{ddd}d}2{{dddAd}d}{{dAddd}d}{db}{AfAh}{AjAh}{{dAl}d}{{llAjAj}d}{{lj}l}>{{}d}{{dAn}d}{{dfh}d}<`{{dB`d}B`}{{lAl}d}{BbAf}`{{AbAb}d}{dd}{{BfBh{Bl{Af}{{Bj{Af}}}}Af}d}{Afb}{{BfAf}d}{{BnC`}d}{Bnd}0{{}Bf}={{}Cb}{{dAfj}Cd}{{dAfBbd}Cd}{{dAfBbdfh}Cd}{{ll}d}{{dCfCfCfCh}d}32`{{dAn}d}{{dd}d}{{ddd}d}{CjAh}{{lAl}d}{dl}`{{ll}Cl}{{ll}Cn}{dCb}={{dD`d}Cd}","D":"Gl","p":[[1,"never"],[8,"c_int",61],[5,"sockaddr",62],[8,"socklen_t",62],[1,"usize"],[8,"c_char",61],[8,"mode_t",62],[8,"clockid_t",62],[5,"timespec",62],[5,"epoll_event",62],[6,"c_void",61],[1,"unit"],[5,"addrinfo",62],[5,"stat",62],[5,"rlimit",62],[8,"off_t",62],[8,"size_t",62],[8,"time_t",62],[8,"pthread_t",62],[5,"pthread_attr_t",62],[17,"Output"],[1,"fn"],[5,"pthread_mutex_t",62],[5,"pthread_mutexattr_t",62],[8,"c_long",61],[8,"ssize_t",62],[5,"fd_set",62],[5,"timeval",62],[8,"c_uint",61],[8,"c_double",61],[8,"c_float",61],[5,"iovec",62]],"r":[[0,63],[1,64],[2,65],[3,66],[4,64],[5,67],[6,65],[7,64],[8,65],[9,65],[10,65],[11,68],[12,68],[13,68],[14,63],[15,69],[16,64],[17,66],[18,64],[19,66],[20,64],[21,63],[22,70],[23,64],[24,64],[25,71],[26,66],[27,66],[28,69],[29,72],[30,67],[31,73],[32,74],[33,74],[34,74],[35,74],[36,74],[37,74],[38,74],[39,75],[40,75],[41,76],[42,64],[43,64],[44,66],[45,68],[46,64],[47,64],[48,71],[49,70],[50,64],[51,64],[52,75],[53,66],[54,77],[55,78],[56,79],[57,79],[58,80],[59,76],[60,76]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["axlog",{"t":"KQQMMMMQQQHHHQQ","n":["LogIf","ax_print","ax_println","console_write_str","current_cpu_id","current_task_id","current_time","debug","error","info","init","print_fmt","set_max_level","trace","warn"],"q":[[0,"axlog"],[15,"core::option"],[16,"core::time"],[17,"core::fmt"],[18,"log"]],"i":[0,0,0,9,9,9,9,0,0,0,0,0,0,0,0],"f":"```{bd}{{}{{h{f}}}}{{}{{h{j}}}}{{}l}```{{}d}{nA`}5``","D":"B`","p":[[1,"str"],[1,"unit"],[1,"usize"],[6,"Option",15],[1,"u64"],[5,"Duration",16],[5,"Arguments",17],[8,"Result",17],[10,"LogIf",0]],"r":[[7,18],[8,18],[9,18],[13,18],[14,18]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["axnet",{"t":"FFNHHNNNNNNNNHNNNNHNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNN","n":["TcpSocket","UdpSocket","accept","bench_receive","bench_transmit","bind","bind","borrow","borrow","borrow_mut","borrow_mut","connect","connect","dns_query","drop","drop","from","from","init_network","into","into","is_nonblocking","is_nonblocking","listen","local_addr","local_addr","new","new","peek_from","peer_addr","peer_addr","poll","poll","poll_interfaces","recv","recv","recv_from","send","send","send_to","set_nonblocking","set_nonblocking","shutdown","shutdown","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"axnet"],[50,"axnet::smoltcp_impl::tcp"],[51,"axerrno"],[52,"core::net::socket_addr"],[53,"axnet::smoltcp_impl::udp"],[54,"core::net::ip_addr"],[55,"alloc::vec"],[56,"axdriver::dummy"],[57,"axdriver::structs::imp"],[58,"axio"],[59,"core::result"],[60,"core::any"],[61,"axnet::smoltcp_impl"],[62,"axnet::smoltcp_impl::dns"]],"i":[0,0,1,0,0,1,5,1,5,1,5,1,5,0,1,5,1,5,0,1,5,1,5,1,1,5,1,5,5,1,5,1,5,0,1,5,5,1,5,5,1,5,1,5,1,5,1,5,1,5],"f":"``{b{{d{b}}}}{{}f}0{{bh}d}{{jh}d}{ce{}{}}00021{l{{d{{A`{n}}}}}}{bf}{jf}{cc{}}0{{{Ad{Ab}}}f}55{bAf}{jAf}{bd}{b{{d{h}}}}{j{{d{h}}}}{{}b}{{}j}{{j{Aj{Ah}}}{{d{{An{Alh}}}}}}43{b{{d{B`}}}}{j{{d{B`}}}}{{}f}{{b{Aj{Ah}}}{{d{Al}}}}{{j{Aj{Ah}}}{{d{Al}}}}510{{j{Aj{Ah}}h}{{d{Al}}}}{{bAf}f}{{jAf}f}={jd}{c{{Bb{e}}}{}{}}000{cBd{}}0","D":"Dn","p":[[5,"TcpSocket",0,50],[8,"AxResult",51],[1,"unit"],[6,"SocketAddr",52],[5,"UdpSocket",0,53],[1,"str"],[6,"IpAddr",54],[5,"Vec",55],[8,"AxNetDevice",56],[5,"AxDeviceContainer",57],[1,"bool"],[1,"u8"],[1,"slice"],[1,"usize"],[1,"tuple"],[5,"PollState",58],[6,"Result",59],[5,"TypeId",60]],"r":[[0,50],[1,53],[3,61],[4,61],[13,62],[33,61]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAsAAwAIAAMADwABAC0ABQA="}],\
["axruntime",{"t":"HH","n":["rust_main","rust_main_secondary"],"q":[[0,"axruntime"],[2,"axruntime::mp"]],"i":[0,0],"f":"{{bb}d}{bd}","D":"f","p":[[1,"usize"],[1,"never"]],"r":[[1,2]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["axstd",{"t":"EEEEECECECEECECQQCEEEECCCEEHHPPPFFPFPIFFIFPPNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNHNNHHNHHHNNNNNNNNNNNNNNNNNNNNNNNHNNPPPPKFPPPPPPGPPPPPPPPPPKPIKGPFFFFPPPPKPNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNNMHHNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNKKKKMMMNMNNNNNNMNMNNTTTGFFRTTGFFFFKTTFPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCEHEFFEENNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFNNNNNNNNNNNHNHNNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNNHFFTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["arch","boxed","cell","cmp","collections","env","format","fs","hint","io","marker","mem","net","ops","os","print","println","process","ptr","slice","str","string","sync","thread","time","vec","vec","current_dir","set_current_dir","BlockDevice","CharDevice","Dir","DirBuilder","DirEntry","Fifo","File","File","FileType","Metadata","OpenOptions","Permissions","ReadDir","Socket","SymLink","append","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create","create","create","create_dir","create_dir_all","create_new","create_new","default","file_name","file_type","file_type","flush","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","is_dir","is_file","len","metadata","metadata","new","new","next","open","open","options","path","permissions","read","read","read","read_dir","read_to_string","recursive","remove_dir","remove_file","rename","seek","set_len","size","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","AddrInUse","AlreadyExists","BadAddress","BadState","BufRead","BufReader","ConnectionRefused","ConnectionReset","Current","DirectoryNotEmpty","End","Err","Error","InvalidData","InvalidInput","Io","IsADirectory","NoMemory","NotADirectory","NotConnected","NotFound","Ok","PermissionDenied","Read","ResourceBusy","Result","Seek","SeekFrom","Start","Stdin","StdinLock","Stdout","StdoutLock","StorageFull","UnexpectedEof","Unsupported","WouldBlock","Write","WriteZero","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","capacity","clone","clone","clone_into","clone_into","code","consume","consume","consume","eq","eq","fill_buf","fill_buf","fill_buf","flush","flush","flush","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_mut","get_ref","has_data_left","into","into","into","into","into","into","into","into_inner","lock","lock","new","prelude","read","read","read","read","read_exact","read_exact","read_line","read_line","read_line","read_to_end","read_to_end","read_to_string","read_to_string","read_until","read_until","rewind","seek","stdin","stdout","stream_position","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","write_all","write_fmt","BufRead","Read","Seek","Write","consume","fill_buf","flush","has_data_left","read","read_exact","read_line","read_to_end","read_to_string","read_until","rewind","seek","stream_position","write","write_all","write_fmt","BITS","BITS","BROADCAST","IpAddr","Ipv4Addr","Ipv6Addr","Iter","LOCALHOST","LOCALHOST","SocketAddr","SocketAddrV4","SocketAddrV6","TcpListener","TcpStream","ToSocketAddrs","UNSPECIFIED","UNSPECIFIED","UdpSocket","V4","V4","V6","V6","accept","backward_checked","backward_checked","backward_unchecked","backward_unchecked","bind","bind","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","connect","connect","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","flowinfo","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_checked","forward_checked","forward_unchecked","forward_unchecked","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_str","from_str","from_str","from_str","from_str","from_str","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","ip","ip","ip","is_benchmarking","is_benchmarking","is_benchmarking","is_broadcast","is_documentation","is_documentation","is_documentation","is_global","is_global","is_global","is_ipv4","is_ipv4","is_ipv4_mapped","is_ipv6","is_ipv6","is_link_local","is_loopback","is_loopback","is_loopback","is_multicast","is_multicast","is_multicast","is_private","is_reserved","is_shared","is_unicast","is_unicast_global","is_unicast_link_local","is_unique_local","is_unspecified","is_unspecified","is_unspecified","local_addr","local_addr","local_addr","multicast_scope","new","new","new","new","new","not","not","not","not","octets","octets","parse_ascii","parse_ascii","parse_ascii","parse_ascii","parse_ascii","parse_ascii","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","peek_from","peer_addr","peer_addr","port","port","port","read","recv","recv_from","scope_id","segments","send","send_to","set_flowinfo","set_ip","set_ip","set_ip","set_port","set_port","set_port","set_scope_id","shutdown","steps_between","steps_between","to_bits","to_bits","to_canonical","to_canonical","to_ipv4","to_ipv4_mapped","to_ipv6_compatible","to_ipv6_mapped","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_socket_addrs","to_socket_addrs","to_socket_addrs","to_socket_addrs","to_socket_addrs","to_socket_addrs","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","arceos","api","exit","Arc","Mutex","MutexGuard","Weak","atomic","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","force_unlock","from","from","get_mut","into","into","into_inner","is_locked","lock","new","try_from","try_from","try_into","try_into","try_lock","type_id","type_id","Builder","JoinHandle","Thread","ThreadId","as_u64","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","current","eq","exit","fmt","fmt","from","from","from","from","id","into","into","into","into","join","name","new","sleep","sleep_until","spawn","spawn","stack_size","thread","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","yield_now","Duration","Instant","MAX","MICROSECOND","MILLISECOND","NANOSECOND","SECOND","ZERO","abs_diff","add","add","add_assign","add_assign","as_micros","as_millis","as_millis_f32","as_millis_f64","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow","borrow_mut","borrow_mut","checked_add","checked_add","checked_div","checked_mul","checked_sub","checked_sub","clone","clone","clone_into","clone_into","cmp","default","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","duration_since","elapsed","eq","fmt","from","from","from","from_days","from_hours","from_micros","from_millis","from_mins","from_nanos","from_secs","from_secs_f32","from_secs_f64","from_weeks","hash","into","into","is_zero","mul","mul_assign","mul_f32","mul_f64","new","now","partial_cmp","saturating_add","saturating_mul","saturating_sub","sub","sub","sub","sub_assign","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","to_owned","to_owned","try_from","try_from","try_from_secs_f32","try_from_secs_f64","try_into","try_into","type_id","type_id"],"q":[[0,"axstd"],[27,"axstd::env"],[29,"axstd::fs"],[137,"axstd::io"],[285,"axstd::io::prelude"],[305,"axstd::net"],[613,"axstd::os"],[614,"axstd::os::arceos"],[615,"axstd::process"],[616,"axstd::sync"],[648,"axstd::thread"],[700,"axstd::time"],[794,"alloc::string"],[795,"axstd::fs::file"],[796,"axstd::fs::dir"],[797,"core::fmt"],[798,"core::option"],[799,"alloc::vec"],[800,"axio"],[801,"core::result"],[802,"core::any"],[803,"core::convert"],[804,"axio::buffered::bufreader"],[805,"axstd::io::stdio"],[806,"capability"],[807,"axstd::net::tcp"],[808,"core::net::socket_addr"],[809,"core::net::ip_addr"],[810,"axstd::net::socket_addr"],[811,"axstd::net::udp"],[812,"core::cmp"],[813,"core::net::parser"],[814,"core::hash"],[815,"core::iter::traits::iterator"],[816,"std::io::error"],[817,"axstd::sync::mutex"],[818,"core::marker"],[819,"core::default"],[820,"axstd::thread::multi"],[821,"core::num::nonzero"],[822,"core::time"],[823,"axhal::time"],[824,"core::ops::function"],[825,"smoltcp::time"],[826,"core"],[827,"alloc"],[828,"alloc::sync"],[829,"core::sync"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,12,0,12,0,0,0,0,0,12,12,5,7,15,11,9,7,10,5,15,11,9,7,10,5,5,5,9,10,5,0,0,9,5,10,11,11,7,9,11,7,10,5,15,11,9,7,10,5,15,11,9,7,10,5,15,7,7,7,0,9,10,5,15,9,5,9,11,7,0,9,5,0,0,10,0,0,0,9,9,7,5,5,15,11,9,7,10,5,15,11,9,7,10,5,15,11,9,7,10,5,0,9,5,26,26,26,26,0,0,26,26,22,26,22,2,0,26,26,26,26,26,26,26,26,2,26,0,26,0,0,0,22,0,0,0,0,26,26,26,26,0,26,26,27,37,31,33,34,22,26,27,37,31,33,34,22,26,27,27,22,26,22,26,26,29,27,31,22,26,29,27,31,32,33,34,22,26,26,27,37,31,33,34,22,26,26,27,27,29,27,37,31,33,34,22,26,27,37,33,27,0,30,27,37,31,27,30,37,31,29,27,30,27,30,31,29,38,38,0,0,38,22,26,26,27,37,31,33,34,22,26,26,27,37,31,33,34,22,26,27,37,31,33,34,22,26,32,33,34,32,32,0,0,0,0,29,29,32,29,30,30,29,30,30,29,38,38,38,32,32,32,44,45,44,0,0,0,46,44,45,0,0,0,0,0,0,44,45,0,48,42,48,42,40,44,45,44,45,40,47,44,44,44,44,45,45,45,45,44,44,45,45,44,44,44,44,45,45,45,45,44,44,45,45,41,40,47,48,44,45,42,49,50,41,40,47,48,44,45,42,49,50,48,44,45,42,49,50,48,44,45,42,49,50,48,44,45,42,49,50,41,47,48,48,48,44,44,45,45,42,49,50,50,41,48,48,44,44,45,45,42,42,49,49,50,50,44,45,44,45,41,40,47,48,48,48,48,48,48,44,44,44,45,45,45,45,42,42,42,42,49,50,44,45,48,44,45,42,49,50,48,44,45,42,49,50,41,40,47,48,44,45,42,49,50,42,49,50,48,44,45,44,48,44,45,48,44,45,48,42,45,48,42,44,48,44,45,48,44,45,44,44,44,45,45,45,45,48,44,45,41,40,47,45,44,45,42,49,50,44,44,45,45,44,45,48,44,45,42,49,50,48,48,48,44,44,45,45,42,49,50,47,41,47,42,49,50,41,47,47,50,45,47,47,50,42,49,50,42,49,50,50,41,44,45,44,45,48,45,45,45,44,44,48,44,45,42,49,50,46,42,42,49,49,50,48,44,45,42,49,50,41,40,47,48,44,45,42,49,50,41,40,47,48,44,45,42,49,50,41,40,47,48,44,45,42,49,50,41,0,0,0,0,0,0,0,0,66,69,66,69,66,69,69,69,66,69,66,66,69,66,66,69,66,66,66,66,66,69,66,69,66,66,69,0,0,0,0,71,73,75,71,74,73,75,71,74,71,71,0,71,0,71,74,73,75,71,74,73,73,75,71,74,75,74,74,0,0,0,74,74,75,71,73,75,71,74,73,75,71,74,73,75,71,74,0,0,0,76,76,76,76,76,76,76,81,76,81,76,76,76,76,76,76,76,76,76,81,76,81,76,81,76,76,76,81,76,81,76,81,76,76,76,76,76,76,76,76,76,81,81,76,76,81,76,76,76,76,76,76,76,76,76,76,76,76,76,81,76,76,76,76,76,76,76,81,76,76,76,76,81,81,76,81,76,76,76,76,76,76,81,76,81,76,76,76,81,76,81,76],"f":"```````````````````````````{{}{{d{b}}}}{f{{d{h}}}}```````````````{{jl}j}{nA`}{ce{}{}}00000000000{jj}{{ce}h{}{}}{f{{d{Ab}}}}{{Adf}{{d{h}}}}67716{{}Ad}{Afb}{AfAh}{nAh}{Ab{{d{h}}}}{{AfAj}Al}{{nAj}Al}{{AdAj}Al}{{jAj}Al}{cc{}}00000>>>>>>>{nl}0{nA`}{f{{d{n}}}}{Ab{{d{n}}}}={{}j}{An{{B`{{d{Af}}}}}}{f{{d{Ab}}}}{{jf}{{d{Ab}}}}3{Afb}{nBb}{f{{d{{Bf{Bd}}}}}}{{Ab{Bh{Bd}}}{{d{Bj}}}}{{jl}j}{f{{d{An}}}}{f{{d{b}}}}{{Adl}Ad}{f{{d{h}}}}0{{ff}{{d{h}}}}{{AbBl}{{d{A`}}}}{{AbA`}{{d{h}}}}{nA`}{ce{}{}}9{c{{Bn{e}}}{}{}}00000000000{cC`{}}00000{{fc}{{d{h}}}{{Cb{{Bh{Bd}}}}}}=<```````````````````````````````````````{Cdf}44444444444444{{{Cf{c}}}{{Bh{Bd}}}{}}{{{Cf{c}}}Bj{}}{BlBl}{CdCd}{{ce}h{}{}}0{CdCh}{{CjBj}h}{{{Cf{c}}Bj}hCl}{{CnBj}h}{{BlBl}l}{{CdCd}l}{Cj{{Bn{{Bh{Bd}}Cd}}}}{{{Cf{c}}}{{Bn{{Bh{Bd}}Cd}}}Cl}{Cn{{d{{Bh{Bd}}}}}}{D`{{Bn{hCd}}}}{Db{{d{h}}}}{Dd{{d{h}}}}{{BlAj}{{Bn{hDf}}}}{{CdAj}{{Bn{hDf}}}}0{cc{}}000000{DhCd}{{{Cf{c}}}c{}}0{Cj{{Bn{lCd}}}}{ce{}{}}0000002{DjCn}{DbDd}{c{{Cf{c}}}Cl}`{{Cl{Bh{Bd}}}{{Bn{BjCd}}}}{{{Cf{c}}{Bh{Bd}}}{{Bn{BjCd}}}Cl}{{Dj{Bh{Bd}}}{{d{Bj}}}}{{Cn{Bh{Bd}}}{{d{Bj}}}}{{{Cf{c}}{Bh{Bd}}}{{Bn{hCd}}}Cl}{{Cl{Bh{Bd}}}{{Bn{hCd}}}}{{Djb}{{d{Bj}}}}{{Cnb}{{d{Bj}}}}{{Cjb}{{Bn{BjCd}}}}{{{Cf{c}}{Bf{Bd}}}{{Bn{BjCd}}}Cl}{{Cl{Bf{Bd}}}{{Bn{BjCd}}}}{{{Cf{c}}b}{{Bn{BjCd}}}Cl}{{Clb}{{Bn{BjCd}}}}{{CnBd{Bf{Bd}}}{{d{Bj}}}}{{CjBd{Bf{Bd}}}{{Bn{BjCd}}}}{Dl{{Bn{hCd}}}}{{DlBl}{{Bn{A`Cd}}}}{{}Dj}{{}Db}{Dl{{Bn{A`Cd}}}}{ce{}{}}0{cb{}}{c{{Bn{e}}}{}{}}00000{Ch{{Bn{Cd}}}}11111111{cC`{}}000000{{D`{Bh{Bd}}}{{Bn{BjCd}}}}{{Db{Bh{Bd}}}{{d{Bj}}}}{{Dd{Bh{Bd}}}{{d{Bj}}}}{{D`{Bh{Bd}}}{{Bn{hCd}}}}{{D`Dn}{{Bn{hCd}}}}````{{CjBj}h}{Cj{{Bn{{Bh{Bd}}Cd}}}}{D`{{Bn{hCd}}}}{Cj{{Bn{lCd}}}}{{Cl{Bh{Bd}}}{{Bn{BjCd}}}}{{Cl{Bh{Bd}}}{{Bn{hCd}}}}{{Cjb}{{Bn{BjCd}}}}{{Cl{Bf{Bd}}}{{Bn{BjCd}}}}{{Clb}{{Bn{BjCd}}}}{{CjBd{Bf{Bd}}}{{Bn{BjCd}}}}{Dl{{Bn{hCd}}}}{{DlBl}{{Bn{A`Cd}}}}{Dl{{Bn{A`Cd}}}}{{D`{Bh{Bd}}}{{Bn{BjCd}}}}?>``````````````````````{E`{{d{{Ef{EbEd}}}}}}{{EhBj}{{B`{Eh}}}}{{EjBj}{{B`{Ej}}}}{{EhBj}Eh}{{EjBj}Ej}{c{{d{E`}}}El}{c{{d{En}}}El}{{EhEh}Eh}000{{EjEj}Ej}000{{EhEh}h}0{{EjEj}h}0333322221100{ce{}{}}00000000000000000{F`F`}{EhEh}{EjEj}{EdEd}{FbFb}{FdFd}{{ce}h{}{}}00000{{F`F`}Ff}{{EhEh}Ff}{{EjEj}Ff}{{EdEd}Ff}{{FbFb}Ff}{{FdFd}Ff}{c{{d{Eb}}}El}{{EnEd}{{d{h}}}}{{F`F`}l}{{F`Ej}l}{{F`Eh}l}{{EhEh}l}{{EhF`}l}{{EjEj}l}{{EjF`}l}{{EdEd}l}{{FbFb}l}{{FdFd}l}{FdFh}{Eb{{d{h}}}}{{F`Aj}{{Bn{hDf}}}}0{{EhAj}{{Bn{hDf}}}}0{{EjAj}{{Bn{hDf}}}}0{{EdAj}{{Bn{hDf}}}}0{{FbAj}{{Bn{hDf}}}}0{{FdAj}{{Bn{hDf}}}}0{{EhBj}{{B`{Eh}}}}{{EjBj}{{B`{Ej}}}}{{EhBj}Eh}{{EjBj}Ej}{cc{}}00{EhF`}1{EjF`}{{{Fj{Bd}}}F`}{{{Fj{Fl}}}F`}14{{{Fj{Bd}}}Eh}{FhEh}{{{Fj{Bd}}}Ej}7{{{Fj{Fl}}}Ej}{FnEj}{FdEd}{FbEd}{{{Ef{cFl}}}Ed{{G`{F`}}}}<<<63{f{{Bn{F`Gb}}}}{f{{Bn{EhGb}}}}{f{{Bn{EjGb}}}}{f{{Bn{EdGb}}}}{f{{Bn{FbGb}}}}{f{{Bn{FdGb}}}}{{F`c}hGd}{{Ehc}hGd}{{Ejc}hGd}{{Edc}hGd}{{Fbc}hGd}{{Fdc}hGd}{ce{}{}}00000000{EdF`}{FbEh}{FdEj}{F`l}{Ehl}{Ejl}12102102{Edl}13023213212221111321{Eb{{d{Ed}}}}{E`{{d{Ed}}}}{En{{d{Ed}}}}{Ej{{B`{Gf}}}}{{BdBdBdBd}Eh}{{FlFlFlFlFlFlFlFl}Ej}{{F`Fl}Ed}{{EhFl}Fb}{{EjFlFhFh}Fd}{EhEh}0{EjEj}0{Eh{{Fj{Bd}}}}{Ej{{Fj{Bd}}}}{{{Bh{Bd}}}{{Bn{F`Gb}}}}{{{Bh{Bd}}}{{Bn{EhGb}}}}{{{Bh{Bd}}}{{Bn{EjGb}}}}{{{Bh{Bd}}}{{Bn{EdGb}}}}{{{Bh{Bd}}}{{Bn{FbGb}}}}{{{Bh{Bd}}}{{Bn{FdGb}}}}{{F`F`}{{B`{Ff}}}}{{F`Ej}{{B`{Ff}}}}{{F`Eh}{{B`{Ff}}}}{{EhEh}{{B`{Ff}}}}{{EhF`}{{B`{Ff}}}}{{EjF`}{{B`{Ff}}}}{{EjEj}{{B`{Ff}}}}{{EdEd}{{B`{Ff}}}}{{FbFb}{{B`{Ff}}}}{{FdFd}{{B`{Ff}}}}{{En{Bh{Bd}}}{{d{{Ef{BjEd}}}}}}{Eb{{d{Ed}}}}{En{{d{Ed}}}}{EdFl}{FbFl}{FdFl}{{Eb{Bh{Bd}}}{{d{Bj}}}}{{En{Bh{Bd}}}{{d{Bj}}}}7{FdFh}{Ej{{Fj{Fl}}}}2{{En{Bh{Bd}}c}{{d{Bj}}}El}{{FdFh}h}{{EdF`}h}{{FbEh}h}{{FdEj}h}{{EdFl}h}{{FbFl}h}{{FdFl}h}6{Eb{{d{h}}}}{{EhEh}{{B`{Bj}}}}{{EjEj}{{B`{Bj}}}}{EhFh}{EjFn}{F`F`}{EjF`}{Ej{{B`{Eh}}}}0{EhEj}0{ce{}{}}00000{{{El{}{{Gh{c}}}}}{{d{c}}}{{Gl{}{{Gj{Ed}}}}}}{Ed{{Bn{{Gn{Ed}}H`}}}}{Ed{{d{{Gn{Ed}}}}}}{Fb{{d{{Gn{Ed}}}}}}{Fb{{Bn{{Gn{Ed}}H`}}}}{Fd{{Bn{{Gn{Ed}}H`}}}}{cb{}}00000{c{{Bn{e}}}{}{}}00000000000000000{cC`{}}00000000{{Eb{Bh{Bd}}}{{d{Bj}}}}``{ChHb}`````;;;;{{}{{Hd{c}}}{HfHh}}{{{Hj{c}}}cHf}0{{{Hj{c}}}hHf}{{{Hd{c}}Aj}Al{HfHl}}{{{Hj{c}}Aj}Al{HfHl}}{{{Hd{c}}}hHf}{cc{}}0{{{Hd{c}}}cHf}{ce{}{}}0{{{Hd{c}}}c{}}{{{Hd{c}}}lHf}{{{Hd{c}}}{{Hj{c}}}Hf}{c{{Hd{c}}}{}}{c{{Bn{e}}}{}{}}000{{{Hd{c}}}{{B`{{Hj{c}}}}}Hf}{cC`{}}0````{HnI`}88888888{HnHn}{{ce}h{}{}}{{}Ib}{{HnHn}l}{ChHb}{{HnAj}Al}{{IdAj}Al}{cc{}}000{IbHn}{ce{}{}}000{{{If{c}}}{{d{c}}}{}}{{Idb}Id}{{}Id}{Ihh}{Ijh}{e{{If{c}}}Il{{J`{}{{In{c}}}}Il}}{{Ide}{{d{{If{c}}}}}Il{{J`{}{{In{c}}}}Il}}{{IdBj}Id}{{{If{c}}}Ib{}}9{c{{Bn{e}}}{}{}}0000000{cC`{}}000{{}h}````````{{IhIh}Ih}{{JbIh}Jb}1{{JbIh}h}{{IhIh}h}{IhFn}0{IhJd}{IhJf}2{IhA`}21{ce{}{}}000{{JbIh}{{B`{Jb}}}}{{IhIh}{{B`{Ih}}}}{{IhFh}{{B`{Ih}}}}021{JbJb}{IhIh}{{ce}h{}{}}0{{IhIh}Ff}{{}Ih}{{IhFh}Ih}{{IhFh}h}{{IhIh}Jd}{{IhIh}Jf}{{IhJd}Ih}{{IhJf}Ih}{{JbJb}Ih}{JbIh}{{IhIh}l}{{IhAj}{{Bn{hDf}}}}{cc{}}0{JhIh}{A`Ih}000000{JdIh}{JfIh}2{{Ihc}hGd}{ce{}{}}0{Ihl}{{IhFh}Ih}{{IhFh}h}?>{{A`Fh}Ih}{{}Jb}{{IhIh}{{B`{Ff}}}}{{IhIh}Ih}50{{JbIh}Jb}{{JbJb}Ih}2{{JbIh}h}{{IhIh}h}{IhFh}00{cIh{{Gl{}{{Gj{Ih}}}}}}0=={c{{Bn{e}}}{}{}}0{Jd{{Bn{IhJj}}}}{Jf{{Bn{IhJj}}}}22{cC`{}}0","D":"CE`","p":[[5,"String",794],[8,"Result",137],[1,"str"],[1,"unit"],[5,"OpenOptions",29,795],[1,"bool"],[5,"Metadata",29,795],[1,"u64"],[5,"File",29,795],[5,"DirBuilder",29,796],[5,"DirEntry",29,796],[8,"FileType",29,795],[5,"Formatter",797],[8,"Result",797],[5,"ReadDir",29,796],[6,"Option",798],[8,"Permissions",29,795],[1,"u8"],[5,"Vec",799],[1,"slice"],[1,"usize"],[6,"SeekFrom",137,800],[6,"Result",801],[5,"TypeId",802],[10,"AsRef",803],[6,"Error",137],[5,"BufReader",137,804],[1,"i32"],[10,"BufRead",137,800],[10,"Read",137,800],[5,"StdinLock",137,805],[10,"Write",137,800],[5,"Stdout",137,805],[5,"StdoutLock",137,805],[5,"Error",797],[5,"CapError",806],[5,"Stdin",137,805],[10,"Seek",137,800],[5,"Arguments",797],[5,"TcpListener",305,807],[5,"TcpStream",305,807],[6,"SocketAddr",305,808],[1,"tuple"],[5,"Ipv4Addr",305,809],[5,"Ipv6Addr",305,809],[10,"ToSocketAddrs",305,810],[5,"UdpSocket",305,811],[6,"IpAddr",305,809],[5,"SocketAddrV4",305,808],[5,"SocketAddrV6",305,808],[6,"Ordering",812],[1,"u32"],[1,"array"],[1,"u16"],[1,"u128"],[10,"Into",803],[5,"AddrParseError",813],[10,"Hasher",814],[6,"Ipv6MulticastScope",809],[17,"Iter"],[17,"Item"],[10,"Iterator",815],[5,"IntoIter",798],[5,"Error",816],[1,"never"],[5,"Mutex",616,817],[10,"Sized",818],[10,"Default",819],[5,"MutexGuard",616,817],[10,"Debug",797],[5,"ThreadId",648,820],[8,"NonZeroU64",821],[5,"Thread",648,820],[5,"Builder",648,820],[5,"JoinHandle",648,820],[5,"Duration",700,822],[8,"TimeValue",823],[10,"Send",818],[17,"Output"],[10,"FnOnce",824],[5,"Instant",700],[1,"f32"],[1,"f64"],[5,"Duration",825],[5,"TryFromFloatSecsError",822]],"r":[[0,826],[1,827],[2,826],[3,826],[4,827],[6,827],[8,826],[10,826],[11,826],[13,826],[18,826],[19,826],[20,826],[21,827],[25,827],[26,827],[32,796],[33,796],[35,795],[37,795],[38,795],[39,795],[40,795],[41,796],[141,800],[142,804],[160,800],[163,800],[164,800],[166,805],[167,805],[168,805],[169,805],[174,800],[234,800],[252,805],[253,805],[285,800],[286,800],[287,800],[288,800],[308,809],[309,809],[310,809],[314,808],[315,808],[316,808],[317,807],[318,807],[319,810],[322,811],[616,828],[617,817],[618,817],[619,828],[620,829],[648,820],[649,820],[650,820],[651,820],[663,820],[682,820],[700,822]],"b":[[210,"impl-Display-for-Error"],[211,"impl-Debug-for-Error"],[334,"impl-BitAnd%3CIpv4Addr%3E-for-%26Ipv4Addr"],[335,"impl-BitAnd%3C%26Ipv4Addr%3E-for-%26Ipv4Addr"],[336,"impl-BitAnd-for-Ipv4Addr"],[337,"impl-BitAnd%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[338,"impl-BitAnd%3CIpv6Addr%3E-for-%26Ipv6Addr"],[339,"impl-BitAnd%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[340,"impl-BitAnd%3C%26Ipv6Addr%3E-for-%26Ipv6Addr"],[341,"impl-BitAnd-for-Ipv6Addr"],[342,"impl-BitAndAssign%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[343,"impl-BitAndAssign-for-Ipv4Addr"],[344,"impl-BitAndAssign-for-Ipv6Addr"],[345,"impl-BitAndAssign%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[346,"impl-BitOr%3C%26Ipv4Addr%3E-for-%26Ipv4Addr"],[347,"impl-BitOr%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[348,"impl-BitOr-for-Ipv4Addr"],[349,"impl-BitOr%3CIpv4Addr%3E-for-%26Ipv4Addr"],[350,"impl-BitOr%3C%26Ipv6Addr%3E-for-%26Ipv6Addr"],[351,"impl-BitOr-for-Ipv6Addr"],[352,"impl-BitOr%3CIpv6Addr%3E-for-%26Ipv6Addr"],[353,"impl-BitOr%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[354,"impl-BitOrAssign-for-Ipv4Addr"],[355,"impl-BitOrAssign%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[356,"impl-BitOrAssign-for-Ipv6Addr"],[357,"impl-BitOrAssign%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[396,"impl-PartialEq-for-IpAddr"],[397,"impl-PartialEq%3CIpv6Addr%3E-for-IpAddr"],[398,"impl-PartialEq%3CIpv4Addr%3E-for-IpAddr"],[399,"impl-PartialEq-for-Ipv4Addr"],[400,"impl-PartialEq%3CIpAddr%3E-for-Ipv4Addr"],[401,"impl-PartialEq-for-Ipv6Addr"],[402,"impl-PartialEq%3CIpAddr%3E-for-Ipv6Addr"],[408,"impl-Display-for-IpAddr"],[409,"impl-Debug-for-IpAddr"],[410,"impl-Debug-for-Ipv4Addr"],[411,"impl-Display-for-Ipv4Addr"],[412,"impl-Display-for-Ipv6Addr"],[413,"impl-Debug-for-Ipv6Addr"],[414,"impl-Display-for-SocketAddr"],[415,"impl-Debug-for-SocketAddr"],[416,"impl-Display-for-SocketAddrV4"],[417,"impl-Debug-for-SocketAddrV4"],[418,"impl-Debug-for-SocketAddrV6"],[419,"impl-Display-for-SocketAddrV6"],[427,"impl-From%3CIpv4Addr%3E-for-IpAddr"],[429,"impl-From%3CIpv6Addr%3E-for-IpAddr"],[430,"impl-From%3C%5Bu8;+16%5D%3E-for-IpAddr"],[431,"impl-From%3C%5Bu16;+8%5D%3E-for-IpAddr"],[432,"impl-From%3C%5Bu8;+4%5D%3E-for-IpAddr"],[434,"impl-From%3C%5Bu8;+4%5D%3E-for-Ipv4Addr"],[435,"impl-From%3Cu32%3E-for-Ipv4Addr"],[436,"impl-From%3C%5Bu8;+16%5D%3E-for-Ipv6Addr"],[438,"impl-From%3C%5Bu16;+8%5D%3E-for-Ipv6Addr"],[439,"impl-From%3Cu128%3E-for-Ipv6Addr"],[440,"impl-From%3CSocketAddrV6%3E-for-SocketAddr"],[441,"impl-From%3CSocketAddrV4%3E-for-SocketAddr"],[442,"impl-From%3C(I,+u16)%3E-for-SocketAddr"],[513,"impl-Not-for-%26Ipv4Addr"],[514,"impl-Not-for-Ipv4Addr"],[515,"impl-Not-for-%26Ipv6Addr"],[516,"impl-Not-for-Ipv6Addr"],[525,"impl-PartialOrd-for-IpAddr"],[526,"impl-PartialOrd%3CIpv6Addr%3E-for-IpAddr"],[527,"impl-PartialOrd%3CIpv4Addr%3E-for-IpAddr"],[528,"impl-PartialOrd-for-Ipv4Addr"],[529,"impl-PartialOrd%3CIpAddr%3E-for-Ipv4Addr"],[530,"impl-PartialOrd%3CIpAddr%3E-for-Ipv6Addr"],[531,"impl-PartialOrd-for-Ipv6Addr"],[574,"impl-ToSocketAddrs-for-SocketAddr"],[575,"impl-ToSocketAddrs-for-SocketAddr"],[576,"impl-ToSocketAddrs-for-SocketAddrV4"],[577,"impl-ToSocketAddrs-for-SocketAddrV4"],[774,"impl-Sub%3CDuration%3E-for-Instant"],[775,"impl-Sub-for-Instant"],[782,"impl-Sum%3C%26Duration%3E-for-Duration"],[783,"impl-Sum-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAHIBPwABAAQABwAAAAkAAAALAAEADgAAABMAAwAaAAEALwANAEQAAABIAAQAWQAAAGEAAABoAAAAcAAAAHMAAAB1ABEAiAAAALIADQDCAAMAyAADAM0AAQDQAAQA3AAAAO0AAwDzAAAA9QAAAPcAAAD5AAAAAAEYABoBAQBJAQMATwE7AI0BCQCYARAAwQELAAICAwAOAgkAHgIAAC4CAQA4AgUAPwImAGcCAABpAgAAbAIIAHYCAQCCAgMAhwIBAI4CCQCZAgAAmwIBAK8CDADHAgIA0gIDANwCBwDqAgEA7gIAAPkCAAD9AgEAAwMAAAcDAAAJAwIADwMFABcDAwA=","a":{"in6addr_any":[321],"in6addr_any_init":[321],"in6addr_loopback":[313],"in6addr_loopback_init":[313],"inaddr_any":[320]}}],\
["axsync",{"t":"FFNNNNNNNNNNNNNNNNNNNNENNNNNNN","n":["Mutex","MutexGuard","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","force_unlock","from","from","get_mut","into","into","into_inner","is_locked","lock","new","spin","try_from","try_from","try_into","try_into","try_lock","type_id","type_id"],"q":[[0,"axsync"],[30,"axsync::mutex"],[31,"core::marker"],[32,"core::default"],[33,"core::fmt"],[34,"core::result"],[35,"core::option"],[36,"core::any"]],"i":[0,0,1,4,1,4,1,4,4,4,1,4,1,1,4,1,1,4,1,1,1,1,0,1,4,1,4,1,1,4],"f":"``{ce{}{}}000{{}{{b{c}}}{df}}{{{h{c}}}cd}0{{{h{c}}}jd}{{{b{c}}l}n{dA`}}{{{h{c}}l}n{dA`}}{{{b{c}}}jd}{cc{}}0{{{b{c}}}cd}88{{{b{c}}}c{}}{{{b{c}}}Abd}{{{b{c}}}{{h{c}}}d}{c{{b{c}}}{}}`{c{{Ad{e}}}{}{}}000{{{b{c}}}{{Af{{h{c}}}}}d}{cAh{}}0","D":"An","p":[[5,"Mutex",0,30],[10,"Sized",31],[10,"Default",32],[5,"MutexGuard",0,30],[1,"unit"],[5,"Formatter",33],[8,"Result",33],[10,"Debug",33],[1,"bool"],[6,"Result",34],[6,"Option",35],[5,"TypeId",36]],"r":[[0,30],[1,30]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA8ABAADAAYACwABABcABAAdAAEA"}],\
["axtask",{"t":"IFFFFNNNNNNNNNNNNHHNNNHNNNNNNNNHHNNNNNNNNNNHHHHHHHHHNNNNNNNNNNNNNNNNNNHH","n":["AxTaskRef","CurrentTask","TaskId","TaskInner","WaitQueue","as_task_ref","as_u64","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","current","current_may_uninit","deref","drop","eq","exit","fmt","fmt","from","from","from","from","id","id_name","init_scheduler","init_scheduler_secondary","into","into","into","into","join","name","new","notify_all","notify_one","notify_task","on_timer_tick","run_idle","set_priority","sleep","sleep","sleep_until","sleep_until","spawn","spawn_raw","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wait","wait_timeout","wait_timeout_until","wait_until","with_capacity","yield_now","yield_now"],"q":[[0,"axtask"],[72,"axtask::task"],[73,"axtask::api"],[74,"core::option"],[75,"core::fmt"],[76,"alloc::string"],[77,"axtask::wait_queue"],[78,"core::time"],[79,"axhal::time"],[80,"core::ops::function"],[81,"core::marker"],[82,"core::result"],[83,"core::any"]],"i":[0,0,0,0,0,1,3,7,1,15,3,7,1,15,3,3,3,0,0,1,7,3,0,7,3,7,1,15,3,7,7,0,0,7,1,15,3,7,7,15,15,15,15,0,0,0,0,0,0,0,0,0,3,7,1,15,3,7,1,15,3,7,1,15,3,15,15,15,15,15,0,0],"f":"`````{bd}{fh}{ce{}{}}0000000{ff}{{ce}j{}{}}{{}b}{{}{{l{b}}}}{bc{}}{nj}{{ff}A`}{AbAd}{{nAf}Ah}{{fAf}Ah}{cc{}}000{nf}{nAj}{{}j}0>>>>{n{{l{Ab}}}}{nAl}{{}An}{{AnA`}j}{{AnA`}A`}{{AnA`d}A`}6{{}Ad}{B`A`}{Bbj}0{Bdj}0{cd{BfBh}}{{cAjBj}d{BfBh}}{ce{}{}}{c{{Bl{e}}}{}{}}0000000{cBn{}}000{Anj}{{AnBb}A`}{{AnBbc}A`{{Cb{}{{C`{A`}}}}}}{{Anc}j{{Cb{}{{C`{A`}}}}}}{BjAn}{{}j}0","D":"Ej","p":[[5,"CurrentTask",0,72],[8,"AxTaskRef",0,73],[5,"TaskId",0,72],[1,"u64"],[1,"unit"],[6,"Option",74],[5,"TaskInner",0,72],[1,"bool"],[1,"i32"],[1,"never"],[5,"Formatter",75],[8,"Result",75],[5,"String",76],[1,"str"],[5,"WaitQueue",0,77],[1,"isize"],[5,"Duration",78],[8,"TimeValue",79],[10,"FnOnce",80],[10,"Send",81],[1,"usize"],[6,"Result",82],[5,"TypeId",83],[17,"Output"],[10,"Fn",80]],"r":[[0,73],[1,72],[2,72],[3,72],[4,77],[17,73],[18,73],[22,73],[31,73],[32,73],[43,73],[44,73],[45,73],[46,73],[47,73],[48,73],[49,73],[50,73],[51,73],[70,73],[71,73]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABsABAAIAAkAFAACABgAAQA1AAwA"}],\
["capability",{"t":"FFTTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Cap","CapError","EXECUTE","READ","WRITE","WithCap","access","access_or_err","access_unchecked","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_access","cap","clone","complement","contains","default","default","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","insert","intersection","intersects","into","into","into","into_iter","is_all","is_empty","iter","iter_names","new","not","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union"],"q":[[0,"capability"],[79,"core::result"],[80,"core::iter::traits::collect"],[81,"core::fmt"],[82,"core::option"],[83,"bitflags::iter"],[84,"core::any"]],"i":[0,0,2,2,2,0,1,1,1,2,2,2,2,2,2,2,2,2,1,2,3,1,2,3,1,1,2,2,2,2,3,2,2,3,2,2,2,2,2,2,3,1,2,3,2,2,2,2,2,2,2,2,2,1,2,3,2,2,2,2,2,1,2,2,2,2,2,2,2,1,2,3,1,2,3,1,2,3,2],"f":"``````{{{b{c}}d}{{h{cf}}}{}}{{{b{c}}de}{{h{ce}}}{}{}}{{{b{c}}}c{}}{{}d}{{dd}d}{{dd}j}10{dl}021{ce{}{}}00000{{{b{c}}d}n{}}{{{b{c}}}d{}}{dd}0{{dd}n}8{{}f}89{{ff}n}{{dc}j{{Ab{}{{A`{d}}}}}}{{dAd}Af}0000{{fAd}Af}{cc{}}00{l{{Ah{d}}}}{ld}00{cd{{Ab{}{{A`{d}}}}}}{Aj{{Ah{d}}}}{{dd}j}{{dd}d}<{ce{}{}}00{dc{}}{dn}0{d{{Al{d}}}}{d{{An{d}}}}{{cd}{{b{c}}}{}}{dd}8{{ddn}j}8989{c{{h{e}}}{}{}}00000{cB`{}}00:","D":"Fh","p":[[5,"WithCap",0],[5,"Cap",0],[5,"CapError",0],[6,"Result",79],[1,"unit"],[1,"u32"],[1,"bool"],[17,"Item"],[10,"IntoIterator",80],[5,"Formatter",81],[8,"Result",81],[6,"Option",82],[1,"str"],[5,"Iter",83],[5,"IterNames",83],[5,"TypeId",84]],"r":[],"b":[[14,"impl-Cap"],[15,"impl-Flags-for-Cap"],[35,"impl-Octal-for-Cap"],[36,"impl-Binary-for-Cap"],[37,"impl-Debug-for-Cap"],[38,"impl-LowerHex-for-Cap"],[39,"impl-UpperHex-for-Cap"],[45,"impl-Flags-for-Cap"],[46,"impl-Cap"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABsACQAQAAAAEwAFABsAAAAeAAEAIgAAACQABQAuAAAAOQAAAEYACAA="}],\
["crate_interface",{"t":"QXX","n":["call_interface","def_interface","impl_interface"],"q":[[0,"crate_interface"]],"i":[0,0,0],"f":"```","D":"h","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["driver_block",{"t":"EKEEECMMMCMMFNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNN","n":["BaseDriverOps","BlockDriverOps","DevError","DevResult","DeviceType","bcm2835sdhci","block_size","flush","num_blocks","ramdisk","read_block","write_block","SDHCIDriver","block_size","borrow","borrow_mut","device_name","device_type","flush","from","into","num_blocks","read_block","try_from","try_into","try_new","type_id","write_block","RamDisk","block_size","borrow","borrow_mut","default","device_name","device_type","flush","from","from","into","new","num_blocks","read_block","size","try_from","try_into","type_id","write_block"],"q":[[0,"driver_block"],[12,"driver_block::bcm2835sdhci"],[28,"driver_block::ramdisk"],[47,"driver_common"],[48,"core::result"],[49,"core::any"]],"i":[0,0,0,0,0,0,1,1,1,0,1,1,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"f":"``````{bd}{bf}{bh}`{{bh{l{j}}}f}0`{nd}{ce{}{}}0{nA`}{nAb}{nf}{cc{}}4{nh}{{nh{l{j}}}f}{c{{Ad{e}}}{}{}}0{{}{{f{n}}}}{cAf{}}3`{Ahd}::{{}Ah}{AhA`}{AhAb}{Ahf}:{{{l{j}}}Ah}?{dAh}{Ahh}{{Ahh{l{j}}}f}8;;90","D":"Bf","p":[[10,"BlockDriverOps",0],[1,"usize"],[8,"DevResult",47],[1,"u64"],[1,"u8"],[1,"slice"],[5,"SDHCIDriver",12],[1,"str"],[6,"DeviceType",47],[6,"Result",48],[5,"TypeId",49],[5,"RamDisk",28]],"r":[[0,47],[2,47],[3,47],[4,47]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABwACAABAAAAAwACAA4ABQAWAAMAGwABAB4ABgApAAEALAADAA=="}],\
["driver_common",{"t":"PPPKPPGIGPPPPPPPPPNNNNNMMNNNNNNNNNNNNN","n":["Again","AlreadyExists","BadState","BaseDriverOps","Block","Char","DevError","DevResult","DeviceType","Display","Err","InvalidParam","Io","Net","NoMemory","Ok","ResourceBusy","Unsupported","borrow","borrow","borrow_mut","borrow_mut","clone","device_name","device_type","eq","fmt","fmt","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"driver_common"],[38,"core::fmt"],[39,"core::result"],[40,"core::any"]],"i":[7,7,7,0,1,1,0,0,0,1,10,7,7,1,7,10,7,7,1,7,1,7,1,2,2,1,1,7,1,7,1,7,1,7,1,7,1,7],"f":"``````````````````{ce{}{}}000{bb}{df}{db}{{bb}h}{{bj}l}{{nj}l}{cc{}}077{c{{A`{e}}}{}{}}000{cAb{}}0","D":"Cb","p":[[6,"DeviceType",0],[10,"BaseDriverOps",0],[1,"str"],[1,"bool"],[5,"Formatter",38],[8,"Result",38],[6,"DevError",0],[6,"Result",39],[5,"TypeId",40],[8,"DevResult",0]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA0AAwATAAQAGgACACEABQA="}],\
["driver_display",{"t":"EEEEKFFNNNNNMOOMNNNNNOMNNMNNNNNNO","n":["BaseDriverOps","DevError","DevResult","DeviceType","DisplayDriverOps","DisplayInfo","FrameBuffer","borrow","borrow","borrow_mut","borrow_mut","clone","fb","fb_base_vaddr","fb_size","flush","fmt","from","from","from_raw_parts_mut","from_slice","height","info","into","into","need_flush","try_from","try_from","try_into","try_into","type_id","type_id","width"],"q":[[0,"driver_display"],[33,"driver_common"],[34,"core::fmt"],[35,"core::result"],[36,"core::any"]],"i":[0,0,0,0,0,0,0,3,1,3,1,1,2,1,1,2,1,3,1,3,3,1,2,3,1,2,3,1,3,1,3,1,1],"f":"```````{ce{}{}}000{bb}{df}``{dh}{{bj}l}{cc{}}0{{nA`}f}{{{Ab{n}}}f}`{db}88{dAd}{c{{Af{e}}}{}{}}000{cAh{}}0`","D":"Bd","p":[[5,"DisplayInfo",0],[10,"DisplayDriverOps",0],[5,"FrameBuffer",0],[8,"DevResult",33],[5,"Formatter",34],[8,"Result",34],[1,"u8"],[1,"usize"],[1,"slice"],[1,"bool"],[6,"Result",35],[5,"TypeId",36]],"r":[[0,33],[1,33],[2,33],[3,33]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA8ABAABAAMACAAEABEAAAAbAAUA"}],\
["driver_net",{"t":"EEEEFFIFFKNNMNNNNNNNNNMMNNNNNNNNNNNNNNNNCMNNNNNNNNNNNMMMMNNMNNNNNNNNMNNNNSSKFINNNNNNNMMNNNNMMNNNNNNNNNM","n":["BaseDriverOps","DevError","DevResult","DeviceType","EthernetAddress","NetBuf","NetBufBox","NetBufPool","NetBufPtr","NetDriverOps","alloc","alloc_boxed","alloc_tx_buffer","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_len","can_receive","can_transmit","capacity","capacity","drop","from","from","from","from","from","from_buf_ptr","header","header_len","into","into","into","into","into_buf_ptr","ixgbe","mac_address","new","new","packet","packet","packet_len","packet_mut","packet_mut","packet_with_header","raw_buf","raw_buf_mut","raw_ptr","receive","recycle_rx_buffer","recycle_tx_buffers","rx_queue_size","set_header_len","set_packet_len","transmit","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx_queue_size","type_id","type_id","type_id","type_id","INTEL_82599","INTEL_VEND","IxgbeHal","IxgbeNic","PhysAddr","alloc_tx_buffer","borrow","borrow_mut","can_receive","can_transmit","device_name","device_type","dma_alloc","dma_dealloc","from","init","into","mac_address","mmio_phys_to_virt","mmio_virt_to_phys","receive","recycle_rx_buffer","recycle_tx_buffers","rx_queue_size","transmit","try_from","try_into","tx_queue_size","type_id","wait_until"],"q":[[0,"driver_net"],[73,"driver_net::ixgbe"],[103,"driver_net::net_buf"],[104,"alloc::sync"],[105,"core::option"],[106,"driver_common"],[107,"ixgbe_driver::ixgbe"],[108,"alloc::boxed"],[109,"core::ptr::non_null"],[110,"core::result"],[111,"core::any"],[112,"ixgbe_driver::hal"],[113,"core::time"],[114,"ixgbe_driver"],[115,"ixgbe_driver::memory"]],"i":[0,0,0,0,0,0,0,0,0,0,1,1,6,3,1,16,8,3,1,16,8,1,6,6,3,1,3,3,1,16,8,8,3,3,3,3,1,16,8,3,0,6,1,8,3,8,8,3,8,3,3,3,8,6,6,6,6,3,3,6,3,1,16,8,3,1,16,8,6,3,1,16,8,0,0,0,0,0,20,20,20,20,20,20,20,21,21,20,20,20,20,21,21,20,20,20,20,20,20,20,20,20,21],"f":"``````````{{{d{b}}}{{h{f}}}}{{{d{b}}}{{h{j}}}}{{ln}{{Ab{A`}}}}{ce{}{}}0000000{bn}{lAd}0{fn}2{fAf}{cc{}}000{AhA`}{A`{{Aj{f}}}}{f{{An{Al}}}}58888{{{Aj{f}}}A`}`{lB`}{{nn}{{Ab{{d{b}}}}}}{{{Bb{Al}}{Bb{Al}}n}A`}4{A`{{An{Al}}}}{A`n}61666{A`}{l{{Ab{A`}}}}{{lA`}Ab}{lAb}{ln}{{fn}Af}03{c{{Bd{e}}}{}{}}00000002{cBf{}}000`````{{{Bh{c}}n}{{Ab{A`}}}Bj}{ce{}{}}0{{{Bh{c}}}AdBj}0{{{Bh{c}}}BlBj}{{{Bh{c}}}BnBj}{n{{C`{n{Bb{Al}}}}}}{{n{Bb{Al}}n}Cb}{cc{}}{{nn}{{Ab{{Bh{c}}}}}Bj}7{{{Bh{c}}}B`Bj}{{nn}{{Bb{Al}}}}{{{Bb{Al}}n}n}{{{Bh{c}}}{{Ab{A`}}}Bj}{{{Bh{c}}A`}AbBj}{{{Bh{c}}}AbBj}{{{Bh{c}}}nBj}2{c{{Bd{e}}}{}{}}01{cBf{}}{Cd{{Bd{AfBl}}}}","D":"Gl","p":[[5,"NetBufPool",0,103],[5,"Arc",104],[5,"NetBuf",0,103],[6,"Option",105],[8,"NetBufBox",0,103],[10,"NetDriverOps",0],[1,"usize"],[5,"NetBufPtr",0],[8,"DevResult",106],[1,"bool"],[1,"unit"],[5,"IxgbeNetBuf",107],[5,"Box",108],[1,"u8"],[1,"slice"],[5,"EthernetAddress",0],[5,"NonNull",109],[6,"Result",110],[5,"TypeId",111],[5,"IxgbeNic",73],[10,"IxgbeHal",73,112],[1,"str"],[6,"DeviceType",106],[1,"tuple"],[1,"i32"],[5,"Duration",113]],"r":[[0,106],[1,106],[2,106],[3,106],[5,103],[6,103],[7,103],[73,114],[74,114],[75,112],[77,115]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACkACAABAAMADgAHACAAAAA9AAcARgADAE8ABgBbAAAAXgAIAA=="}],\
["driver_pci",{"t":"TGPTGFFTFFPTTGTTPTPTTTTPGPTPGPFFTTTTTTPFPTPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNONNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOO","n":["BUS_MASTER","BarInfo","Below1MiB","CAPABILITIES_LIST","Cam","CapabilityInfo","Command","DETECTED_PARITY_ERROR","DeviceFunction","DeviceFunctionInfo","Ecam","FAST_BACK_TO_BACK_CAPABLE","FAST_BACK_TO_BACK_ENABLE","HeaderType","INTERRUPT_DISABLE","INTERRUPT_STATUS","IO","IO_SPACE","InvalidBarType","MASTER_DATA_PARITY_ERROR","MEMORY_SPACE","MEMORY_WRITE_AND_INVALIDATE_ENABLE","MHZ_66_CAPABLE","Memory","MemoryBarType","MmioCam","PARITY_ERROR_RESPONSE","PciCardbusBridge","PciError","PciPciBridge","PciRangeAllocator","PciRoot","RECEIVED_MASTER_ABORT","RECEIVED_TARGET_ABORT","SERR_ENABLE","SIGNALED_SYSTEM_ERROR","SIGNALED_TARGET_ABORT","SPECIAL_CYCLES","Standard","Status","Unrecognised","VGA_PALETTE_SNOOP","Width32","Width64","all","all","alloc","bar_info","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus","capabilities","class","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","contains","contains","default","default","device","device_id","difference","difference","empty","empty","enumerate_bus","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","function","get_status_command","header_type","id","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","memory_address_size","new","new","not","not","offset","private_header","prog_if","remove","remove","revision","set","set","set_bar_32","set_bar_64","set_command","size","sub","sub","sub_assign","sub_assign","subclass","symmetric_difference","symmetric_difference","takes_two_entries","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","valid","vendor_id","address","address","address_type","prefetchable","size","size"],"q":[[0,"driver_pci"],[298,"driver_pci::BarInfo"],[304,"virtio_drivers::transport::pci::bus"],[305,"core::option"],[306,"core::result"],[307,"core::iter::traits::collect"],[308,"core::fmt"],[309,"bitflags::iter"],[310,"alloc::string"],[311,"core::any"]],"i":[2,0,16,1,0,0,0,1,0,0,15,1,2,0,2,1,9,2,10,1,2,2,1,9,0,15,2,19,0,19,0,0,1,1,2,1,1,2,19,0,19,2,16,16,1,2,3,6,1,2,1,2,1,2,1,2,1,1,2,2,1,2,1,2,3,1,2,10,6,15,9,16,17,7,18,19,3,1,2,10,6,15,9,16,17,7,18,19,7,6,18,1,2,10,15,9,16,17,7,18,19,1,2,10,15,9,16,17,7,18,19,1,2,1,2,1,2,7,18,1,2,1,2,6,1,2,10,15,9,16,17,7,18,19,1,2,1,1,1,1,1,2,2,2,2,2,10,10,6,15,9,9,16,17,7,7,18,18,19,3,1,2,10,6,15,9,16,17,7,18,19,19,1,2,1,1,2,2,1,2,1,2,1,2,7,6,18,17,1,2,1,2,1,2,3,1,2,10,6,15,9,16,17,7,18,19,1,2,1,2,1,2,1,2,1,2,9,3,6,1,2,17,17,18,1,2,18,1,2,6,6,6,15,1,2,1,2,18,1,2,9,1,2,10,15,9,16,17,7,18,19,10,9,7,18,1,2,3,1,2,10,6,15,9,16,16,17,7,18,19,3,1,2,10,6,15,9,16,17,7,18,19,3,1,2,10,6,15,9,16,17,7,18,19,1,2,7,18,33,34,33,33,33,34],"f":"````````````````````````````````````````````{{}b}{{}d}{{fh}{{j{h}}}}{{lnA`}{{Af{AbAd}}}}{{bb}b}{{dd}d}{{bb}Ah}{{dd}Ah}3210{bAj}0{dAj}05432{ce{}{}}00000000000000000000000`{{ln}Al}`{bb}{dd}{AdAd}{AnAn}{AbAb}{B`B`}{BbBb}{nn}{BdBd}{BfBf}{{ce}Ah{}{}}000000000:9{{bb}Bh}{{dd}Bh}{{}b}{{}d}``{{bb}b}{{dd}d}32{{lA`}Bj}65{{AdAd}Bh}{{AnAn}Bh}{{AbAb}Bh}{{B`B`}Bh}{{BbBb}Bh}{{nn}Bh}{{BdBd}Bh}{{BfBf}Bh}{{bc}Ah{{Bn{}{{Bl{b}}}}}}{{dc}Ah{{Bn{}{{Bl{d}}}}}}{{bC`}{{Af{AhCb}}}}0000{{dC`}{{Af{AhCb}}}}0000{{AdC`}{{Af{AhCb}}}}0{{lC`}{{Af{AhCb}}}}{{AnC`}{{Af{AhCb}}}}{{AbC`}{{Af{AhCb}}}}0{{B`C`}{{Af{AhCb}}}}{{BbC`}{{Af{AhCb}}}}{{nC`}{{Af{AhCb}}}}0{{BdC`}{{Af{AhCb}}}}0{{BfC`}{{Af{AhCb}}}}{cc{}}0000000000{A`Bf}1{Aj{{j{b}}}}{Aj{{j{d}}}}{Ajb}0{Ajd}010{cb{{Bn{}{{Bl{b}}}}}}{cd{{Bn{}{{Bl{d}}}}}}{Cd{{j{b}}}}{Cd{{j{d}}}}`{{ln}{{Cf{bd}}}}``{{bb}Ah}{{dd}Ah}{{bb}b}{{dd}d}{{bb}Bh}{{dd}Bh}{ce{}{}}00000000000{b}{d}{bBh}{dBh}10{b{{Ch{b}}}}{d{{Ch{d}}}}{b{{Cj{b}}}}{d{{Cj{d}}}}{Ab{{j{{Cf{hCl}}}}}}{{hh}f}{{A`An}l}{bb}{dd}```{{bb}Ah}{{dd}Ah}`{{bbBh}Ah}{{ddBh}Ah}{{lnA`Cl}Ah}{{lnA`h}Ah}{{lnd}Ah}{AnCl}{{bb}b}{{dd}d}98`10{AbBh}{ce{}{}}000000000{cCn{}}000<;{c{{Af{e}}}{}{}}000000{A`{{Af{B`}}}}11111111111111111{cD`{}}0000000000076{nBh}```````","D":"AE`","p":[[5,"Status",0,304],[5,"Command",0,304],[5,"PciRangeAllocator",0],[1,"u64"],[6,"Option",305],[5,"PciRoot",0,304],[5,"DeviceFunction",0,304],[1,"u8"],[6,"BarInfo",0,304],[6,"PciError",0,304],[6,"Result",306],[1,"unit"],[1,"u16"],[5,"CapabilityIterator",304],[6,"Cam",0,304],[6,"MemoryBarType",0,304],[5,"CapabilityInfo",0,304],[5,"DeviceFunctionInfo",0,304],[6,"HeaderType",0,304],[1,"bool"],[5,"BusDeviceIterator",304],[17,"Item"],[10,"IntoIterator",307],[5,"Formatter",308],[5,"Error",308],[1,"str"],[1,"tuple"],[5,"Iter",309],[5,"IterNames",309],[1,"u32"],[5,"String",310],[5,"TypeId",311],[15,"Memory",298],[15,"IO",298]],"r":[[1,304],[4,304],[5,304],[6,304],[8,304],[9,304],[13,304],[24,304],[28,304],[31,304],[39,304]],"b":[[56,"impl-Status"],[57,"impl-Flags-for-Status"],[58,"impl-Flags-for-Command"],[59,"impl-Command"],[136,"impl-Debug-for-Status"],[137,"impl-UpperHex-for-Status"],[138,"impl-Binary-for-Status"],[139,"impl-Octal-for-Status"],[140,"impl-LowerHex-for-Status"],[141,"impl-Debug-for-Command"],[142,"impl-LowerHex-for-Command"],[143,"impl-Binary-for-Command"],[144,"impl-UpperHex-for-Command"],[145,"impl-Octal-for-Command"],[146,"impl-Display-for-PciError"],[147,"impl-Debug-for-PciError"],[150,"impl-Debug-for-BarInfo"],[151,"impl-Display-for-BarInfo"],[154,"impl-Debug-for-DeviceFunction"],[155,"impl-Display-for-DeviceFunction"],[156,"impl-Debug-for-DeviceFunctionInfo"],[157,"impl-Display-for-DeviceFunctionInfo"],[174,"impl-Status"],[175,"impl-Flags-for-Status"],[176,"impl-Flags-for-Command"],[177,"impl-Command"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIgACwA6AAEAQQAXAFwAEwB0AAEAfQAJAIkAFgCrAAAAsAABAM8AAQDyAA0AAgEkAA=="}],\
["driver_virtio",{"t":"PGPPFFIKFFKFMNNNNNNNNNNNNNNNNNNNNNMNNNNNMNNNNNMMNNNNNNNNNNNNNNNNMNNNNNNNNNNMNNMNNNMNNNCHHMNNMNNMNNNMNNNNNMNNNMNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNTGPFTGFFFTFFPTTGTTPTPTTTTPGPTSPGPFTTTTTTPFPTPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNONNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOO","n":["Both","BufferDirection","DeviceToDriver","DriverToDevice","MmioTransport","PciTransport","PhysAddr","Transport","VirtIoBlkDev","VirtIoGpuDev","VirtIoHal","VirtIoNetDev","ack_interrupt","ack_interrupt","ack_interrupt","alloc_tx_buffer","begin_init","block_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_receive","can_transmit","clone","clone_into","config_space","config_space","config_space","device_name","device_name","device_name","device_type","device_type","device_type","device_type","device_type","device_type","dma_alloc","dma_dealloc","drop","drop","eq","fb","finish_init","flush","flush","fmt","fmt","fmt","from","from","from","from","from","from","get_status","get_status","get_status","info","into","into","into","into","into","into","mac_address","max_queue_size","max_queue_size","max_queue_size","mmio_phys_to_virt","need_flush","new","new","notify","notify","notify","num_blocks","pci","probe_mmio_device","probe_pci_device","queue_set","queue_set","queue_set","queue_unset","queue_unset","queue_unset","queue_used","queue_used","queue_used","read_block","read_device_features","read_device_features","read_device_features","receive","recycle_rx_buffer","recycle_tx_buffers","requires_legacy_layout","requires_legacy_layout","requires_legacy_layout","rx_queue_size","set_guest_page_size","set_guest_page_size","set_guest_page_size","set_status","set_status","set_status","share","to_owned","transmit","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","tx_queue_size","type_id","type_id","type_id","type_id","type_id","type_id","unshare","vendor_id","version","write_block","write_driver_features","write_driver_features","write_driver_features","BUS_MASTER","BarInfo","Below1MiB","BusDeviceIterator","CAPABILITIES_LIST","Cam","CapabilityInfo","CapabilityIterator","Command","DETECTED_PARITY_ERROR","DeviceFunction","DeviceFunctionInfo","Ecam","FAST_BACK_TO_BACK_CAPABLE","FAST_BACK_TO_BACK_ENABLE","HeaderType","INTERRUPT_DISABLE","INTERRUPT_STATUS","IO","IO_SPACE","InvalidBarType","MASTER_DATA_PARITY_ERROR","MEMORY_SPACE","MEMORY_WRITE_AND_INVALIDATE_ENABLE","MHZ_66_CAPABLE","Memory","MemoryBarType","MmioCam","PARITY_ERROR_RESPONSE","PCI_CAP_ID_VNDR","PciCardbusBridge","PciError","PciPciBridge","PciRoot","RECEIVED_MASTER_ABORT","RECEIVED_TARGET_ABORT","SERR_ENABLE","SIGNALED_SYSTEM_ERROR","SIGNALED_TARGET_ABORT","SPECIAL_CYCLES","Standard","Status","Unrecognised","VGA_PALETTE_SNOOP","Width32","Width64","all","all","bar_info","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus","capabilities","class","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","contains","contains","default","default","device","device_id","difference","difference","empty","empty","enumerate_bus","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","function","get_status_command","header_type","id","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","memory_address_size","new","next","next","not","not","offset","private_header","prog_if","remove","remove","revision","set","set","set_bar_32","set_bar_64","set_command","size","sub","sub","sub_assign","sub_assign","subclass","symmetric_difference","symmetric_difference","takes_two_entries","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","valid","vendor_id","address","address","address_type","prefetchable","size","size"],"q":[[0,"driver_virtio"],[147,"driver_virtio::pci"],[458,"driver_virtio::pci::BarInfo"],[464,"virtio_drivers::transport"],[465,"virtio_drivers::transport::mmio"],[466,"virtio_drivers::transport::pci"],[467,"driver_virtio::net"],[468,"driver_net"],[469,"driver_common"],[470,"driver_virtio::blk"],[471,"virtio_drivers::hal"],[472,"core::ptr::non_null"],[473,"virtio_drivers"],[474,"core::result"],[475,"driver_virtio::gpu"],[476,"driver_display"],[477,"core::fmt"],[478,"virtio_drivers::transport::pci::bus"],[479,"core::option"],[480,"core::any"],[481,"core::iter::traits::collect"],[482,"bitflags::iter"],[483,"alloc::string"]],"i":[11,0,11,11,0,0,0,0,0,0,0,0,1,3,4,5,1,10,10,17,5,11,3,4,10,17,5,11,3,4,5,5,11,11,1,3,4,10,17,5,1,10,17,5,3,4,9,9,3,4,11,17,1,10,17,11,3,4,10,17,5,11,3,4,1,3,4,17,10,17,5,11,3,4,5,1,3,4,9,17,3,4,1,3,4,10,0,0,0,1,3,4,1,3,4,1,3,4,10,1,3,4,5,5,5,1,3,4,5,1,3,4,1,3,4,9,11,5,10,17,5,11,3,4,10,17,5,11,3,4,10,17,5,5,10,17,5,11,3,4,9,3,3,10,1,3,4,43,0,48,0,42,0,0,0,0,42,0,0,47,42,43,0,43,42,44,43,45,42,43,43,42,44,0,47,43,0,50,0,50,0,42,42,43,42,42,43,50,0,50,43,48,48,42,43,33,42,43,42,43,42,43,42,43,42,42,43,43,42,43,42,43,42,43,45,33,47,44,48,46,49,51,34,38,50,42,43,45,33,47,44,48,46,49,51,34,38,50,34,33,38,42,43,45,47,44,48,49,34,38,50,42,43,45,47,44,48,49,34,38,50,42,43,42,43,42,43,34,38,42,43,42,43,33,42,43,45,47,44,48,49,34,38,50,42,43,42,42,42,42,42,43,43,43,43,43,45,45,33,47,44,44,48,46,49,51,34,34,38,38,50,42,43,45,33,47,44,48,46,49,51,34,38,50,50,42,43,42,42,43,43,42,43,42,43,42,43,34,33,38,49,42,43,42,43,42,43,42,43,45,33,47,44,48,46,49,51,34,38,50,42,43,46,51,42,43,42,43,42,43,42,43,44,33,46,51,42,43,49,49,38,42,43,38,42,43,33,33,33,47,42,43,42,43,38,42,43,44,42,43,45,47,44,48,49,34,38,50,45,44,34,38,42,43,42,43,45,33,47,44,48,48,46,49,51,34,38,50,42,43,45,33,47,44,48,46,49,51,34,38,50,42,43,45,33,47,44,48,46,49,51,34,38,50,42,43,34,38,57,58,57,57,57,58],"f":"````````````{bd}{fd}{hd}{{{j{ce}}l}{{A`{n}}}Abb}{{bc}c{}}{{{Ad{ce}}}lAbb}{ce{}{}}00000000000{{{j{ce}}}dAbb}0{AfAf}{{ce}Ah{}{}}{b{{An{{Aj{c}}Al}}}{}}{f{{An{{Aj{c}}Al}}}{}}{h{{An{{Aj{c}}Al}}}{}}{{{Ad{ce}}}B`Abb}{{{Bb{ce}}}B`Abb}{{{j{ce}}}B`Abb}{bBd}{{{Ad{ce}}}BfAbb}{{{Bb{ce}}}BfAbb}{{{j{ce}}}BfAbb}{fBd}{hBd}{{lAf}{{Bj{l{Aj{Bh}}}}}}{{l{Aj{Bh}}l}Bl}{fAh}{hAh}{{AfAf}d}{{{Bb{ce}}}BnAbb}{bAh}{{{Ad{ce}}}A`Abb}{{{Bb{ce}}}A`Abb}{{AfC`}{{An{AhCb}}}}{{fC`}{{An{AhCb}}}}{{hC`}{{An{AhCb}}}}{cc{}}00000{bCd}{fCd}{hCd}{{{Bb{ce}}}CfAbb}{ce{}{}}00000{{{j{ce}}}ChAbb}{{bCj}Cl}{{fCj}Cl}{{hCj}Cl}{{ll}{{Aj{Bh}}}}{{{Bb{ce}}}dAbb}{{{Aj{Cn}}}{{An{fD`}}}}{{DbDd}{{An{hDf}}}}{{bCj}Ah}{{fCj}Ah}{{hCj}Ah}{{{Ad{ce}}}DhAbb}`{{Bhl}{{Dj{{Bj{Bff}}}}}}{{DbDdDl}{{Dj{{Bj{Bfh}}}}}}{{bCjCllll}Ah}{{fCjCllll}Ah}{{hCjCllll}Ah}876{{bCj}d}{{fCj}d}{{hCj}d}{{{Ad{ce}}Dh{Dn{Bh}}}A`Abb}{bDh}{fDh}{hDh}{{{j{ce}}}{{A`{n}}}Abb}{{{j{ce}}n}A`Abb}{{{j{ce}}}A`Abb}{bd}{fd}{hd}{{{j{ce}}}lAbb}{{bCl}Ah}{{fCl}Ah}{{hCl}Ah}{{bCd}Ah}{{fCd}Ah}{{hCd}Ah}{{{Aj{{Dn{Bh}}}}Af}l}{ce{}{}}={c{{An{e}}}{}{}}00000000000{c{{A`{{Ad{ec}}}}}bAb}{c{{A`{{Bb{ec}}}}}bAb}{c{{A`{{j{ec}}}}}bAb}<{cE`{}}00000{{l{Aj{{Dn{Bh}}}}Af}Ah}{fCl}{fEb}{{{Ad{ce}}Dh{Dn{Bh}}}A`Abb}{{bDh}Ah}{{fDh}Ah}{{hDh}Ah}``````````````````````````````````````````````{{}Ed}{{}Ef}{{DbDdBh}{{An{EhEj}}}}{{EdEd}Ed}{{EfEf}Ef}{{EdEd}Ah}{{EfEf}Ah}3210{EdCj}0{EfCj}05432{ce{}{}}0000000000000000000000000`{{DbDd}El}`{EdEd}{EfEf}{EjEj}{EnEn}{EhEh}{F`F`}{FbFb}{DdDd}{DlDl}{FdFd}{{ce}Ah{}{}}000000000:9{{EdEd}d}{{EfEf}d}{{}Ed}{{}Ef}``{{EdEd}Ed}{{EfEf}Ef}32{{DbBh}Ff}65{{EjEj}d}{{EnEn}d}{{EhEh}d}{{F`F`}d}{{FbFb}d}{{DdDd}d}{{DlDl}d}{{FdFd}d}{{Edc}Ah{{Fj{}{{Fh{Ed}}}}}}{{Efc}Ah{{Fj{}{{Fh{Ef}}}}}}{{EdC`}{{An{AhCb}}}}0000{{EfC`}{{An{AhCb}}}}0000{{EjC`}{{An{AhCb}}}}0{{DbC`}{{An{AhCb}}}}{{EnC`}{{An{AhCb}}}}{{EhC`}{{An{AhCb}}}}0{{F`C`}{{An{AhCb}}}}{{ElC`}{{An{AhCb}}}}{{FbC`}{{An{AhCb}}}}{{FfC`}{{An{AhCb}}}}{{DdC`}{{An{AhCb}}}}0{{DlC`}{{An{AhCb}}}}0{{FdC`}{{An{AhCb}}}}{cc{}}00000000000{BhFd}1{Cj{{Dj{Ed}}}}{Cj{{Dj{Ef}}}}{CjEd}0{CjEf}010{cEd{{Fj{}{{Fh{Ed}}}}}}{cEf{{Fj{}{{Fh{Ef}}}}}}{B`{{Dj{Ed}}}}{B`{{Dj{Ef}}}}`{{DbDd}{{Bj{EdEf}}}}``{{EdEd}Ah}{{EfEf}Ah}{{EdEd}Ed}{{EfEf}Ef}{{EdEd}d}{{EfEf}d}{ce{}{}}000000000000{Ed}{Ef}22{Edd}{Efd}10{Ed{{Fl{Ed}}}}{Ef{{Fl{Ef}}}}{Ed{{Fn{Ed}}}}{Ef{{Fn{Ef}}}}{Eh{{Dj{{Bj{DhCl}}}}}}{{BhEn}Db}{ElDj}{FfDj}{EdEd}{EfEf}```{{EdEd}Ah}{{EfEf}Ah}`{{EdEdd}Ah}{{EfEfd}Ah}{{DbDdBhCl}Ah}{{DbDdBhDh}Ah}{{DbDdEf}Ah}{EnCl}{{EdEd}Ed}{{EfEf}Ef}98`10{Ehd}{ce{}{}}000000000{cG`{}}000<;{c{{An{e}}}{}{}}00000{Bh{{An{F`}}}}11111111111111111111{cE`{}}00000000000076{Ddd}```````","D":"ALb","p":[[10,"Transport",0,464],[1,"bool"],[5,"MmioTransport",0,465],[5,"PciTransport",0,466],[5,"VirtIoNetDev",0,467],[1,"usize"],[5,"NetBufPtr",468],[8,"DevResult",469],[10,"VirtIoHal",0],[5,"VirtIoBlkDev",0,470],[6,"BufferDirection",0,471],[1,"unit"],[5,"NonNull",472],[6,"Error",473],[6,"Result",474],[1,"str"],[5,"VirtIoGpuDev",0,475],[6,"DeviceType",464],[6,"DeviceType",469],[1,"u8"],[1,"tuple"],[1,"i32"],[5,"FrameBuffer",476],[5,"Formatter",477],[5,"Error",477],[5,"DeviceStatus",464],[5,"DisplayInfo",476],[5,"EthernetAddress",468],[1,"u16"],[1,"u32"],[5,"VirtIOHeader",465],[6,"MmioError",465],[5,"PciRoot",147,478],[5,"DeviceFunction",147,478],[6,"VirtioPciError",466],[1,"u64"],[6,"Option",479],[5,"DeviceFunctionInfo",147,478],[1,"slice"],[5,"TypeId",480],[6,"MmioVersion",465],[5,"Status",147,478],[5,"Command",147,478],[6,"BarInfo",147,478],[6,"PciError",147,478],[5,"CapabilityIterator",147,478],[6,"Cam",147,478],[6,"MemoryBarType",147,478],[5,"CapabilityInfo",147,478],[6,"HeaderType",147,478],[5,"BusDeviceIterator",147,478],[17,"Item"],[10,"IntoIterator",481],[5,"Iter",482],[5,"IterNames",482],[5,"String",483],[15,"Memory",458],[15,"IO",458]],"r":[[1,471],[4,465],[5,466],[6,471],[7,464],[8,470],[9,475],[11,467],[148,478],[150,478],[152,478],[153,478],[154,478],[155,478],[157,478],[158,478],[162,478],[173,478],[176,478],[178,478],[180,478],[188,478]],"b":[[204,"impl-Status"],[205,"impl-Flags-for-Status"],[206,"impl-Command"],[207,"impl-Flags-for-Command"],[286,"impl-LowerHex-for-Status"],[287,"impl-Binary-for-Status"],[288,"impl-UpperHex-for-Status"],[289,"impl-Octal-for-Status"],[290,"impl-Debug-for-Status"],[291,"impl-Binary-for-Command"],[292,"impl-UpperHex-for-Command"],[293,"impl-Octal-for-Command"],[294,"impl-Debug-for-Command"],[295,"impl-LowerHex-for-Command"],[296,"impl-Display-for-PciError"],[297,"impl-Debug-for-PciError"],[300,"impl-Display-for-BarInfo"],[301,"impl-Debug-for-BarInfo"],[306,"impl-Debug-for-DeviceFunction"],[307,"impl-Display-for-DeviceFunction"],[308,"impl-Debug-for-DeviceFunctionInfo"],[309,"impl-Display-for-DeviceFunctionInfo"],[327,"impl-Status"],[328,"impl-Flags-for-Status"],[329,"impl-Command"],[330,"impl-Flags-for-Command"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAO8AJAAOAAIAEgAQACQABAAqAAQAMQADADYABABCAAIASwAAAE0AAQBQAAAAVAACAFsAAQBeAAEAYQACAGUABABrAAIAbwABAHIAAQB1AA0AhgAGAJAAAACSAAEAzgAAANAAAADVABkA8gATAAoBAQATAQkAHwEYAEQBAABJAQAASwEAAGkBAwB3AQEAjwENAJ8BJwA="}],\
["dw_apb_uart",{"t":"FNNNNNNNNNNNN","n":["DW8250","borrow","borrow_mut","from","getchar","init","into","new","putchar","set_ier","try_from","try_into","type_id"],"q":[[0,"dw_apb_uart"],[13,"core::option"],[14,"core::result"],[15,"core::any"]],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1],"f":"`{ce{}{}}0{cc{}}{b{{f{d}}}}{bh}3{jb}{{bd}h}{{bl}h}{c{{n{e}}}{}{}}0{cA`{}}","D":"Ab","p":[[5,"DW8250",0],[1,"u8"],[6,"Option",13],[1,"unit"],[1,"usize"],[1,"bool"],[6,"Result",14],[5,"TypeId",15]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAQAEAAAAAIAAwALAAwADQA="}],\
["flatten_objects",{"t":"FNNNNNNNNNNNNNNNN","n":["FlattenObjects","add","add_at","borrow","borrow_mut","capacity","count","from","get","get_mut","into","is_assigned","new","remove","try_from","try_into","type_id"],"q":[[0,"flatten_objects"],[17,"core::option"],[18,"core::result"],[19,"core::any"]],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":"`{{{b{c}}c}{{f{d}}}{}}{{{b{c}}dc}{{f{d}}}{}}{ce{}{}}0{{{b{c}}}d{}}0{cc{}}{{{b{c}}d}{{f{c}}}{}}03{{{b{c}}d}h{}}{{}{{b{c}}}{}}2{c{{j{e}}}{}{}}0{cl{}}","D":"Aj","p":[[5,"FlattenObjects",0],[1,"usize"],[6,"Option",17],[1,"bool"],[6,"Result",18],[5,"TypeId",19]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAQAEAAAAAQABQAPABAAEQA="}],\
["handler_table",{"t":"IFNNNNNNNNNN","n":["Handler","HandlerTable","borrow","borrow_mut","from","handle","into","new","register_handler","try_from","try_into","type_id"],"q":[[0,"handler_table"],[12,"core::result"],[13,"core::any"]],"i":[0,0,1,1,1,1,1,1,1,1,1,1],"f":"``{ce{}{}}0{cc{}}{{bd}f}2{{}b}{{bdh}f}{c{{j{e}}}{}{}}0{cl{}}","D":"A`","p":[[5,"HandlerTable",0],[1,"usize"],[1,"bool"],[8,"Handler",0],[6,"Result",12],[5,"TypeId",13]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAQAEAAAAAMABAAKAAsADAA="}],\
["kernel_guard",{"t":"KFKFFFRMNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNMNNNNNNNNNNNNNNNN","n":["BaseGuard","IrqSave","KernelGuardIf","NoOp","NoPreempt","NoPreemptIrqSave","State","acquire","acquire","acquire","acquire","acquire","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","default","disable_preempt","drop","drop","drop","drop","enable_preempt","from","from","from","from","into","into","into","into","new","new","new","new","release","release","release","release","release","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"kernel_guard"],[58,"core::result"],[59,"core::any"]],"i":[0,0,0,0,0,0,8,8,5,1,2,3,5,1,2,3,5,1,2,3,1,2,3,9,5,1,2,3,9,5,1,2,3,5,1,2,3,5,1,2,3,8,5,1,2,3,5,1,2,3,5,1,2,3,5,1,2,3],"f":"```````{{}c{}}0000{ce{}{}}0000000{{}b}{{}d}{{}f}{{}h}{jh}{bh}{dh}{fh}4{cc{}}0009999{{}j}987{ch{}}0000{c{{l{e}}}{}{}}0000000{cn{}}000","D":"C`","p":[[5,"IrqSave",0],[5,"NoPreempt",0],[5,"NoPreemptIrqSave",0],[1,"unit"],[5,"NoOp",0],[6,"Result",58],[5,"TypeId",59],[10,"BaseGuard",0],[10,"KernelGuardIf",0]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACIAAwAJAA4AGQADACsADwA="}],\
["lazy_init",{"t":"FNNNNNNNNNNNNNNNNN","n":["LazyInit","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","get_mut_unchecked","get_unchecked","init_by","into","is_init","new","try_from","try_get","try_into","type_id"],"q":[[0,"lazy_init"],[18,"core::fmt"],[19,"core::result"],[20,"core::option"],[21,"core::any"]],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":"`{ce{}{}}0{{{b{c}}}c{}}0{{{b{c}}}d{}}{{{b{c}}f}hj}{cc{}}33{{{b{c}}c}d{}}5{{{b{c}}}l{}}{{}{{b{c}}}{}}{c{{n{e}}}{}{}}{{{b{c}}}{{A`{c}}}{}}1{cAb{}}","D":"Ad","p":[[5,"LazyInit",0],[1,"unit"],[5,"Formatter",18],[8,"Result",18],[10,"Debug",18],[1,"bool"],[6,"Result",19],[6,"Option",20],[5,"TypeId",21]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAgAAwACAAUADwAAABEAAQA="}],\
["linked_list",{"t":"EKEEFRKMNNNNNNNMNNNMNNNNNNNNCKFRFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNN","n":["Adapter","AdapterWrapped","Cursor","Links","List","Wrapped","Wrapper","as_ref","back","borrow","borrow_mut","cursor_front","default","drop","from","from_pointer","front","insert_after","into","into_pointer","is_empty","new","pop_front","push_back","remove","try_from","try_into","type_id","unsafe_list","Adapter","Cursor","EntryType","Iterator","Links","List","back","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current","cursor_back","cursor_front","from","from","from","from","front","insert_after","insert_before","insert_only_entry","into","into","into","into","into_iter","into_iter","is_empty","iter","iter_back","move_next","move_prev","new","new","next","next_back","push_back","push_front","remove","to_links","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"linked_list"],[29,"linked_list::unsafe_list"],[86,"linked_list::linked_list"],[87,"core::marker"],[88,"core::option"],[89,"core::ptr::non_null"],[90,"core::result"],[91,"core::any"],[92,"core::iter::traits::double_ended"]],"i":[0,0,0,0,0,5,0,1,3,3,3,3,3,3,3,1,3,3,3,1,3,3,3,3,3,3,3,3,0,0,0,13,0,0,0,12,12,14,17,6,12,14,17,6,6,12,12,12,14,17,6,12,12,12,12,12,14,17,6,12,14,12,12,12,6,6,12,17,14,14,12,12,12,13,12,14,17,6,12,14,17,6,12,14,17,6],"f":"```````{bcd}{{{f{c}}}hj}{ce{}{}}0{{{f{c}}}{{l{c}}}j}{{}{{f{c}}}j}{{{f{c}}}nj}{cc{}}{{{A`{c}}}bd}6{{{f{c}}A`}nj}6{b{{A`{c}}}d}{{{f{c}}}Abj}6959{c{{Ad{e}}}{}{}}0{cAf{}}```````{{{Ah{c}}}{{h{A`}}}{Ajd}};;;;;;;;{{{l{c}}}h{Ajd}}{{{Ah{c}}}{{l{c}}}{Ajd}}099992{{{Ah{c}}A`}n{Ajd}}0{{{Ah{c}}}n{Ajd}}????{{{Ah{c}}}e{Ajd}{}}{ce{}{}}{{{Ah{c}}}Ab{Ajd}}{{{Ah{c}}}{{Al{c}}}{Ajd}}{{{Ah{c}}}{{`{{B`{}{{An{}}}}}}}{Ajd}}{{{l{c}}}n{Ajd}}0{{}{{Ah{c}}}{Ajd}}{{}{{Bb{c}}}d}{{{Al{c}}}{{h{e}}}{Ajd}{}}0999{c{{Bb{c}}}{}}{c{{Ad{e}}}{}{}}0000000{cAf{}}000","D":"Fj","p":[[10,"Wrapper",0,86],[10,"Sized",87],[5,"List",0,86],[6,"Option",88],[10,"AdapterWrapped",0,86],[5,"Cursor",29],[1,"unit"],[5,"NonNull",89],[1,"bool"],[6,"Result",90],[5,"TypeId",91],[5,"List",29],[10,"Adapter",29],[5,"Iterator",29],[17,"Item"],[10,"DoubleEndedIterator",92],[5,"Links",29]],"r":[[0,29],[1,86],[2,29],[3,29],[4,86],[6,86]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACEACQABAAAAAwABAAoAAQANAAEAGgACACUABwA8AAEARQABAEsACwA="}],\
["memory_addr",{"t":"SFFNNNNHNNHNNHNNHNNHNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNHNNNNNNNNNNNNNN","n":["PAGE_SIZE_4K","PhysAddr","VirtAddr","add","add","add_assign","add_assign","align_down","align_down","align_down","align_down_4k","align_down_4k","align_down_4k","align_offset","align_offset","align_offset","align_offset_4k","align_offset_4k","align_offset_4k","align_up","align_up","align_up","align_up_4k","align_up_4k","align_up_4k","as_mut_ptr","as_ptr","as_usize","as_usize","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","cmp","default","default","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","is_aligned","is_aligned","is_aligned","is_aligned_4k","is_aligned_4k","is_aligned_4k","partial_cmp","partial_cmp","sub","sub","sub_assign","sub_assign","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"memory_addr"],[73,"core::convert"],[74,"core::cmp"],[75,"core::fmt"],[76,"core::option"],[77,"core::result"],[78,"core::any"]],"i":[0,0,0,1,3,1,3,0,1,3,0,1,3,0,1,3,0,1,3,0,1,3,0,1,3,3,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,1,1,3,3,3,1,1,1,3,3,3,1,3,0,1,3,0,1,3,1,3,1,3,1,3,1,3,1,3,1,3],"f":"```{{bd}b}{{fd}f}{{bd}h}{{fd}h}{{dd}d}{{bc}b{{j{d}}}}{{fc}f{{j{d}}}}{dd}{bb}{ff}5{{bc}d{{j{d}}}}{{fc}d{{j{d}}}}4{bd}{fd}987654{fl}021{ce{}{}}00076{{bb}n}{{ff}n}{{}b}{{}f}{{bb}A`}{{ff}A`}{{bAb}Ad}00{{fAb}Ad}00{cc{}}{db}01{df}0;;{{dd}A`}{{bc}A`{{j{d}}}}{{fc}A`{{j{d}}}}{dA`}{bA`}{fA`}{{bb}{{Af{n}}}}{{ff}{{Af{n}}}}{{bd}b}{{fd}f}{{bd}h}{{fd}h}{c{{Ah{e}}}{}{}}000{cAj{}}0","D":"Dl","p":[[5,"PhysAddr",0],[1,"usize"],[5,"VirtAddr",0],[1,"unit"],[10,"Into",73],[1,"u8"],[6,"Ordering",74],[1,"bool"],[5,"Formatter",75],[8,"Result",75],[6,"Option",76],[6,"Result",77],[5,"TypeId",78]],"r":[],"b":[[41,"impl-Debug-for-PhysAddr"],[42,"impl-UpperHex-for-PhysAddr"],[43,"impl-LowerHex-for-PhysAddr"],[44,"impl-LowerHex-for-VirtAddr"],[45,"impl-Debug-for-VirtAddr"],[46,"impl-UpperHex-for-VirtAddr"],[48,"impl-PhysAddr"],[49,"impl-From%3Cusize%3E-for-PhysAddr"],[51,"impl-VirtAddr"],[52,"impl-From%3Cusize%3E-for-VirtAddr"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACMABQAEAAMAHgARADIAAAA1AAAAPgALAA=="}],\
["page_table",{"t":"PPETPEPPPPTTGFGKKIPPPTCMNNNNNNNNMNNNNNNNNNNNNNNMNCNNNNNNNNNNNNNNNNNCIFNNNNNNNNNNNFIFINNNNNNNNNNNNNNNNNNNNIFNNNNNNN","n":["AlreadyMapped","Err","GenericPTE","LEVELS","MappedToHugePage","MappingFlags","NoMemory","NotAligned","NotMapped","Ok","PA_MAX_ADDR","PA_MAX_BITS","PageSize","PageTable64","PagingError","PagingIf","PagingMetaData","PagingResult","Size1G","Size2M","Size4K","VA_MAX_BITS","aarch64","alloc_frame","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","dealloc_frame","drop","eq","fmt","fmt","from","from","from","into","into","into","is_huge","map","map_region","paddr_is_valid","phys_to_virt","query","riscv","root_paddr","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_new","type_id","type_id","type_id","unmap","unmap_region","update","vaddr_is_valid","walk","x86_64","A64PageTable","A64PagingMetaData","borrow","borrow_mut","clone","clone_into","from","into","to_owned","try_from","try_into","type_id","vaddr_is_valid","Sv39MetaData","Sv39PageTable","Sv48MetaData","Sv48PageTable","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","from","from","into","into","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","X64PageTable","X64PagingMetaData","borrow","borrow_mut","from","into","try_from","try_into","type_id"],"q":[[0,"page_table"],[68,"page_table::aarch64"],[81,"page_table::riscv"],[105,"page_table::x86_64"],[114,"memory_addr"],[115,"core::option"],[116,"page_table::bits64"],[117,"page_table_entry"],[118,"core::fmt"],[119,"core::result"],[120,"core::any"],[121,"core::ops::function"],[122,"page_table::arch::aarch64"],[123,"page_table::arch::riscv"],[124,"page_table::arch"],[125,"page_table::arch::x86_64"]],"i":[10,15,0,6,10,0,10,10,10,15,6,6,0,0,0,0,0,0,3,3,3,6,0,8,5,10,3,5,10,3,3,3,8,5,3,10,3,5,10,3,5,10,3,3,5,5,6,8,5,0,5,3,5,10,3,5,10,3,5,5,10,3,5,5,5,6,5,0,0,0,21,21,21,21,21,21,21,21,21,21,21,0,0,0,0,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,0,0,24,24,24,24,24,24,24],"f":"```````````````````````{{}{{d{b}}}}{ce{}{}}00000{ff}{{ce}h{}{}}{bh}{{{j{ceg}}}hlnA`}{{ff}Ab}{{AdAf}Ah}{{fAf}Ah}{cc{}}00888{fAb}{{{j{ceg}}AjbfAl}AnlnA`}{{{j{ceg}}AjbB`AlAb}AnlnA`}{B`Ab}{bAj}{{{j{ceg}}Aj}{{An{{Bb{bAlf}}}}}lnA`}`{{{j{ceg}}}blnA`}?{c{{Bd{e}}}{}{}}00000{{}{{An{{j{ceg}}}}}lnA`}{cBf{}}00{{{j{ceg}}Aj}{{An{{Bb{bf}}}}}lnA`}{{{j{ceg}}AjB`}AnlnA`}{{{j{ceg}}Aj{d{b}}{d{Al}}}{{An{f}}}lnA`}9{{{j{ceg}}B`i}AnlnA`{{Bh{B`B`Aje}}}}```{ce{}{}}0{BjBj}{{ce}h{}{}}{cc{}}33::8>````3333{BlBl}{BnBn}33225555<<<<::``5525<<:","D":"Gj","p":[[5,"PhysAddr",114],[6,"Option",115],[6,"PageSize",0],[1,"unit"],[5,"PageTable64",0,116],[10,"PagingMetaData",0],[10,"GenericPTE",117],[10,"PagingIf",0],[1,"bool"],[6,"PagingError",0],[5,"Formatter",118],[8,"Result",118],[5,"VirtAddr",114],[5,"MappingFlags",117],[8,"PagingResult",0],[1,"usize"],[1,"tuple"],[6,"Result",119],[5,"TypeId",120],[10,"Fn",121],[5,"A64PagingMetaData",68,122],[5,"Sv39MetaData",81,123],[5,"Sv48MetaData",81,123],[5,"X64PagingMetaData",105]],"r":[[2,117],[5,117],[13,116],[22,124],[49,124],[67,124],[68,122],[69,122],[81,123],[82,123],[83,123],[84,123],[105,125],[106,125]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADUADAADAAAABgAAABkABwAiAAMANAAGADwAAgBHAAMATQAEAFYABwBiAAcAbAABAHAAAgA="}],\
["page_table_entry",{"t":"TTKFTTTTCNNNNNNNNNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNMMMNNMMNMNCNMMNNNNNNNNCFTTTTTTTFPTTGTTTTPPTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTFTFTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTTTTTTTTTTTTTTTTTTTFTTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["DEVICE","EXECUTE","GenericPTE","MappingFlags","READ","UNCACHED","USER","WRITE","aarch64","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","clear","clone","complement","contains","difference","empty","extend","flags","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","insert","intersection","intersects","into","into_iter","is_all","is_empty","is_huge","is_present","is_unused","iter","iter_names","new_page","new_table","not","paddr","remove","riscv","set","set_flags","set_paddr","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","x86_64","A64PTE","AF","AP_EL0","AP_NO_EL0_TABLE","AP_NO_WRITE_TABLE","AP_RO","ATTR_INDX","CONTIGUOUS","DescriptorAttr","Device","INNER","MAIR_VALUE","MemAttr","NG","NON_BLOCK","NS","NS_TABLE","Normal","NormalNonCacheable","PXN","PXN_TABLE","SHAREABLE","UXN","VALID","XN_TABLE","all","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","complement","complement","contains","contains","difference","difference","empty","empty","empty","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_mem_attr","from_name","from_name","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into_iter","is_all","is_all","is_empty","is_empty","is_huge","is_present","is_unused","iter","iter","iter_names","iter_names","mem_attr","new_page","new_table","not","paddr","remove","remove","set","set","set_flags","set_paddr","sub","sub_assign","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","union","A","D","G","PTEFlags","R","Rv64PTE","U","V","W","X","all","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clear","clone","complement","complement","contains","contains","difference","difference","empty","empty","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_name","from_name","insert","insert","intersection","intersection","intersects","intersects","into","into","into_iter","is_all","is_all","is_empty","is_empty","is_huge","is_present","is_unused","iter","iter","iter_names","iter_names","new_page","new_table","not","paddr","remove","remove","set","set","set_flags","set_paddr","sub","sub_assign","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","union","ACCESSED","BIT_10","BIT_11","BIT_52","BIT_53","BIT_54","BIT_55","BIT_56","BIT_57","BIT_58","BIT_59","BIT_60","BIT_61","BIT_62","BIT_9","DIRTY","GLOBAL","HUGE_PAGE","NO_CACHE","NO_EXECUTE","PRESENT","PTF","USER_ACCESSIBLE","WRITABLE","WRITE_THROUGH","X64PTE","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","cmp","complement","contains","difference","empty","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","hash","insert","intersection","intersects","into","into","into_iter","is_all","is_empty","is_huge","is_present","is_unused","iter","iter_names","new_page","new_table","not","paddr","partial_cmp","remove","set","set_flags","set_paddr","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union"],"q":[[0,"page_table_entry"],[73,"page_table_entry::aarch64"],[201,"page_table_entry::riscv"],[301,"page_table_entry::x86_64"],[400,"core::iter::traits::collect"],[401,"core::fmt"],[402,"page_table_entry::arch::aarch64"],[403,"page_table_entry::arch::riscv"],[404,"core::option"],[405,"bitflags::iter"],[406,"memory_addr"],[407,"core::result"],[408,"core::any"],[409,"page_table_entry::arch::x86_64"],[410,"core::cmp"],[411,"core::hash"],[412,"page_table_entry::arch"]],"i":[1,1,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,4,4,1,1,4,4,1,4,1,0,1,4,4,1,1,1,1,1,1,1,1,0,0,11,11,11,11,11,11,11,0,22,11,22,0,11,11,11,11,22,22,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,22,21,11,22,21,21,22,21,11,11,11,11,11,11,11,11,21,22,11,21,11,11,11,11,11,22,21,11,11,22,21,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,22,21,11,11,11,11,11,21,21,21,11,11,11,11,11,21,21,11,21,11,11,11,11,21,21,11,11,11,11,11,11,11,22,21,11,22,21,11,22,21,11,11,12,12,12,0,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,23,12,23,23,23,12,12,12,12,12,12,12,12,12,23,12,12,12,12,12,23,12,12,23,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,23,12,12,12,12,12,23,23,23,12,12,12,12,23,23,12,23,12,12,12,12,23,23,12,12,12,12,12,12,12,23,12,23,12,23,12,12,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,10,10,10,0,10,10,10,10,10,10,10,10,10,24,10,24,10,24,24,10,10,10,10,10,10,10,10,24,24,10,10,10,10,10,24,10,10,10,10,10,10,10,10,10,10,10,10,24,10,10,10,10,24,24,24,10,10,24,24,10,24,10,10,10,24,24,10,10,10,10,24,10,24,10,24,10,10],"f":"`````````{{}b}{{bb}b}{{bb}d}10{bf}021{ce{}{}}0{hd}{bb}0{{bb}j}67{{bc}d{{n{}{{l{b}}}}}}{hb}{{bA`}Ab}0000{Adb}{Afb}{Ahb}{cc{}}{f{{Aj{b}}}}{fb}00{cb{{n{}{{l{b}}}}}}{Al{{Aj{b}}}}{{bb}d}{{bb}b}={ce{}{}}{bc{}}{bj}0{hj}00{b{{An{b}}}}{b{{B`{b}}}}{{Bbbj}h}{Bbh}{bb}{hBb};`{{bbj}d}{{hbj}d}{{hBb}d}=>=>{c{{Bd{e}}}{}{}}0{cBf{}}?``````````````````````````{{}Af}0{{AfAf}Af}{{AfAf}d}10{AfBh}0021{ce{}{}}00000{Bjd}{BlBl}{BjBj}{AfAf}0{{AfAf}j}08899{{}Bj}{{BlBl}j}{{Afc}d{{n{}{{l{Af}}}}}}{Bjb}{{AfA`}Ab}0000{{BlA`}Ab}{{BjA`}Ab}{bAf}{cc{}}00{Bh{{Aj{Af}}}}0{BhAf}0000{cAf{{n{}{{l{Af}}}}}}{BlAf}{Al{{Aj{Af}}}}0{{AfAf}d}0{{AfAf}Af}0{{AfAf}j}0{ce{}{}}00{Afc{}}{Afj}000{Bjj}00{Af{{An{Af}}}}0{Af{{B`{Af}}}}0{Af{{Aj{Bl}}}}{{Bbbj}Bj}{BbBj}{AfAf}{BjBb}=={{AfAfj}d}0{{Bjbj}d}{{BjBb}d}?{{AfAf}d}{{AfAf}Af}011{c{{Bd{e}}}{}{}}00000{cBf{}}0022``````````{{}Ah}0{{AhAh}Ah}{{AhAh}d}10{Ahf}0021{ce{}{}}000{Bnd}{BnBn}{AhAh}0{{AhAh}j}07788{{Ahc}d{{n{}{{l{Ah}}}}}}{Bnb}{{AhA`}Ab}0000{{BnA`}Ab}{bAh}{cc{}}0{f{{Aj{Ah}}}}0{fAh}0000{cAh{{n{}{{l{Ah}}}}}}{Al{{Aj{Ah}}}}0{{AhAh}d}0{{AhAh}Ah}0<<{ce{}{}}0{Ahc{}}{Ahj}000{Bnj}00{Ah{{An{Ah}}}}0{Ah{{B`{Ah}}}}0{{Bbbj}Bn}{BbBn}{AhAh}{BnBb};;{{AhAhj}d}0{{Bnbj}d}{{BnBb}d}=>==>>{c{{Bd{e}}}{}{}}000{cBf{}}0??``````````````````````````{{}Ad}{{AdAd}Ad}{{AdAd}d}10{AdBh}021{ce{}{}}000{C`d}{C`C`}{AdAd}{{AdAd}Cb}1{{AdAd}j}890{{Adc}d{{n{}{{l{Ad}}}}}}{C`b}{{C`A`}Ab}{{AdA`}{{Bd{dCd}}}}0000{cc{}}0{bAd}{Bh{{Aj{Ad}}}}{BhAd}00{cAd{{n{}{{l{Ad}}}}}}{Al{{Aj{Ad}}}}{{Adc}dCf}{{AdAd}d}{{AdAd}Ad}={ce{}{}}0{Ad}{Adj}0{C`j}00{Ad{{An{Ad}}}}{Ad{{B`{Ad}}}}{{Bbbj}C`}{BbC`}{AdAd}{C`Bb}{{AdAd}{{Aj{Cb}}}}<{{AdAdj}d}{{C`bj}d}{{C`Bb}d}>?>?{c{{Bd{e}}}{}{}}000{cBf{}}0{{AdAd}Ad}","D":"BBl","p":[[5,"MappingFlags",0],[1,"unit"],[1,"usize"],[10,"GenericPTE",0],[1,"bool"],[17,"Item"],[10,"IntoIterator",400],[5,"Formatter",401],[8,"Result",401],[5,"PTF",301],[5,"DescriptorAttr",73,402],[5,"PTEFlags",201,403],[6,"Option",404],[1,"str"],[5,"Iter",405],[5,"IterNames",405],[5,"PhysAddr",406],[6,"Result",407],[5,"TypeId",408],[1,"u64"],[5,"A64PTE",73,402],[6,"MemAttr",73,402],[5,"Rv64PTE",201,403],[5,"X64PTE",301,409],[6,"Ordering",410],[5,"Error",401],[10,"Hasher",411]],"r":[[8,412],[60,412],[72,412],[73,402],[81,402],[85,402],[204,403],[206,403],[326,409]],"b":[[14,"impl-MappingFlags"],[15,"impl-Flags-for-MappingFlags"],[28,"impl-Debug-for-MappingFlags"],[29,"impl-Binary-for-MappingFlags"],[30,"impl-Octal-for-MappingFlags"],[31,"impl-UpperHex-for-MappingFlags"],[32,"impl-LowerHex-for-MappingFlags"],[33,"impl-From%3CPageTableFlags%3E-for-MappingFlags"],[34,"impl-From%3CDescriptorAttr%3E-for-MappingFlags"],[35,"impl-From%3CPTEFlags%3E-for-MappingFlags"],[38,"impl-Flags-for-MappingFlags"],[39,"impl-MappingFlags"],[98,"impl-DescriptorAttr"],[99,"impl-DescriptorAttr"],[104,"impl-DescriptorAttr"],[105,"impl-DescriptorAttr"],[106,"impl-Flags-for-DescriptorAttr"],[118,"impl-DescriptorAttr"],[119,"impl-DescriptorAttr"],[120,"impl-DescriptorAttr"],[121,"impl-DescriptorAttr"],[122,"impl-DescriptorAttr"],[123,"impl-DescriptorAttr"],[124,"impl-DescriptorAttr"],[125,"impl-DescriptorAttr"],[130,"impl-Binary-for-DescriptorAttr"],[131,"impl-Debug-for-DescriptorAttr"],[132,"impl-Octal-for-DescriptorAttr"],[133,"impl-LowerHex-for-DescriptorAttr"],[134,"impl-UpperHex-for-DescriptorAttr"],[141,"impl-DescriptorAttr"],[142,"impl-DescriptorAttr"],[143,"impl-DescriptorAttr"],[144,"impl-Flags-for-DescriptorAttr"],[145,"impl-DescriptorAttr"],[146,"impl-DescriptorAttr"],[147,"impl-DescriptorAttr"],[150,"impl-DescriptorAttr"],[151,"impl-DescriptorAttr"],[152,"impl-DescriptorAttr"],[153,"impl-DescriptorAttr"],[154,"impl-DescriptorAttr"],[155,"impl-DescriptorAttr"],[156,"impl-DescriptorAttr"],[157,"impl-DescriptorAttr"],[162,"impl-DescriptorAttr"],[163,"impl-DescriptorAttr"],[164,"impl-DescriptorAttr"],[165,"impl-DescriptorAttr"],[169,"impl-DescriptorAttr"],[170,"impl-DescriptorAttr"],[171,"impl-DescriptorAttr"],[172,"impl-DescriptorAttr"],[178,"impl-DescriptorAttr"],[179,"impl-DescriptorAttr"],[180,"impl-DescriptorAttr"],[181,"impl-DescriptorAttr"],[186,"impl-DescriptorAttr"],[187,"impl-DescriptorAttr"],[188,"impl-DescriptorAttr"],[189,"impl-DescriptorAttr"],[199,"impl-DescriptorAttr"],[200,"impl-DescriptorAttr"],[211,"impl-PTEFlags"],[212,"impl-PTEFlags"],[217,"impl-PTEFlags"],[218,"impl-PTEFlags"],[219,"impl-Flags-for-PTEFlags"],[228,"impl-PTEFlags"],[229,"impl-PTEFlags"],[230,"impl-PTEFlags"],[231,"impl-PTEFlags"],[232,"impl-PTEFlags"],[233,"impl-PTEFlags"],[234,"impl-PTEFlags"],[235,"impl-PTEFlags"],[238,"impl-Debug-for-PTEFlags"],[239,"impl-LowerHex-for-PTEFlags"],[240,"impl-UpperHex-for-PTEFlags"],[241,"impl-Octal-for-PTEFlags"],[242,"impl-Binary-for-PTEFlags"],[247,"impl-PTEFlags"],[248,"impl-PTEFlags"],[249,"impl-PTEFlags"],[250,"impl-Flags-for-PTEFlags"],[251,"impl-PTEFlags"],[252,"impl-PTEFlags"],[253,"impl-PTEFlags"],[255,"impl-PTEFlags"],[256,"impl-PTEFlags"],[257,"impl-PTEFlags"],[258,"impl-PTEFlags"],[259,"impl-PTEFlags"],[260,"impl-PTEFlags"],[261,"impl-PTEFlags"],[262,"impl-PTEFlags"],[266,"impl-PTEFlags"],[267,"impl-PTEFlags"],[268,"impl-PTEFlags"],[269,"impl-PTEFlags"],[273,"impl-PTEFlags"],[274,"impl-PTEFlags"],[275,"impl-PTEFlags"],[276,"impl-PTEFlags"],[281,"impl-PTEFlags"],[282,"impl-PTEFlags"],[283,"impl-PTEFlags"],[284,"impl-PTEFlags"],[289,"impl-PTEFlags"],[290,"impl-PTEFlags"],[291,"impl-PTEFlags"],[292,"impl-PTEFlags"],[299,"impl-PTEFlags"],[300,"impl-PTEFlags"],[332,"impl-Flags-for-PageTableFlags"],[333,"impl-PageTableFlags"],[352,"impl-LowerHex-for-PageTableFlags"],[353,"impl-UpperHex-for-PageTableFlags"],[354,"impl-Binary-for-PageTableFlags"],[355,"impl-Octal-for-PageTableFlags"],[356,"impl-Debug-for-PageTableFlags"],[361,"impl-Flags-for-PageTableFlags"],[362,"impl-PageTableFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAHoAKQAQAAAAEwABABYAAAAdAAcAJwAAADAAAABFAAIAawAAAG4ACACAAAAAggAIAJEAAACiAAAApwACAK8AAQCyAAAAtwABAL8ACADcAAAA3wAFAO4ABwD7AAAACgEAAA8BAgAWAQEAGQEAAB4BAQAmAQUATQEAAFEBBwBdAQAAXwEGAGgBAABqAQAAbwEAAHUBAAB4AQIAfQEBAIABAQCEAQEAigEFAA=="}],\
["percpu",{"t":"JFNNNNNXNHHNNHHNNHNNNNNN","n":["EXAMPLE_PERCPU_DATA","EXAMPLE_PERCPU_DATA_WRAPPER","borrow","borrow_mut","current_ptr","current_ref_mut_raw","current_ref_raw","def_percpu","from","get_local_thread_pointer","init","into","offset","percpu_area_base","percpu_area_size","read_current","read_current_raw","set_local_thread_pointer","try_from","try_into","type_id","with_current","write_current","write_current_raw"],"q":[[0,"percpu"],[24,"core::result"],[25,"core::any"],[26,"core::ops::function"],[27,"percpu_macros"],[28,"percpu::imp"]],"i":[0,0,1,1,1,1,1,0,1,0,0,1,1,0,0,1,1,0,1,1,1,1,1,1],"f":"``{ce{}{}}0{bd}00`{cc{}}{{}d}{df}43{dd}2441{c{{h{e}}}{}{}}0{cj{}}{{be}c{}{{n{d}{{l{c}}}}}}{{bd}f}0","D":"Bh","p":[[5,"EXAMPLE_PERCPU_DATA_WRAPPER",0],[1,"usize"],[1,"unit"],[6,"Result",24],[5,"TypeId",25],[17,"Output"],[10,"FnOnce",26]],"r":[[7,27],[9,28],[10,28],[13,28],[14,28],[17,28]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAQAEAAAAAMABAATABQAFQA="}],\
["percpu_macros",{"t":"X","n":["def_percpu"],"q":[[0,"percpu_macros"]],"i":[0],"f":"`","D":"d","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["ratio",{"t":"FNNNNNNNNNNNNNN","n":["Ratio","borrow","borrow_mut","eq","fmt","from","into","inverse","mul_round","mul_trunc","new","try_from","try_into","type_id","zero"],"q":[[0,"ratio"],[15,"core::fmt"],[16,"core::result"],[17,"core::any"]],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":"`{ce{}{}}0{{bb}d}{{bf}h}{cc{}}3{bb}{{bj}j}0{{ll}b}{c{{n{e}}}{}{}}0{cA`{}}{{}b}","D":"Ab","p":[[5,"Ratio",0],[1,"bool"],[5,"Formatter",15],[8,"Result",15],[1,"u64"],[1,"u32"],[6,"Result",16],[5,"TypeId",17]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAYAAgACAAMADAACAA=="}],\
["scheduler",{"t":"KFFFFFFRMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNMNNNMNNNMNNNNNNMNNNMNNNNNNNNNNNNNNNNNNNNNN","n":["BaseScheduler","CFSTask","CFScheduler","FifoScheduler","FifoTask","RRScheduler","RRTask","SchedItem","add_task","add_task","add_task","add_task","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","from","from","from","from","from","from","init","init","init","init","inner","inner","inner","into","into","into","into","into","into","new","new","new","new","new","new","pick_next_task","pick_next_task","pick_next_task","pick_next_task","put_prev_task","put_prev_task","put_prev_task","put_prev_task","remove_task","remove_task","remove_task","remove_task","scheduler_name","scheduler_name","scheduler_name","set_priority","set_priority","set_priority","set_priority","task_tick","task_tick","task_tick","task_tick","to_links","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"scheduler"],[94,"scheduler::cfs"],[95,"scheduler::fifo"],[96,"scheduler::round_robin"],[97,"core::option"],[98,"linked_list::unsafe_list"],[99,"core::result"],[100,"core::any"]],"i":[0,0,0,0,0,0,0,2,2,4,5,6,7,4,8,5,9,6,7,4,8,5,9,6,7,8,9,7,4,8,5,9,6,2,4,5,6,7,8,9,7,4,8,5,9,6,7,4,8,5,9,6,2,4,5,6,2,4,5,6,2,4,5,6,4,5,6,2,4,5,6,2,4,5,6,8,7,4,8,5,9,6,7,4,8,5,9,6,7,4,8,5,9,6],"f":"````````{{{d{}{{b{c}}}}c}f{}}{{{h{c}}e}f{}{}}{{{j{c}}e}f{}{}}{{{l{c}}e}f{}{}}{ce{}{}}00000000000{{{n{c}}}e{}{}}{{{A`{c}}}e{}{}}{{{Ab{c}}}e{}{}}{cc{}}00000{{{d{}{{b{c}}}}}f{}}{{{h{c}}}f{}}{{{j{c}}}f{}}{{{l{c}}}f{}}{{{n{c}}}c{}}{{{A`{c}}}c{}}{{{Ab{c}}}c{}};;;;;;{c{{n{c}}}{}}{{}{{h{c}}}{}}{c{{A`{c}}}{}}{{}{{j{c}}}{}}{c{{Ab{c}}}{}}{{}{{l{c}}}{}}{{{d{}{{b{c}}}}}{{Ad{c}}}{}}{{{h{c}}}{{Ad{e}}}{}{}}{{{j{c}}}{{Ad{e}}}{}{}}{{{l{c}}}{{Ad{e}}}{}{}}{{{d{}{{b{c}}}}cAf}f{}}{{{h{c}}eAf}f{}{}}{{{j{c}}eAf}f{}{}}{{{l{c}}eAf}f{}{}}{{{d{}{{b{c}}}}c}{{Ad{c}}}{}}{{{h{c}}e}{{Ad{e}}}{}{}}{{{j{c}}e}{{Ad{e}}}{}{}}{{{l{c}}e}{{Ad{e}}}{}{}}{{}Ah}00{{{d{}{{b{c}}}}cAj}Af{}}{{{h{c}}eAj}Af{}{}}{{{j{c}}eAj}Af{}{}}{{{l{c}}eAj}Af{}{}}{{{d{}{{b{c}}}}c}Af{}}{{{h{c}}e}Af{}{}}{{{j{c}}e}Af{}{}}{{{l{c}}e}Af{}{}}{{{A`{c}}}{{Al{{A`{c}}}}}{}}{c{{An{e}}}{}{}}00000000000{cB`{}}00000","D":"E`","p":[[17,"SchedItem"],[10,"BaseScheduler",0],[1,"unit"],[5,"CFScheduler",0,94],[5,"FifoScheduler",0,95],[5,"RRScheduler",0,96],[5,"CFSTask",0,94],[5,"FifoTask",0,95],[5,"RRTask",0,96],[6,"Option",97],[1,"bool"],[1,"str"],[1,"isize"],[5,"Links",98],[6,"Result",99],[5,"TypeId",100]],"r":[[1,94],[2,94],[3,95],[4,95],[5,96],[6,96]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADYABwAKABEAIwACADYAAgA6AAIAPgACAEUAAgBJABUA"}],\
["slab_allocator",{"t":"FNNNNNNNNNNNNNNN","n":["Heap","add_memory","allocate","available_bytes","borrow","borrow_mut","deallocate","from","into","new","total_bytes","try_from","try_into","type_id","usable_size","used_bytes"],"q":[[0,"slab_allocator"],[16,"core::alloc::layout"],[17,"core::alloc"],[18,"core::result"],[19,"core::any"]],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":"`{{bdd}f}{{bh}{{l{dj}}}}{bd}{ce{}{}}0{{bdh}f}{cc{}}2{{dd}b}4{c{{l{e}}}{}{}}0{cn{}}{{bh}{{A`{dd}}}}7","D":"Ah","p":[[5,"Heap",0],[1,"usize"],[1,"unit"],[5,"Layout",16],[5,"AllocError",17],[6,"Result",18],[5,"TypeId",19],[1,"tuple"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAQAEAAAAAUABgAMAA0ADgA="}],\
["spinlock",{"t":"FFIIIIIINNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["BaseSpinLock","BaseSpinLockGuard","SpinNoIrq","SpinNoIrqGuard","SpinNoPreempt","SpinNoPreemptGuard","SpinRaw","SpinRawGuard","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","force_unlock","from","from","get_mut","into","into","into_inner","is_locked","lock","new","try_from","try_from","try_into","try_into","try_lock","type_id","type_id"],"q":[[0,"spinlock"],[35,"spinlock::base"],[36,"kernel_guard"],[37,"core::marker"],[38,"core::default"],[39,"core::fmt"],[40,"core::result"],[41,"core::option"],[42,"core::any"]],"i":[0,0,0,0,0,0,0,0,1,5,1,5,1,5,5,5,1,5,1,1,5,1,1,5,1,1,1,1,1,5,1,5,1,1,5],"f":"````````{ce{}{}}000{{}{{b{ce}}}d{fh}}{{{j{ce}}}edf}0{{{j{ce}}}ldf}{{{b{ce}}n}A`d{fAb}}{{{j{ce}}n}A`d{fAb}}{{{b{ce}}}ldf}{cc{}}0{{{b{ce}}}edf}88{{{b{ce}}}ed{}}{{{b{ce}}}Addf}{{{b{ce}}}{{j{ce}}}df}{c{{b{ec}}}{}d}{c{{Af{e}}}{}{}}000{{{b{ce}}}{{Ah{{j{ce}}}}}df}{cAj{}}0","D":"Bj","p":[[5,"BaseSpinLock",0,35],[10,"BaseGuard",36],[10,"Sized",37],[10,"Default",38],[5,"BaseSpinLockGuard",0,35],[1,"unit"],[5,"Formatter",39],[8,"Result",39],[10,"Debug",39],[1,"bool"],[6,"Result",40],[6,"Option",41],[5,"TypeId",42]],"r":[[0,35],[1,35]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA4ABAAJAAYAEQABAB0AAwAiAAEA"}],\
["timer_list",{"t":"IKFFNNNNMNNNNNNNNNNNNNNNNNNN","n":["TimeValue","TimerEvent","TimerEventFn","TimerList","borrow","borrow","borrow_mut","borrow_mut","callback","callback","cancel","default","expire_one","from","from","into","into","is_empty","new","new","next_deadline","set","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"timer_list"],[28,"core::ops::function"],[29,"core::option"],[30,"core::result"],[31,"core::any"]],"i":[0,0,0,0,5,4,5,4,1,4,5,5,5,5,4,5,4,5,5,4,5,5,5,4,5,4,5,4],"f":"````{ce{}{}}000{{bd}f}{{hd}f}{{{j{c}}e}fb{{A`{c}{{l{n}}}}}}{{}{{j{c}}}b}{{{j{c}}d}{{Ad{{Ab{dc}}}}}b}{cc{}}066{{{j{c}}}nb}3{ch{{Af{d}}}}{{{j{c}}}{{Ad{d}}}b}{{{j{c}}dc}fb}{c{{Ah{e}}}{}{}}000{cAj{}}0","D":"Bb","p":[[10,"TimerEvent",0],[8,"TimeValue",0],[1,"unit"],[5,"TimerEventFn",0],[5,"TimerList",0],[17,"Output"],[1,"bool"],[10,"Fn",28],[1,"tuple"],[6,"Option",29],[10,"FnOnce",28],[6,"Result",30],[5,"TypeId",31]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAsABAAFAAMACgAAAAwAAAAXAAUA"}],\
["tuple_for_each",{"t":"Y","n":["TupleForEach"],"q":[[0,"tuple_for_each"]],"i":[0],"f":"`","D":"d","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
