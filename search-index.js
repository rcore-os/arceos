var searchIndex = new Map(JSON.parse('[\
["arceos_api",{"t":"PPGIPPPPPPPPPPPPPPPPPPPPPPNNNNNNCCNNNNCNCCCCCCCCNNNNNNSSSSSSSSSSSSSSSSSSSSSFHHNNNNOONNONNNNNOIFFIFIIFGPPPPPPPKPPPNHHHHHHHHHHHHHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNONNNNOFHHHHNNONNONNNNNNNEEEEEEEEEEEEEFFHHHHHHHHHHHHHHHHHHHHHHHHHHNNNNNNNNNNNNNNHHHHFFHHHHHHHHHNNNNNNNNNNNNNNNNIHH","n":["AddrInUse","AlreadyExists","AxError","AxResult","BadAddress","BadState","ConnectionRefused","ConnectionReset","DirectoryNotEmpty","Err","InvalidData","InvalidInput","Io","IsADirectory","NoMemory","NotADirectory","NotConnected","NotFound","Ok","PermissionDenied","ResourceBusy","StorageFull","UnexpectedEof","Unsupported","WouldBlock","WriteZero","as_str","borrow","borrow_mut","clone","clone_into","code","config","display","eq","fmt","fmt","from","fs","into","io","mem","modules","net","stdio","sys","task","time","to_owned","to_string","try_from","try_from","try_into","type_id","ARCH","FAMILY","KERNEL_ASPACE_BASE","KERNEL_ASPACE_SIZE","KERNEL_BASE_PADDR","KERNEL_BASE_VADDR","MMIO_REGIONS","PCI_BUS_END","PCI_ECAM_BASE","PCI_RANGES","PHYS_BUS_OFFSET","PHYS_MEMORY_BASE","PHYS_MEMORY_END","PHYS_MEMORY_SIZE","PHYS_VIRT_OFFSET","PLATFORM","SMP","TASK_STACK_SIZE","TICKS_PER_SEC","TIMER_FREQUENCY","VIRTIO_MMIO_REGIONS","AxDisplayInfo","ax_framebuffer_flush","ax_framebuffer_info","borrow","borrow_mut","clone","clone_into","fb_base_vaddr","fb_size","fmt","from","height","into","to_owned","try_from","try_into","type_id","width","AxDirEntry","AxDirHandle","AxDisk","AxFileAttr","AxFileHandle","AxFilePerm","AxFileType","AxOpenOptions","AxSeekFrom","BlockDevice","CharDevice","Current","Dir","End","Fifo","File","MyFileSystemIf","Socket","Start","SymLink","append","ax_create_dir","ax_current_dir","ax_file_attr","ax_flush_file","ax_open_dir","ax_open_file","ax_read_dir","ax_read_file","ax_read_file_at","ax_remove_dir","ax_remove_file","ax_rename","ax_seek_file","ax_set_current_dir","ax_truncate_file","ax_write_file","ax_write_file_at","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create","create_new","eq","fmt","fmt","from","from","from","from","from","into","into","into","into","into","new","new","new_myfs","position","read","read_one","set_position","size","to_owned","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write","write_one","AxPollState","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","readable","to_owned","try_from","try_into","type_id","writable","DMAInfo","ax_alloc","ax_alloc_coherent","ax_dealloc","ax_dealloc_coherent","borrow","borrow_mut","bus_addr","clone","clone_into","cpu_addr","fmt","from","into","to_owned","try_from","try_into","type_id","axalloc","axconfig","axdisplay","axdma","axdriver","axfs","axhal","axlog","axmm","axnet","axruntime","axsync","axtask","AxTcpSocketHandle","AxUdpSocketHandle","ax_dns_query","ax_poll_interfaces","ax_tcp_accept","ax_tcp_bind","ax_tcp_connect","ax_tcp_listen","ax_tcp_peer_addr","ax_tcp_poll","ax_tcp_recv","ax_tcp_send","ax_tcp_set_nonblocking","ax_tcp_shutdown","ax_tcp_socket","ax_tcp_socket_addr","ax_udp_bind","ax_udp_connect","ax_udp_peek_from","ax_udp_peer_addr","ax_udp_poll","ax_udp_recv","ax_udp_recv_from","ax_udp_send","ax_udp_send_to","ax_udp_set_nonblocking","ax_udp_socket","ax_udp_socket_addr","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","ax_console_read_byte","ax_console_write_bytes","ax_console_write_fmt","ax_terminate","AxTaskHandle","AxWaitQueueHandle","ax_current_task_id","ax_exit","ax_set_current_priority","ax_sleep_until","ax_spawn","ax_wait_for_exit","ax_wait_queue_wait","ax_wait_queue_wake","ax_yield_now","borrow","borrow","borrow_mut","borrow_mut","from","from","id","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","AxTimeValue","ax_monotonic_time","ax_wall_time"],"q":[[0,"arceos_api"],[54,"arceos_api::config"],[75,"arceos_api::display"],[93,"arceos_api::fs"],[188,"arceos_api::io"],[203,"arceos_api::mem"],[221,"arceos_api::modules"],[234,"arceos_api::net"],[276,"arceos_api::stdio"],[279,"arceos_api::sys"],[280,"arceos_api::task"],[307,"arceos_api::time"],[310,"axerrno"],[311,"core::fmt"],[312,"core::result"],[313,"alloc::string"],[314,"core::any"],[315,"arceos_api::imp::fs"],[316,"axfs_vfs"],[317,"alloc::sync"],[318,"axdriver_base"],[319,"core::alloc::layout"],[320,"core::ptr::non_null"],[321,"core::option"],[322,"axdma"],[323,"core::net::ip_addr"],[324,"alloc::vec"],[325,"arceos_api::imp::net"],[326,"core::net::socket_addr"],[327,"arceos_api::imp::task"],[328,"core::ops::function"],[329,"core::marker"],[330,"core::time"],[331,"axconfig::config"],[332,"axconfig"],[333,"axfs::fs::myfs"]],"i":[1,1,0,0,1,1,1,1,1,13,1,1,1,1,1,1,1,1,13,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,51,51,22,51,22,51,51,0,51,22,51,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,22,14,16,12,23,22,14,16,12,22,12,22,12,12,12,22,22,12,23,22,14,16,12,23,22,14,16,12,23,12,52,23,12,23,23,23,22,12,12,23,22,14,16,12,23,22,14,16,12,23,22,14,16,12,12,23,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,37,34,37,34,37,34,37,34,37,34,37,34,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,46,43,46,43,46,43,43,46,46,43,46,43,46,43,46,0,0,0],"f":"``````````````````````````{bd}{ce{}{}}0{bb}{{ce}f{}{}}{bh}``{{bb}j}{{bl}{{A`{fn}}}}0{cc{}}`6````````6{cAb{}}{c{{A`{e}}}{}{}}{h{{A`{b}}}}1{cAd{}}``````````````````````{{}f}{{}Af}<<{AfAf};``{{Afl}{{A`{fn}}}}8`>>664`````````````````````{{Ahj}f}{dAj}{{}{{Aj{Ab}}}}{Al{{Aj{An}}}}{AlAj}{{dAh}{{Aj{B`}}}}{{dAh}{{Aj{Al}}}}{{B`{Bd{Bb}}}{{Aj{Bf}}}}{{Al{Bd{Bh}}}{{Aj{Bf}}}}{{AlBj{Bd{Bh}}}{{Aj{Bf}}}}88{{dd}Aj}{{AlBl}{{Aj{Bj}}}}:{{AlBj}Aj}43{ce{}{}}000000000{BlBl}{AhAh}{{ce}f{}{}}0{{Ahj}f}0{{BlBl}j}{{Bll}{{A`{fn}}}}{{Ahl}{{A`{fn}}}}{cc{}}000088888{{}Bn}{{}Ah}{Bn{{Cb{C`}}}}{BnBj}8{{Bn{Bd{Bh}}}{{A`{BfCd}}}}{{BnBj}f}2>>:{c{{A`{e}}}{}{}}000000000{cAd{}}0000<3`{ce{}{}}0{CfCf}?{{}Cf}{{Cfl}{{A`{fn}}}}<3`3554``{Ch{{Cl{{Cj{Bh}}}}}}{Ch{{Cl{Cn}}}}{{{Cj{Bh}}Ch}f}{{CnCh}f}77`{CnCn}{{ce}f{}{}}`{{Cnl}{{A`{fn}}}}{cc{}};;==<```````````````{d{{Aj{{Db{D`}}}}}}{{}Aj}{Dd{{Aj{{Dh{DdDf}}}}}}{{DdDf}Aj}0{{DdBf}Aj}{Dd{{Aj{Df}}}}{Dd{{Aj{Cf}}}}{{Dd{Bd{Bh}}}{{Aj{Bf}}}}0{{Ddj}Aj}{DdAj}{{}Dd}5{{DjDf}Aj}0{{Dj{Bd{Bh}}}{{Aj{{Dh{BfDf}}}}}}{Dj{{Aj{Df}}}}{Dj{{Aj{Cf}}}}{{Dj{Bd{Bh}}}{{Aj{Bf}}}}30{{Dj{Bd{Bh}}Df}{{Aj{Bf}}}}{{Djj}Aj}{{}Dj}5{ce{}{}}000{cc{}}011{c{{A`{e}}}{}{}}000{cAd{}}0{{}{{Cl{Bh}}}}{{{Bd{Bh}}}{{Aj{Bf}}}}{DlDn}{{}E`}``{{}Bj}{hE`}{EbAj}{Edf}{{cAbBf}Ef{EhEj}}{Ef{{Cl{h}}}}{{Elc{Cl{En}}}j{{Fb{}{{F`{j}}}}}}{{ElFd}f}{{}f}{ce{}{}}000{cc{}}0{EfBj}22{{}El}{c{{A`{e}}}{}{}}000{cAd{}}0`{{}Ed}0","D":"AIf","p":[[6,"AxError",0,310],[1,"str"],[1,"unit"],[1,"i32"],[1,"bool"],[5,"Formatter",311],[5,"Error",311],[6,"Result",312],[5,"String",313],[5,"TypeId",314],[5,"AxDisplayInfo",75],[5,"AxOpenOptions",93],[8,"AxResult",0,310],[5,"AxFileHandle",93,315],[8,"AxFileAttr",93],[5,"AxDirHandle",93,315],[8,"AxDirEntry",93],[1,"slice"],[1,"usize"],[1,"u8"],[1,"u64"],[6,"AxSeekFrom",93],[5,"AxDisk",93],[10,"VfsOps",316],[5,"Arc",317],[6,"DevError",318],[5,"AxPollState",188],[5,"Layout",319],[5,"NonNull",320],[6,"Option",321],[5,"DMAInfo",203,322],[6,"IpAddr",323],[5,"Vec",324],[5,"AxTcpSocketHandle",234,325],[6,"SocketAddr",326],[1,"tuple"],[5,"AxUdpSocketHandle",234,325],[5,"Arguments",311],[8,"Result",311],[1,"never"],[1,"isize"],[8,"AxTimeValue",307],[5,"AxTaskHandle",280,327],[10,"FnOnce",328],[10,"Send",329],[5,"AxWaitQueueHandle",280,327],[5,"Duration",330],[17,"Output"],[10,"Fn",328],[1,"u32"],[8,"AxFileType",93],[10,"MyFileSystemIf",93]],"r":[[2,310],[3,310],[54,331],[55,331],[56,331],[57,331],[58,331],[59,331],[60,331],[61,331],[62,331],[63,331],[64,331],[65,331],[66,332],[67,331],[68,331],[69,331],[70,331],[71,331],[72,331],[73,331],[74,331],[94,315],[97,315],[109,333],[203,322],[234,325],[235,325],[280,327],[281,327]],"b":[[35,"impl-Debug-for-AxError"],[36,"impl-Display-for-AxError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGsAFAAcAAMAIwACADEABQBPAAMAVQAAAFkAAwCEAA0AlAACAKkAAQCsAA4AvgAFAMcAAwDRAAEA1AABANcAAADaABAABwEDAA8BBQAkAQMALgEFAA=="}],\
["arceos_posix_api",{"t":"CCHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSOOOOOOOOOOOOFOOOOOOOOOFUIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNIUIFOOOFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIFUFIIINNNNNNNNNNNNNNNNNNNNNNOOFOIIIFUFFIOOOOOIFOOOOIOOOOOOOOOOOIOFFFFIOIOOOOOOOOOOOOOFIFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNOOOOI","n":["config","ctypes","sys_accept","sys_bind","sys_clock_gettime","sys_close","sys_connect","sys_dup","sys_dup2","sys_epoll_create","sys_epoll_ctl","sys_epoll_wait","sys_exit","sys_fcntl","sys_freeaddrinfo","sys_fstat","sys_getaddrinfo","sys_getcwd","sys_getpeername","sys_getpid","sys_getrlimit","sys_getsockname","sys_listen","sys_lseek","sys_lstat","sys_nanosleep","sys_open","sys_pipe","sys_pthread_create","sys_pthread_exit","sys_pthread_join","sys_pthread_mutex_init","sys_pthread_mutex_lock","sys_pthread_mutex_unlock","sys_pthread_self","sys_read","sys_recv","sys_recvfrom","sys_rename","sys_sched_yield","sys_select","sys_send","sys_sendto","sys_setrlimit","sys_shutdown","sys_socket","sys_stat","sys_sysconf","sys_write","sys_writev","ARCH","FAMILY","KERNEL_ASPACE_BASE","KERNEL_ASPACE_SIZE","KERNEL_BASE_PADDR","KERNEL_BASE_VADDR","MMIO_REGIONS","PCI_BUS_END","PCI_ECAM_BASE","PCI_RANGES","PHYS_BUS_OFFSET","PHYS_MEMORY_BASE","PHYS_MEMORY_END","PHYS_MEMORY_SIZE","PHYS_VIRT_OFFSET","PLATFORM","SMP","TASK_STACK_SIZE","TICKS_PER_SEC","TIMER_FREQUENCY","VIRTIO_MMIO_REGIONS","AF_ALG","AF_APPLETALK","AF_ASH","AF_ATMPVC","AF_ATMSVC","AF_AX25","AF_BLUETOOTH","AF_BRIDGE","AF_CAIF","AF_CAN","AF_DECnet","AF_ECONET","AF_FILE","AF_IB","AF_IEEE802154","AF_INET","AF_INET6","AF_IPX","AF_IRDA","AF_ISDN","AF_IUCV","AF_KCM","AF_KEY","AF_LLC","AF_LOCAL","AF_MAX","AF_MPLS","AF_NETBEUI","AF_NETLINK","AF_NETROM","AF_NFC","AF_PACKET","AF_PHONET","AF_PPPOX","AF_QIPCRTR","AF_RDS","AF_ROSE","AF_ROUTE","AF_RXRPC","AF_SECURITY","AF_SMC","AF_SNA","AF_TIPC","AF_UNIX","AF_UNSPEC","AF_VSOCK","AF_WANPIPE","AF_X25","AF_XDP","CLOCK_MONOTONIC","CLOCK_REALTIME","EAI_AGAIN","EAI_BADFLAGS","EAI_FAIL","EAI_FAMILY","EAI_MEMORY","EAI_NONAME","EAI_OVERFLOW","EAI_SERVICE","EAI_SOCKTYPE","EAI_SYSTEM","EPOLLERR","EPOLLET","EPOLLEXCLUSIVE","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLNVAL","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWAKEUP","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EPOLL_CTL_ADD","EPOLL_CTL_DEL","EPOLL_CTL_MOD","EPOLL_NONBLOCK","FD_CLOEXEC","FD_SETSIZE","F_DUPFD","F_DUPFD_CLOEXEC","F_GETFD","F_GETFL","F_GETLK","F_GETOWN","F_GETSIG","F_LOCK","F_OK","F_RDLCK","F_SETFD","F_SETFL","F_SETLK","F_SETLKW","F_SETOWN","F_SETSIG","F_TEST","F_TLOCK","F_ULOCK","F_UNLCK","F_WRLCK","IPPROTO_AH","IPPROTO_BEETPH","IPPROTO_COMP","IPPROTO_DCCP","IPPROTO_DSTOPTS","IPPROTO_EGP","IPPROTO_ENCAP","IPPROTO_ESP","IPPROTO_ETHERNET","IPPROTO_FRAGMENT","IPPROTO_GRE","IPPROTO_HOPOPTS","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_IDP","IPPROTO_IGMP","IPPROTO_IP","IPPROTO_IPIP","IPPROTO_IPV6","IPPROTO_MAX","IPPROTO_MH","IPPROTO_MPLS","IPPROTO_MPTCP","IPPROTO_MTP","IPPROTO_NONE","IPPROTO_PIM","IPPROTO_PUP","IPPROTO_RAW","IPPROTO_ROUTING","IPPROTO_RSVP","IPPROTO_SCTP","IPPROTO_TCP","IPPROTO_TP","IPPROTO_UDP","IPPROTO_UDPLITE","MAXADDRS","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_EXEC","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_RSYNC","O_SEARCH","O_SYNC","O_TMPFILE","O_TRUNC","O_TTY_INIT","O_WRONLY","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_LOCKS","RLIMIT_MEMLOCK","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_NLIMITS","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_SIGPENDING","RLIMIT_STACK","SOCK_CLOEXEC","SOCK_DCCP","SOCK_DGRAM","SOCK_NONBLOCK","SOCK_PACKET","SOCK_RAW","SOCK_RDM","SOCK_SEQPACKET","SOCK_STREAM","_SC_2_CHAR_TERM","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_LOCALEDEF","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_CHECKPOINT","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_2_SW_DEV","_SC_2_UPE","_SC_2_VERSION","_SC_ADVISORY_INFO","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_ARG_MAX","_SC_ASYNCHRONOUS_IO","_SC_ATEXIT_MAX","_SC_AVPHYS_PAGES","_SC_BARRIERS","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_CLOCK_SELECTION","_SC_COLL_WEIGHTS_MAX","_SC_CPUTIME","_SC_DELAYTIMER_MAX","_SC_EXPR_NEST_MAX","_SC_FSYNC","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_HOST_NAME_MAX","_SC_IOV_MAX","_SC_IPV6","_SC_JOB_CONTROL","_SC_LINE_MAX","_SC_LOGIN_NAME_MAX","_SC_MAPPED_FILES","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_MONOTONIC_CLOCK","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_NGROUPS_MAX","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_NZERO","_SC_OPEN_MAX","_SC_PAGESIZE","_SC_PAGE_SIZE","_SC_PASS_MAX","_SC_PHYS_PAGES","_SC_PRIORITIZED_IO","_SC_PRIORITY_SCHEDULING","_SC_RAW_SOCKETS","_SC_READER_WRITER_LOCKS","_SC_REALTIME_SIGNALS","_SC_REGEXP","_SC_RE_DUP_MAX","_SC_RTSIG_MAX","_SC_SAVED_IDS","_SC_SEMAPHORES","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SHARED_MEMORY_OBJECTS","_SC_SHELL","_SC_SIGQUEUE_MAX","_SC_SPAWN","_SC_SPIN_LOCKS","_SC_SPORADIC_SERVER","_SC_SS_REPL_MAX","_SC_STREAMS","_SC_STREAM_MAX","_SC_SYMLOOP_MAX","_SC_SYNCHRONIZED_IO","_SC_THREADS","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_CPUTIME","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_THREAD_ROBUST_PRIO_INHERIT","_SC_THREAD_ROBUST_PRIO_PROTECT","_SC_THREAD_SAFE_FUNCTIONS","_SC_THREAD_SPORADIC_SERVER","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_TIMEOUTS","_SC_TIMERS","_SC_TIMER_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_TTY_NAME_MAX","_SC_TYPED_MEMORY_OBJECTS","_SC_TZNAME_MAX","_SC_UIO_MAXIOV","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_V7_ILP32_OFF32","_SC_V7_ILP32_OFFBIG","_SC_V7_LP64_OFF64","_SC_V7_LPBIG_OFFBIG","_SC_VERSION","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_XOPEN_SHM","_SC_XOPEN_STREAMS","_SC_XOPEN_UNIX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_SC_XOPEN_XPG2","_SC_XOPEN_XPG3","_SC_XOPEN_XPG4","__attr","__i","__in6_union","__l","__s","__s6_addr","__s6_addr16","__s6_addr32","__ss_align","__ss_padding","__u","__vi","addrinfo","ai","ai_addr","ai_addrlen","ai_canonname","ai_family","ai_flags","ai_next","ai_protocol","ai_socktype","aibuf","aibuf_sa","blkcnt_t","blksize_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","dev_t","epoll_data","epoll_data_t","epoll_event","events","fd","fd","fd_set","fds_bits","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gid_t","in6_addr","in6_addr__bindgen_ty_1","in_addr","in_addr_t","in_port_t","ino_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","iov_base","iov_len","iovec","lock","mode_t","nlink_t","off_t","pthread_attr_t","pthread_attr_t__bindgen_ty_1","pthread_mutex_t","pthread_mutexattr_t","pthread_t","ptr","ptr","ref_","rlim_cur","rlim_max","rlim_t","rlimit","s_addr","sa","sa_data","sa_family","sa_family_t","sin","sin6","sin6_addr","sin6_family","sin6_flowinfo","sin6_port","sin6_scope_id","sin_addr","sin_family","sin_port","sin_zero","size_t","slot","sockaddr","sockaddr_in","sockaddr_in6","sockaddr_storage","socklen_t","ss_family","ssize_t","st_atime","st_blksize","st_blocks","st_ctime","st_dev","st_gid","st_ino","st_mode","st_mtime","st_nlink","st_rdev","st_size","st_uid","stat","time_t","timespec","timeval","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tv_nsec","tv_sec","tv_sec","tv_usec","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u32_","u32_","u64_","u64_","uid_t"],"q":[[0,"arceos_posix_api"],[50,"arceos_posix_api::config"],[71,"arceos_posix_api::ctypes"],[777,"core::ffi"],[778,"core::fmt"],[779,"core::net::socket_addr"],[780,"core::time"],[781,"core::result"],[782,"core::any"],[783,"arceos_posix_api::imp::net"],[784,"arceos_posix_api::imp::time"],[785,"arceos_posix_api::imp::fd_ops"],[786,"arceos_posix_api::imp::io_mpx::epoll"],[787,"arceos_posix_api::imp::task"],[788,"arceos_posix_api::imp::fs"],[789,"arceos_posix_api::imp::resources"],[790,"arceos_posix_api::imp::pipe"],[791,"arceos_posix_api::imp::pthread"],[792,"arceos_posix_api::imp::pthread::mutex"],[793,"arceos_posix_api::imp::io"],[794,"arceos_posix_api::imp::io_mpx::select"],[795,"arceos_posix_api::imp::sys"],[796,"axconfig::config"],[797,"axconfig"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,38,33,23,38,34,34,34,30,30,19,38,0,36,9,9,9,9,9,9,9,9,0,0,0,0,2,30,31,32,33,34,35,9,36,37,27,5,23,24,19,38,39,6,13,26,11,29,2,30,31,32,33,34,35,9,36,37,27,5,23,24,19,38,39,6,13,26,11,29,0,2,30,31,32,33,34,35,9,36,37,27,5,23,24,19,38,39,6,13,26,11,29,2,30,31,32,33,34,35,9,36,37,27,5,23,24,19,38,39,6,13,26,11,29,6,2,30,31,32,33,34,35,9,36,37,27,5,23,24,19,38,39,6,13,26,11,29,0,0,0,0,6,46,39,0,26,2,30,31,32,9,27,5,23,24,13,26,11,29,2,30,31,32,32,33,34,35,9,36,37,27,27,5,5,23,24,19,38,39,6,13,26,11,29,0,0,0,0,0,0,0,2,30,31,32,33,34,35,9,36,37,27,5,23,24,19,38,39,6,13,26,11,29,29,29,0,36,0,0,0,0,0,0,0,0,46,39,36,13,13,0,0,31,36,2,2,0,37,37,35,35,35,35,35,32,32,32,32,0,36,0,0,0,0,0,30,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,2,30,31,32,33,34,35,9,36,37,27,5,23,24,19,38,39,6,13,26,11,29,2,30,31,32,33,34,35,9,36,37,27,5,23,24,19,38,39,6,13,26,11,29,2,30,31,32,33,34,35,9,36,37,27,5,23,24,19,38,39,6,13,26,11,29,5,27,5,27,2,30,31,32,33,34,35,9,36,37,27,5,23,24,19,38,39,6,13,26,11,29,46,39,46,39,0],"f":"``{{bdf}b}0{{hj}b}{bb}20{{bb}b}1{{bbbl}b}{{blbb}b}{bn}{{bbA`}b}{AbAd}{{bAf}b}{{AhAhAbAb}b}{{AhA`}Ah};{{}b}{{bAj}b}=:{{bAlb}Al}{{AhAf}An}{{jj}b}{{AhbB`}b}{{{Bb{b}}}b}{{BdBf{Bl{Bh}{{Bj{Bh}}}}Bh}b}{Bhn}{{BdBh}b}{{BnC`}b}{Bnb}0{{}Bd}{{bBhA`}An}{{bBhCbb}An}{{bBhCbbdf}An}{{AhAh}b}{{}b}{{bCdCdCdCf}b}43{{bAj}b}{{bb}b}{{bbb}b}{{AhAf}b}{bCh}:{{bCjb}An}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{ce{}{}}0000000000000000000000000000000000000000000`{dd}{ClCl}{CnCn}{D`D`}{DbDb}{DdDd}{DfDf}{AbAb}{DhDh}{DjDj}{CfCf}{jj}{BnBn}{C`C`}{BfBf}{DlDl}{DnDn}{ll}{AjAj}{CdCd}{AfAf}{CjCj}{{ce}Ad{}{}}000000000000000000000`{{}d}{{}Cl}{{}Cn}{{}D`}{{}Db}{{}Dd}{{}Df}{{}Ab}{{}Dh}{{}Dj}{{}Cf}{{}j}{{}Bn}{{}C`}{{}Bf}{{}Dl}{{}Dn}{{}l}{{}Aj}{{}Cd}{{}Af}{{}Cj}`````````{{dE`}Eb}{{ClE`}Eb}{{CnE`}Eb}{{D`E`}Eb}{{AbE`}Eb}{{CfE`}Eb}{{jE`}Eb}{{BnE`}Eb}{{C`E`}Eb}{{AjE`}Eb}{{CdE`}Eb}{{AfE`}Eb}{{CjE`}Eb}{cc{}}000{EdD`}1111111{EfCf}2{Efj}3333333333```````{ce{}{}}000000000000000000000`````````````````````````````````````````````````````````````0000000000000000000000{c{{Eh{e}}}{}{}}0000000000000000000000000000000000000000000````{cEj{}}000000000000000000000`````","D":"Nh","p":[[8,"c_int",777],[5,"sockaddr",71],[8,"socklen_t",71],[8,"clockid_t",71],[5,"timespec",71],[5,"epoll_event",71],[1,"never"],[1,"usize"],[5,"addrinfo",71],[1,"unit"],[5,"stat",71],[8,"c_char",777],[5,"rlimit",71],[8,"off_t",71],[8,"ssize_t",71],[8,"mode_t",71],[1,"slice"],[8,"pthread_t",71],[5,"pthread_attr_t",71],[6,"c_void",777],[17,"Output"],[1,"fn"],[5,"pthread_mutex_t",71],[5,"pthread_mutexattr_t",71],[8,"size_t",71],[5,"fd_set",71],[5,"timeval",71],[8,"c_long",777],[5,"iovec",71],[5,"sockaddr_storage",71],[5,"in_addr",71],[5,"sockaddr_in",71],[5,"in6_addr",71],[20,"in6_addr__bindgen_ty_1",71],[5,"sockaddr_in6",71],[5,"aibuf",71],[20,"aibuf_sa",71],[20,"pthread_attr_t__bindgen_ty_1",71],[20,"epoll_data",71],[5,"Formatter",778],[8,"Result",778],[5,"SocketAddrV4",779],[5,"Duration",780],[6,"Result",781],[5,"TypeId",782],[8,"epoll_data_t",71]],"r":[[2,783],[3,783],[4,784],[5,785],[6,783],[7,785],[8,785],[9,786],[10,786],[11,786],[12,787],[13,785],[14,783],[15,788],[16,783],[17,788],[18,783],[19,787],[20,789],[21,783],[22,783],[23,788],[24,788],[25,784],[26,788],[27,790],[28,791],[29,791],[30,791],[31,792],[32,792],[33,792],[34,791],[35,793],[36,783],[37,783],[38,788],[39,787],[40,794],[41,783],[42,783],[43,789],[44,783],[45,783],[46,788],[47,795],[48,793],[49,793],[50,796],[51,796],[52,796],[53,796],[54,796],[55,796],[56,796],[57,796],[58,796],[59,796],[60,796],[61,796],[62,797],[63,796],[64,796],[65,796],[66,796],[67,796],[68,796],[69,796],[70,796]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJUCBgBIAO0BOgIAAEICAABEAgAATwIGAGwCnQA="}],\
["axalloc",{"t":"IFFNNNNNNNNNNNNNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNNN","n":["DefaultByteAllocator","GlobalAllocator","GlobalPage","add_memory","alloc","alloc","alloc","alloc_contiguous","alloc_pages","alloc_zero","as_mut_ptr","as_ptr","as_slice","as_slice_mut","available_bytes","available_pages","borrow","borrow","borrow_mut","borrow_mut","dealloc","dealloc","dealloc_pages","drop","fill","fmt","from","from","global_add_memory","global_allocator","global_init","init","into","into","name","new","size","start_paddr","start_vaddr","try_from","try_from","try_into","try_into","type_id","type_id","used_bytes","used_pages","zero"],"q":[[0,"axalloc"],[48,"allocator"],[49,"core::alloc::layout"],[50,"core::ptr::non_null"],[51,"axalloc::page"],[52,"axerrno"],[53,"core::fmt"],[54,"memory_addr::addr"],[55,"core::ops::function"],[56,"core::result"],[57,"core::any"]],"i":[0,0,0,1,1,1,7,7,1,7,7,7,7,7,1,1,1,7,1,7,1,1,1,7,7,7,1,7,0,0,0,1,1,7,1,1,7,7,7,1,7,1,7,1,7,1,1,7],"f":"```{{bdd}f}{{bh}j}{{bh}{{f{{l{j}}}}}}{{}{{A`{n}}}}{{dd}{{A`{n}}}}{{bdd}{{f{d}}}}2{nj}0{n{{Ab{j}}}}0{bd}0{ce{}{}}000{{b{l{j}}h}Ad}{{bjh}Ad}{{bdd}Ad}{nAd}{{nj}Ad}{{nAf}Ah}{cc{}}0{{dd}f}{{}b}{{dd}Ad}7::{bAj}2{nd}{{nc}Al{{Bb{An}{{B`{Al}}}}}}{nAn}{c{{Bd{e}}}{}{}}000{cBf{}}0{bd}0=","D":"Df","p":[[5,"GlobalAllocator",0],[1,"usize"],[8,"AllocResult",48],[5,"Layout",49],[1,"u8"],[5,"NonNull",50],[5,"GlobalPage",0,51],[8,"AxResult",52],[1,"slice"],[1,"unit"],[5,"Formatter",53],[8,"Result",53],[1,"str"],[5,"PhysAddr",54],[5,"VirtAddr",54],[17,"Output"],[10,"FnOnce",55],[6,"Result",56],[5,"TypeId",57]],"r":[[2,51]],"b":[[4,"impl-GlobalAlloc-for-GlobalAllocator"],[5,"impl-GlobalAllocator"],[20,"impl-GlobalAllocator"],[21,"impl-GlobalAlloc-for-GlobalAllocator"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA0ABgAFAAAAEQADABYAAAAYAAAAGgAAACgABQA="}],\
["axconfig",{"t":"SSSSSSSSSSSSSSSSSSSSS","n":["ARCH","FAMILY","KERNEL_ASPACE_BASE","KERNEL_ASPACE_SIZE","KERNEL_BASE_PADDR","KERNEL_BASE_VADDR","MMIO_REGIONS","PCI_BUS_END","PCI_ECAM_BASE","PCI_RANGES","PHYS_BUS_OFFSET","PHYS_MEMORY_BASE","PHYS_MEMORY_END","PHYS_MEMORY_SIZE","PHYS_VIRT_OFFSET","PLATFORM","SMP","TASK_STACK_SIZE","TICKS_PER_SEC","TIMER_FREQUENCY","VIRTIO_MMIO_REGIONS"],"q":[[0,"axconfig"],[21,"axconfig::config"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"`````````````````````","D":"Bl","p":[],"r":[[0,21],[1,21],[2,21],[3,21],[4,21],[5,21],[6,21],[7,21],[8,21],[9,21],[10,21],[11,21],[13,21],[14,21],[15,21],[16,21],[17,21],[18,21],[19,21],[20,21]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["axdisplay",{"t":"EHHH","n":["DisplayInfo","framebuffer_flush","framebuffer_info","init_display"],"q":[[0,"axdisplay"],[4,"axdriver_display"],[5,"axdriver::dummy"],[6,"axdriver::structs::imp"]],"i":[0,0,0,0],"f":"`{{}b}{{}d}{{{h{f}}}b}","D":"h","p":[[1,"unit"],[5,"DisplayInfo",4],[8,"AxDisplayDevice",5],[5,"AxDeviceContainer",6]],"r":[[0,4]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAEA"}],\
["axdma",{"t":"FFHNNNNNONNNNNOHNNNNNNNNNNNHNNNNNNNN","n":["BusAddr","DMAInfo","alloc_coherent","as_u64","borrow","borrow","borrow_mut","borrow_mut","bus_addr","clone","clone","clone_into","clone_into","cmp","cpu_addr","dealloc_coherent","default","eq","fmt","fmt","from","from","from","into","into","new","partial_cmp","phys_to_bus","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"axdma"],[36,"core::alloc::layout"],[37,"allocator"],[38,"core::cmp"],[39,"core::fmt"],[40,"core::option"],[41,"memory_addr::addr"],[42,"core::result"],[43,"core::any"]],"i":[0,0,0,4,4,2,4,2,2,4,2,4,2,4,2,0,4,4,4,2,4,4,2,4,2,4,4,0,4,2,4,2,4,2,4,2],"f":"``{b{{f{d}}}}{hj}{ce{}{}}000`{hh}{dd}{{ce}l{}{}}0{{hh}n}`{{db}l}{{}h}{{hh}A`}{{hAb}Ad}{{dAb}Ad}{jh}{cc{}}0;;1{{hh}{{Af{n}}}}{Ahh}=={c{{Aj{e}}}{}{}}000{cAl{}}0","D":"Al","p":[[5,"Layout",36],[5,"DMAInfo",0],[8,"AllocResult",37],[5,"BusAddr",0],[1,"u64"],[1,"unit"],[6,"Ordering",38],[1,"bool"],[5,"Formatter",39],[8,"Result",39],[6,"Option",40],[5,"PhysAddr",41],[6,"Result",42],[5,"TypeId",43]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABYABQAFAAMACgAEABEABAAbAAAAHQAHAA=="}],\
["axdriver",{"t":"FIFGIIPPPONNNNNNNNNNNNONNNNNNNHNNNNNOCNNNNNNNNNNPPIIIPKPKPGIGPKPPPPKPPPPMMNNNNMMNNMMNMMMNNNNMNNMMMMMMMMNMNNNNMNNM","n":["AllDevices","AxBlockDevice","AxDeviceContainer","AxDeviceEnum","AxDisplayDevice","AxNetDevice","Block","Display","Net","block","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","default","deref","device_model","device_name","device_type","display","from","from","from","from_block","from_display","from_net","from_one","init_drivers","into","into","into","is_empty","len","net","prelude","take_one","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Again","AlreadyExists","AxBlockDevice","AxDisplayDevice","AxNetDevice","BadState","BaseDriverOps","Block","BlockDriverOps","Char","DevError","DevResult","DeviceType","Display","DisplayDriverOps","Err","InvalidParam","Io","Net","NetDriverOps","NoMemory","Ok","ResourceBusy","Unsupported","alloc_tx_buffer","block_size","borrow","borrow","borrow_mut","borrow_mut","can_receive","can_transmit","clone","clone_into","device_name","device_type","eq","fb","flush","flush","fmt","fmt","from","from","info","into","into","mac_address","need_flush","num_blocks","read_block","receive","recycle_rx_buffer","recycle_tx_buffers","rx_queue_size","to_owned","transmit","try_from","try_from","try_into","try_into","tx_queue_size","type_id","type_id","write_block"],"q":[[0,"axdriver"],[48,"axdriver::prelude"],[113,"axdriver::structs::imp"],[114,"axdriver::structs"],[115,"axdriver_base"],[116,"axdriver_block"],[117,"axdriver_display"],[118,"axdriver_net"],[119,"core::option"],[120,"core::result"],[121,"core::any"],[122,"core::fmt"]],"i":[0,0,0,0,0,0,4,4,4,2,1,4,2,1,4,2,1,2,1,2,4,4,2,1,4,2,4,4,4,1,0,1,4,2,1,1,2,0,1,1,4,2,1,4,2,1,4,2,15,15,0,0,0,15,0,5,0,5,0,0,0,5,0,26,15,15,5,0,15,26,15,15,8,6,5,15,5,15,8,8,5,5,17,17,5,7,7,6,5,15,5,15,7,5,15,8,7,6,6,8,8,8,8,5,8,5,15,5,15,8,5,15,6],"f":"``````````{ce{}{}}00000{{}{{b{c}}}{}}{{}d}{{{b{c}}}e{}{}}{{}f}{hf}{hj}`{cc{}}00{chl}{chn}{chA`}{c{{b{c}}}{}}9;;;{{{b{c}}}Ab{}}{{{b{c}}}Ad{}}``{{{b{c}}}{{Af{c}}}{}}{c{{Ah{e}}}{}{}}00000{cAj{}}00````````````````````````{{A`Ad}{{Ah{AlAn}}}}{lAd}{ce{}{}}000{A`Ab}0{jj}{{ce}B`{}{}}{Bbf}{Bbj}{{jj}Ab}{nBd}{n{{Ah{B`An}}}}{l{{Ah{B`An}}}}{{jBf}{{Ah{B`Bh}}}}{{AnBf}{{Ah{B`Bh}}}}{cc{}}0{nBj}=={A`Bl}{nAb}{lBn}{{lBn{Cb{C`}}}{{Ah{B`An}}}}{A`{{Ah{AlAn}}}}{{A`Al}{{Ah{B`An}}}}{A`{{Ah{B`An}}}}{A`Ad}{ce{}{}}3{c{{Ah{e}}}{}{}}0002{cAj{}}07","D":"Il","p":[[5,"AxDeviceContainer",0,113],[5,"AllDevices",0],[1,"str"],[6,"AxDeviceEnum",0,114],[6,"DeviceType",48,115],[10,"BlockDriverOps",48,116],[10,"DisplayDriverOps",48,117],[10,"NetDriverOps",48,118],[1,"bool"],[1,"usize"],[6,"Option",119],[6,"Result",120],[5,"TypeId",121],[5,"NetBufPtr",118],[6,"DevError",48,115],[1,"unit"],[10,"BaseDriverOps",48,115],[5,"FrameBuffer",117],[5,"Formatter",122],[5,"Error",122],[5,"DisplayInfo",117],[5,"EthernetAddress",118],[1,"u64"],[1,"u8"],[1,"slice"],[8,"DevResult",48]],"r":[[1,113],[2,113],[3,114],[4,113],[5,113],[50,113],[51,113],[52,113],[54,115],[56,116],[58,115],[59,115],[60,115],[62,117],[67,118]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACMACgALAAgAFQABACgACABLAAMAUQABAFUAAABZAAEAaAAAAGoAAwBvAAEA"}],\
["axfeat",{"t":"","n":[],"q":[],"i":[],"f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["axfs",{"t":"CCHPPPFFPFPIFFIFPPNNNNNNNNNNNNNNHNNNNNHHNNHNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNHNNHHNHHHNHNNNNNNNNNNNNNNNNNNNNNNHNNPPPIFFPFPIIIKFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["api","fops","init_filesystems","BlockDevice","CharDevice","Dir","DirBuilder","DirEntry","Fifo","File","File","FileType","Metadata","OpenOptions","Permissions","ReadDir","Socket","SymLink","append","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonicalize","clone","clone_into","create","create","create","create_dir","create_dir_all","create_new","create_new","current_dir","default","file_name","file_type","file_type","flush","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","is_dir","is_file","len","metadata","metadata","new","new","next","open","open","options","path","permissions","read","read","read","read_dir","read_to_string","recursive","remove_dir","remove_file","rename","seek","set_current_dir","set_len","size","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","BlockDevice","CharDevice","Dir","DirEntry","Directory","Disk","Fifo","File","File","FileAttr","FilePerm","FileType","MyFileSystemIf","OpenOptions","Socket","SymLink","append","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create","create_dir","create_file","create_new","drop","drop","flush","fmt","from","from","from","from","get_attr","into","into","into","into","new","new","new_myfs","open","open_dir","open_dir_at","open_file_at","position","read","read","read_at","read_dir","read_one","remove_dir","remove_file","rename","seek","set_position","size","to_owned","truncate","truncate","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","write","write_at","write_one"],"q":[[0,"axfs"],[3,"axfs::api"],[114,"axfs::fops"],[196,"axdriver::dummy"],[197,"axdriver::structs::imp"],[198,"axfs::api::file"],[199,"alloc::string"],[200,"axerrno"],[201,"axfs::api::dir"],[202,"core::fmt"],[203,"core::option"],[204,"alloc::vec"],[205,"axio"],[206,"core::result"],[207,"core::any"],[208,"core::convert"],[209,"axfs_vfs"],[210,"axfs::dev"],[211,"alloc::sync"],[212,"axdriver_base"],[213,"axfs::fs::myfs"]],"i":[0,0,0,14,14,14,0,0,14,0,14,0,0,0,0,0,14,14,4,6,17,13,11,6,12,4,17,13,11,6,12,4,0,4,4,11,12,4,0,0,11,4,0,12,13,13,6,11,13,6,12,4,17,13,11,6,12,4,17,13,11,6,12,4,17,6,6,6,0,11,12,4,17,11,4,11,13,6,0,11,4,0,0,12,0,0,0,11,0,11,6,4,4,17,13,11,6,12,4,17,13,11,6,12,4,17,13,11,6,12,4,0,11,4,38,38,38,0,0,0,38,0,38,0,0,0,0,0,38,38,28,33,31,29,28,33,31,29,28,28,28,28,29,29,28,31,29,31,28,33,31,29,28,31,33,31,29,28,33,28,39,31,29,29,29,33,31,28,31,29,33,29,29,29,31,33,33,28,31,28,33,31,29,28,33,31,29,28,33,31,29,28,31,28,31,33],"f":"``{{{d{b}}}f}```````````````{{hj}h}{ln}{ce{}{}}00000000000{A`{{Ad{Ab}}}}{hh}{{ce}f{}{}}{A`{{Ad{Af}}}}{{AhA`}{{Ad{f}}}}7{A`{{Ad{f}}}}028{{}{{Ad{Ab}}}}{{}Ah}{AjAb}{AjAl}{lAl}{Af{{Ad{f}}}}{{AjAn}B`}{{lAn}B`}{{AhAn}B`}{{hAn}B`}{cc{}}00000{ce{}{}}000000{lj}0{ln}{A`{{Ad{l}}}}{Af{{Ad{l}}}}>{{}h}{Bb{{Bd{{Ad{Aj}}}}}}{A`{{Ad{Af}}}}{{hA`}{{Ad{Af}}}}3{AjAb}{lBf}{A`{{Ad{{Bj{Bh}}}}}}{{Af{Bl{Bh}}}{{Ad{Bn}}}}{{hj}h}{A`{{Ad{Bb}}}}{A`{{Ad{Ab}}}}{{Ahj}Ah}{A`{{Ad{f}}}}0{{A`A`}{{Ad{f}}}}{{AfC`}{{Ad{n}}}}2{{Afn}{{Ad{f}}}}{ln}{ce{}{}}9{c{{Cb{e}}}{}{}}00000000000{cCd{}}00000{{A`c}{{Ad{f}}}{{Cf{{Bl{Bh}}}}}}=<````````````````{{Chj}f}44444444{ChCh}{{ce}f{}{}}2{{CjA`}Ad}{{CjA`}{{Ad{Cl}}}}4{Cnf}{Cjf}{CnAd}{{ChAn}B`}{cc{}}000{Cn{{Ad{D`}}}}>>>>{bDb}{{}Ch}{Db{{Df{Dd}}}}{{A`Ch}{{Ad{Cn}}}}{{A`Ch}{{Ad{Cj}}}}{{CjA`Ch}{{Ad{Cj}}}}{{CjA`Ch}{{Ad{Cn}}}}{Dbn}{{Cn{Bl{Bh}}}{{Ad{Bn}}}}{{Chj}f}{{Cnn{Bl{Bh}}}{{Ad{Bn}}}}{{Cj{Bl{Dh}}}{{Ad{Bn}}}}{{Db{Bl{Bh}}}{{Dj{Bn}}}}{{CjA`}Ad}0{{CjA`A`}Ad}{{CnC`}{{Ad{n}}}}{{Dbn}f}9{ce{}{}}{{Cnn}Ad}9{c{{Cb{e}}}{}{}}0000000{cCd{}}000<;:8","D":"On","p":[[8,"AxBlockDevice",196],[5,"AxDeviceContainer",197],[1,"unit"],[5,"OpenOptions",3,198],[1,"bool"],[5,"Metadata",3,198],[1,"u64"],[1,"str"],[5,"String",199],[8,"AxResult",200],[5,"File",3,198],[5,"DirBuilder",3,201],[5,"DirEntry",3,201],[8,"FileType",3,198],[5,"Formatter",202],[8,"Result",202],[5,"ReadDir",3,201],[6,"Option",203],[8,"Permissions",3,198],[1,"u8"],[5,"Vec",204],[1,"slice"],[1,"usize"],[6,"SeekFrom",205],[6,"Result",206],[5,"TypeId",207],[10,"AsRef",208],[5,"OpenOptions",114],[5,"Directory",114],[8,"VfsNodeRef",209],[5,"File",114],[8,"FileAttr",114],[5,"Disk",114,210],[10,"VfsOps",209],[5,"Arc",211],[8,"DirEntry",114],[8,"DevResult",212],[8,"FileType",114],[10,"MyFileSystemIf",114]],"r":[[6,201],[7,201],[9,198],[11,198],[12,198],[13,198],[14,198],[15,201],[119,210],[126,213]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEUAEAAVAAsAIgABACwAAAAwAAQAQQAAAEkAAABQAAAAWAAAAFwAAABeABEAcQAAAIQACQCSAAEAlQAAALIAAAC1AAsA"}],\
["axhal",{"t":"CCCCCCCCHHCCCFFFFTTTTFFFTTTNNNNNNNNNNNNNNNNNNONHHOOOOOHNNNNNNNONNNNNNNOOOOHNONNNNNNNOHNONNNOONNNNNNOOOOOOOOOOOOOOOHHOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNOHHHOHHHHHHHIHHTTTFFEETTTETNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNHONOHNNONNNNNNNNNNNHHHEEIEFENNNNNNNNNNFTTSTSTSSSTSITNNNNNNNNNNNNNHHNNNNNNNHNNNNNNNHNNNNNNNNNNNNNNNNHHNNNNHNNNNNHNNNNNNNHNNNNNNHHFNNNNNNNNNNJJX","n":["arch","console","cpu","irq","mem","misc","mp","paging","platform_init","platform_init_secondary","time","tls","trap","ExtendedState","FxsaveArea","GdtStruct","IdtStruct","KCODE32_SELECTOR","KCODE64_SELECTOR","KDATA_SELECTOR","TSS_SELECTOR","TaskContext","TaskStateSegment","TrapFrame","UCODE32_SELECTOR","UCODE64_SELECTOR","UDATA_SELECTOR","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cs","default","disable_irqs","enable_irqs","error_code","ext_state","fcw","fdp","fip","flush_tlb","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fop","from","from","from","from","from","from","from","fs_base","fsw","ftw","fxsave_area","halt","init","interrupt_stack_table","into","into","into","into","into","into","into","iomap_base","irqs_enabled","is_user","kstack_top","load","load","load_tss","mxcsr","mxcsr_mask","new","new","new","new","pointer","pointer","privilege_stack_table","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","read_page_table_root","read_thread_pointer","rflags","rip","rsi","rsp","rsp","ss","st","switch_to","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vector","wait_for_irqs","write_page_table_root","write_thread_pointer","xmm","getchar","putchar","write_bytes","current_task_ptr","set_current_task_ptr","this_cpu_id","this_cpu_is_bsp","IrqHandler","register_handler","set_enable","DEVICE","EXECUTE","FREE","MemRegion","MemRegionFlags","PAGE_SIZE_4K","PhysAddr","READ","RESERVED","UNCACHED","VirtAddr","WRITE","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","complement","contains","difference","empty","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","insert","intersection","intersects","into","into","into_iter","is_all","is_empty","iter","iter_names","memory_regions","name","not","paddr","phys_to_virt","remove","set","size","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","virt_to_phys","terminate","start_secondary_cpu","MappingFlags","PageSize","PageTable","PagingError","PagingHandlerImpl","PagingResult","alloc_frame","borrow","borrow_mut","dealloc_frame","from","into","phys_to_virt","try_from","try_into","type_id","Duration","MAX","MICROSECOND","MICROS_PER_SEC","MILLISECOND","MILLIS_PER_SEC","NANOSECOND","NANOS_PER_MICROS","NANOS_PER_MILLIS","NANOS_PER_SEC","SECOND","TIMER_IRQ_NUM","TimeValue","ZERO","abs_diff","add","add_assign","as_micros","as_millis","as_millis_f32","as_millis_f64","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow_mut","busy_wait","busy_wait_until","checked_add","checked_div","checked_mul","checked_sub","clone","clone_into","cmp","current_ticks","default","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","epochoffset_nanos","eq","fmt","from","from_days","from_hours","from_micros","from_millis","from_mins","from_nanos","from_secs","from_secs_f32","from_secs_f64","from_weeks","hash","into","is_zero","monotonic_time","monotonic_time_nanos","mul","mul_assign","mul_f32","mul_f64","nanos_to_ticks","new","partial_cmp","saturating_add","saturating_mul","saturating_sub","set_oneshot_timer","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","ticks_to_nanos","to_owned","try_from","try_from_secs_f32","try_from_secs_f64","try_into","type_id","wall_time","wall_time_nanos","TlsArea","alloc","borrow","borrow_mut","drop","from","into","tls_ptr","try_from","try_into","type_id","IRQ","PAGE_FAULT","register_trap_handler"],"q":[[0,"axhal"],[13,"axhal::arch"],[152,"axhal::console"],[155,"axhal::cpu"],[159,"axhal::irq"],[162,"axhal::mem"],[237,"axhal::misc"],[238,"axhal::mp"],[239,"axhal::paging"],[255,"axhal::time"],[345,"axhal::tls"],[356,"axhal::trap"],[359,"axhal::arch::x86_64::context"],[360,"x86_64::structures::tss"],[361,"memory_addr::addr"],[362,"core::option"],[363,"core::fmt"],[364,"axhal::arch::x86_64::gdt"],[365,"axhal::arch::x86_64::idt"],[366,"core::result"],[367,"x86_64::structures"],[368,"core::any"],[369,"core::iter::traits::collect"],[370,"bitflags::iter"],[371,"core::iter::traits::iterator"],[372,"core::time"],[373,"core::cmp"],[374,"core::hash"],[375,"axhal::platform::x86_pc"],[376,"axhal::arch::x86_64"],[377,"axhal::platform::x86_pc::uart16550"],[378,"axhal::platform::x86_pc::apic"],[379,"memory_addr"],[380,"axhal::platform::x86_pc::misc"],[381,"axhal::platform::x86_pc::mp"],[382,"page_table_entry"],[383,"page_table_multiarch"],[384,"axhal::platform::x86_pc::time"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,9,9,9,6,9,10,2,11,12,3,6,9,10,2,11,12,3,2,3,2,3,2,2,0,0,2,12,11,11,11,0,6,9,10,2,11,12,3,11,6,9,10,2,11,12,3,12,11,11,6,0,12,3,6,9,10,2,11,12,3,3,0,2,12,9,10,9,11,11,9,10,12,3,9,10,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,2,2,2,2,12,2,11,12,2,3,6,9,10,2,11,12,3,6,9,10,2,11,12,3,6,9,10,2,11,12,3,2,0,0,0,11,0,0,0,0,0,0,0,0,0,0,23,23,23,0,0,0,0,23,23,23,0,23,23,23,23,23,23,23,23,23,23,23,26,23,26,23,23,23,23,23,26,23,23,23,23,23,26,23,26,23,23,23,23,23,23,23,23,23,23,26,23,23,23,23,23,0,26,23,26,0,23,23,26,23,23,23,23,23,26,23,26,23,26,23,0,0,0,0,0,0,0,0,0,43,43,43,43,43,43,43,43,43,43,0,32,32,0,32,0,32,0,0,0,32,0,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,32,32,32,32,32,32,32,0,32,32,32,32,32,32,32,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,32,32,32,32,0,32,32,32,32,32,0,32,32,32,32,32,32,32,0,32,32,32,32,32,32,0,0,0,42,42,42,42,42,42,42,42,42,42,0,0,0],"f":"````````{{}b}0`````````````````{ce{}{}}0000000000000{dd}{ff}{{ce}b{}{}}0`{{}d}55`````{{{j{h}}}b}{{ln}A`}{{Abn}A`}{{Adn}A`}{{dn}A`}{{Afn}A`}{{Ahn}A`}{{fn}{{Al{bAj}}}}`{cc{}}000000````>{{AhAnhh}b}`>>>>>>>`{{}B`}{dB`}`{Abb}{Adb}1``{fAb}{{}Ad}{{}Ah}{{}f}{AbBb}{AdBb}```````````````{{}Bd}{{}An}```````{{AhAh}b}{ce{}{}}0{c{{Al{e}}}{}{}}0000000000000{cBf{}}000000`{{}b}{Bdb}{Anb}`{{}{{j{Bh}}}}{Bhb}{{{Bj{Bh}}}b}{{}}6;{{}B`}`{{AnBl}B`}{{AnB`}b}````````````{{}Bn}{{BnBn}Bn}{{BnBn}b}10{BnAn}021{ce{}{}}000{BnBn}{{BnBn}B`}56{{Bnc}b{{Cb{}{{C`{Bn}}}}}}`{{Bnn}A`}0000{{Cdn}A`}{cc{}}0{An{{j{Bn}}}}{AnBn}00{cBn{{Cb{}{{C`{Bn}}}}}}{Cf{{j{Bn}}}}<=8::{Bnc{}}{BnB`}0{Bn{{Ch{Bn}}}}{Bn{{Cj{Bn}}}}{{}{{`{{Cl{}{{C`{Cd}}}}}}}}`>`{Bdh}{{BnBn}b}{{BnBnB`}b}`{{BnBn}Bn}202{c{{Al{e}}}{}{}}000{cBf{}}02{hBd}{{}Cn}{{AnBd}b}``````{{}{{j{Bd}}}}{ce{}{}}0{Bdb}{cc{}}2<887``````````````{{D`D`}D`}0{{D`D`}b}{D`Db}0{D`Dd}{D`Df}2{D`Dh}2188{D`b}{Djb}{{D`D`}{{j{D`}}}}{{D`Dl}{{j{D`}}}}01{D`D`}{{ce}b{}{}}{{D`D`}Dn}{{}Dh}{{}D`}{{D`Dl}D`}{{D`Dl}b}{{D`D`}Dd}{{D`D`}Df}{{D`Dd}D`}{{D`Df}D`}7{{D`D`}B`}{{D`n}{{Al{bAj}}}}{cc{}}{DhD`}000000{DdD`}{DfD`}2{{D`c}bE`}{ce{}{}}{D`B`}{{}Dj}{{}Dh}{{D`Dl}D`}{{D`Dl}b}>={DhDh}{{DhDl}D`}{{D`D`}{{j{Dn}}}}{{D`D`}D`}50{Dhb}1{{D`D`}b}{D`Dl}00{cD`{{Cl{}{{C`{D`}}}}}}07={c{{Al{e}}}{}{}}{Dd{{Al{D`Eb}}}}{Df{{Al{D`Eb}}}}2{cBf{}}?>`{{}Ed}{ce{}{}}0{Edb}{cc{}}2{EdBh}885```","D":"AJl","p":[[1,"unit"],[5,"TrapFrame",13,359],[5,"TaskStateSegment",13,360],[5,"VirtAddr",361],[6,"Option",362],[5,"ExtendedState",13,359],[5,"Formatter",363],[8,"Result",363],[5,"GdtStruct",13,364],[5,"IdtStruct",13,365],[5,"FxsaveArea",13,359],[5,"TaskContext",13,359],[5,"Error",363],[6,"Result",366],[1,"usize"],[1,"bool"],[5,"DescriptorTablePointer",367],[5,"PhysAddr",361],[5,"TypeId",368],[1,"u8"],[1,"slice"],[8,"IrqHandler",159],[5,"MemRegionFlags",162],[17,"Item"],[10,"IntoIterator",369],[5,"MemRegion",162],[1,"str"],[5,"Iter",370],[5,"IterNames",370],[10,"Iterator",371],[1,"never"],[5,"Duration",255,372],[1,"u128"],[1,"f32"],[1,"f64"],[1,"u64"],[8,"TimeValue",255],[1,"u32"],[6,"Ordering",373],[10,"Hasher",374],[5,"TryFromFloatSecsError",372],[5,"TlsArea",345],[5,"PagingHandlerImpl",239]],"r":[[8,375],[9,375],[13,359],[14,359],[15,364],[16,365],[21,359],[22,360],[23,359],[47,376],[48,376],[54,376],[74,376],[85,376],[114,376],[115,376],[148,376],[149,376],[150,376],[152,377],[153,377],[160,378],[161,378],[167,379],[168,361],[172,361],[237,380],[238,381],[239,382],[240,383],[242,383],[244,383],[255,372],[266,378],[291,384],[299,384],[322,384],[328,384],[336,384]],"b":[[179,"impl-MemRegionFlags"],[180,"impl-Flags-for-MemRegionFlags"],[193,"impl-Debug-for-MemRegionFlags"],[194,"impl-Binary-for-MemRegionFlags"],[195,"impl-UpperHex-for-MemRegionFlags"],[196,"impl-Octal-for-MemRegionFlags"],[197,"impl-LowerHex-for-MemRegionFlags"],[202,"impl-MemRegionFlags"],[203,"impl-Flags-for-MemRegionFlags"],[334,"impl-Sum-for-Duration"],[335,"impl-Sum%3C%26Duration%3E-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJEAJgAcABMAMgAAADQAAgA4AAcASAABAFwAAQBlAA0AdQADAHoAAQB9ABcAmAAAAKgAAQCtAAAAtQAAALgAAwDCAAUAzAAAANUAAADmAAUA8AABAPMAAAD1AAQA/AADAA8BAQAZAQEAIQECACUBAgAtAQEAOgEAAD8BAQBFAQAASgEBAE8BAQBSAQEAVgEBAFwBAgBiAQIAZwEAAA=="}],\
["axlibc",{"t":"HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH","n":["abort","accept","ax_fcntl","ax_open","bind","clock_gettime","close","connect","dup","dup2","dup3","epoll_create","epoll_ctl","epoll_wait","exit","free","freeaddrinfo","fstat","getaddrinfo","getcwd","getpeername","getpid","getrlimit","getsockname","listen","longjmp","lseek","lstat","malloc","mktime","nanosleep","pipe","pthread_create","pthread_exit","pthread_join","pthread_mutex_init","pthread_mutex_lock","pthread_mutex_unlock","pthread_self","rand","random","read","recv","recvfrom","rename","select","send","sendto","setjmp","setrlimit","shutdown","socket","srand","stat","strerror","strftime","strtod","strtof","sysconf","write","writev"],"q":[[0,"axlibc"],[61,"core::ffi"],[62,"arceos_posix_api::ctypes"],[63,"axlibc::unistd"],[64,"axlibc::net"],[65,"axlibc::fd_ops"],[66,"axlibc::fs"],[67,"axlibc::time"],[68,"axlibc::io_mpx"],[69,"axlibc::malloc"],[70,"axlibc::resource"],[71,"axlibc::setjmp"],[72,"axlibc::mktime"],[73,"axlibc::pipe"],[74,"axlibc::pthread"],[75,"axlibc::rand"],[76,"axlibc::io"],[77,"axlibc::errno"],[78,"axlibc::strftime"],[79,"axlibc::strtod"],[80,"axlibc::sys"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"{{}b}{{dfh}d}{{ddj}d}{{ldn}d}2{{A`Ab}d}{dd}40{{dd}d}{{ddd}d}2{{dddAd}d}{{dAddd}d}{db}{AfAh}{AjAh}{{dAl}d}{{llAjAj}d}{{lj}l}>{{}d}{{dAn}d}{{dfh}d}<`{{dB`d}B`}{{lAl}d}{BbAf}`{{AbAb}d}{dd}{{BfBh{Bl{Af}{{Bj{Af}}}}Af}d}{Afb}{{BfAf}d}{{BnC`}d}{Bnd}0{{}Bf}={{}Cb}{{dAfj}Cd}{{dAfBbd}Cd}{{dAfBbdfh}Cd}{{ll}d}{{dCfCfCfCh}d}32`{{dAn}d}{{dd}d}{{ddd}d}{CjAh}{{lAl}d}{dl}`{{ll}Cl}{{ll}Cn}{dCb}={{dD`d}Cd}","D":"Gl","p":[[1,"never"],[8,"c_int",61],[5,"sockaddr",62],[8,"socklen_t",62],[1,"usize"],[8,"c_char",61],[8,"mode_t",62],[8,"clockid_t",62],[5,"timespec",62],[5,"epoll_event",62],[6,"c_void",61],[1,"unit"],[5,"addrinfo",62],[5,"stat",62],[5,"rlimit",62],[8,"off_t",62],[8,"size_t",62],[8,"time_t",62],[8,"pthread_t",62],[5,"pthread_attr_t",62],[17,"Output"],[1,"fn"],[5,"pthread_mutex_t",62],[5,"pthread_mutexattr_t",62],[8,"c_long",61],[8,"ssize_t",62],[5,"fd_set",62],[5,"timeval",62],[8,"c_uint",61],[8,"c_double",61],[8,"c_float",61],[5,"iovec",62]],"r":[[0,63],[1,64],[2,65],[3,66],[4,64],[5,67],[6,65],[7,64],[8,65],[9,65],[10,65],[11,68],[12,68],[13,68],[14,63],[15,69],[16,64],[17,66],[18,64],[19,66],[20,64],[21,63],[22,70],[23,64],[24,64],[25,71],[26,66],[27,66],[28,69],[29,72],[30,67],[31,73],[32,74],[33,74],[34,74],[35,74],[36,74],[37,74],[38,74],[39,75],[40,75],[41,76],[42,64],[43,64],[44,66],[45,68],[46,64],[47,64],[48,71],[49,70],[50,64],[51,64],[52,75],[53,66],[54,77],[55,78],[56,79],[57,79],[58,80],[59,76],[60,76]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["axlog",{"t":"KQQMMMMQQQHHHQQ","n":["LogIf","ax_print","ax_println","console_write_str","current_cpu_id","current_task_id","current_time","debug","error","info","init","print_fmt","set_max_level","trace","warn"],"q":[[0,"axlog"],[15,"core::option"],[16,"core::time"],[17,"core::fmt"],[18,"log"]],"i":[0,0,0,9,9,9,9,0,0,0,0,0,0,0,0],"f":"```{bd}{{}{{h{f}}}}{{}{{h{j}}}}{{}l}```{{}d}{nA`}5``","D":"B`","p":[[1,"str"],[1,"unit"],[1,"usize"],[6,"Option",15],[1,"u64"],[5,"Duration",16],[5,"Arguments",17],[8,"Result",17],[10,"LogIf",0]],"r":[[7,18],[8,18],[9,18],[13,18],[14,18]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["axmm",{"t":"FNNNNNNNHHNHHNHNNNNNNNN","n":["AddrSpace","base","borrow","borrow_mut","contains_range","end","fmt","from","init_memory_management","init_memory_management_secondary","into","kernel_aspace","kernel_page_table_root","map_linear","new_kernel_aspace","page_table","page_table_root","protect","size","try_from","try_into","type_id","unmap"],"q":[[0,"axmm"],[23,"axmm::aspace"],[24,"memory_addr::addr"],[25,"core::fmt"],[26,"kspin"],[27,"page_table_entry"],[28,"axerrno"],[29,"axhal::paging"],[30,"core::result"],[31,"core::any"]],"i":[0,1,1,1,1,1,1,1,0,0,1,0,0,1,0,1,1,1,1,1,1,1,1],"f":"`{bd}{ce{}{}}0{{bdf}h}2{{bj}l}{cc{}}{{}n}04{{}{{A`{b}}}}{{}Ab}{{bdAbfAd}Af}{{}{{Af{b}}}}{bAh}{bAb}{{bdfAd}Af}{bf}{c{{Aj{e}}}{}{}}0{cAl{}}{{bdf}Af}","D":"Bd","p":[[5,"AddrSpace",0,23],[5,"VirtAddr",24],[1,"usize"],[1,"bool"],[5,"Formatter",25],[8,"Result",25],[1,"unit"],[8,"SpinNoIrq",26],[5,"PhysAddr",24],[5,"MappingFlags",27],[8,"AxResult",28],[8,"PageTable",29],[6,"Result",30],[5,"TypeId",31]],"r":[[0,23]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAUAEAAAAAMABAAHABQAFQAWAA=="}],\
["axnet",{"t":"FFNHHNNNNNNNNHNNNNHNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNN","n":["TcpSocket","UdpSocket","accept","bench_receive","bench_transmit","bind","bind","borrow","borrow","borrow_mut","borrow_mut","connect","connect","dns_query","drop","drop","from","from","init_network","into","into","is_nonblocking","is_nonblocking","listen","local_addr","local_addr","new","new","peek_from","peer_addr","peer_addr","poll","poll","poll_interfaces","recv","recv","recv_from","send","send","send_to","set_nonblocking","set_nonblocking","shutdown","shutdown","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"axnet"],[50,"axnet::smoltcp_impl::tcp"],[51,"axerrno"],[52,"core::net::socket_addr"],[53,"axnet::smoltcp_impl::udp"],[54,"core::net::ip_addr"],[55,"alloc::vec"],[56,"axdriver::dummy"],[57,"axdriver::structs::imp"],[58,"axio"],[59,"core::result"],[60,"core::any"],[61,"axnet::smoltcp_impl"],[62,"axnet::smoltcp_impl::dns"]],"i":[0,0,1,0,0,1,5,1,5,1,5,1,5,0,1,5,1,5,0,1,5,1,5,1,1,5,1,5,5,1,5,1,5,0,1,5,5,1,5,5,1,5,1,5,1,5,1,5,1,5],"f":"``{b{{d{b}}}}{{}f}0{{bh}d}{{jh}d}{ce{}{}}00021{l{{d{{A`{n}}}}}}{bf}{jf}{cc{}}0{{{Ad{Ab}}}f}55{bAf}{jAf}{bd}{b{{d{h}}}}{j{{d{h}}}}{{}b}{{}j}{{j{Aj{Ah}}}{{d{{An{Alh}}}}}}43{b{{d{B`}}}}{j{{d{B`}}}}{{}f}{{b{Aj{Ah}}}{{d{Al}}}}{{j{Aj{Ah}}}{{d{Al}}}}510{{j{Aj{Ah}}h}{{d{Al}}}}{{bAf}f}{{jAf}f}={jd}{c{{Bb{e}}}{}{}}000{cBd{}}0","D":"Dn","p":[[5,"TcpSocket",0,50],[8,"AxResult",51],[1,"unit"],[6,"SocketAddr",52],[5,"UdpSocket",0,53],[1,"str"],[6,"IpAddr",54],[5,"Vec",55],[8,"AxNetDevice",56],[5,"AxDeviceContainer",57],[1,"bool"],[1,"u8"],[1,"slice"],[1,"usize"],[1,"tuple"],[5,"PollState",58],[6,"Result",59],[5,"TypeId",60]],"r":[[0,50],[1,53],[3,61],[4,61],[13,62],[33,61]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAsAAwAIAAMADwABAC0ABQA="}],\
["axruntime",{"t":"HH","n":["rust_main","rust_main_secondary"],"q":[[0,"axruntime"],[2,"axruntime::mp"]],"i":[0,0],"f":"{{bb}d}{bd}","D":"f","p":[[1,"usize"],[1,"never"]],"r":[[1,2]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["axstd",{"t":"EEEEECECECEECECQQCEEEECCCEEHHPPPFFPFPIFFIFPPNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNHNNHHNHHHNNNNNNNNNNNNNNNNNNNNNNNHNNPPPPKFPPPPPPGPPPPPPPPPPKPIKGPFFFFPPPPKPNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNNMHHNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNKKKKMMMNMNNNNNNMNMNNTTTGFFRTTGFFFFKTTFPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCEEHEFFEENNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFNNNNNNNNNNNHNHNNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNNHFFTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["arch","boxed","cell","cmp","collections","env","format","fs","hint","io","marker","mem","net","ops","os","print","println","process","ptr","slice","str","string","sync","thread","time","vec","vec","current_dir","set_current_dir","BlockDevice","CharDevice","Dir","DirBuilder","DirEntry","Fifo","File","File","FileType","Metadata","OpenOptions","Permissions","ReadDir","Socket","SymLink","append","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create","create","create","create_dir","create_dir_all","create_new","create_new","default","file_name","file_type","file_type","flush","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","is_dir","is_file","len","metadata","metadata","new","new","next","open","open","options","path","permissions","read","read","read","read_dir","read_to_string","recursive","remove_dir","remove_file","rename","seek","set_len","size","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","AddrInUse","AlreadyExists","BadAddress","BadState","BufRead","BufReader","ConnectionRefused","ConnectionReset","Current","DirectoryNotEmpty","End","Err","Error","InvalidData","InvalidInput","Io","IsADirectory","NoMemory","NotADirectory","NotConnected","NotFound","Ok","PermissionDenied","Read","ResourceBusy","Result","Seek","SeekFrom","Start","Stdin","StdinLock","Stdout","StdoutLock","StorageFull","UnexpectedEof","Unsupported","WouldBlock","Write","WriteZero","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","capacity","clone","clone","clone_into","clone_into","code","consume","consume","consume","eq","eq","fill_buf","fill_buf","fill_buf","flush","flush","flush","fmt","fmt","fmt","from","from","from","from","from","from","from","get_mut","get_ref","has_data_left","into","into","into","into","into","into","into","into_inner","lock","lock","new","prelude","read","read","read","read","read_exact","read_exact","read_line","read_line","read_line","read_to_end","read_to_end","read_to_string","read_to_string","read_until","read_until","rewind","seek","stdin","stdout","stream_position","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","write_all","write_fmt","BufRead","Read","Seek","Write","consume","fill_buf","flush","has_data_left","read","read_exact","read_line","read_to_end","read_to_string","read_until","rewind","seek","stream_position","write","write_all","write_fmt","BITS","BITS","BROADCAST","IpAddr","Ipv4Addr","Ipv6Addr","Iter","LOCALHOST","LOCALHOST","SocketAddr","SocketAddrV4","SocketAddrV6","TcpListener","TcpStream","ToSocketAddrs","UNSPECIFIED","UNSPECIFIED","UdpSocket","V4","V4","V6","V6","accept","backward_checked","backward_checked","backward_unchecked","backward_unchecked","bind","bind","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","connect","connect","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","flowinfo","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_checked","forward_checked","forward_unchecked","forward_unchecked","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_str","from_str","from_str","from_str","from_str","from_str","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","ip","ip","ip","is_benchmarking","is_benchmarking","is_benchmarking","is_broadcast","is_documentation","is_documentation","is_documentation","is_global","is_global","is_global","is_ipv4","is_ipv4","is_ipv4_mapped","is_ipv6","is_ipv6","is_link_local","is_loopback","is_loopback","is_loopback","is_multicast","is_multicast","is_multicast","is_private","is_reserved","is_shared","is_unicast","is_unicast_global","is_unicast_link_local","is_unique_local","is_unspecified","is_unspecified","is_unspecified","local_addr","local_addr","local_addr","multicast_scope","new","new","new","new","new","not","not","not","not","octets","octets","parse_ascii","parse_ascii","parse_ascii","parse_ascii","parse_ascii","parse_ascii","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","peek_from","peer_addr","peer_addr","port","port","port","read","recv","recv_from","scope_id","segments","send","send_to","set_flowinfo","set_ip","set_ip","set_ip","set_port","set_port","set_port","set_scope_id","shutdown","steps_between","steps_between","to_bits","to_bits","to_canonical","to_canonical","to_ipv4","to_ipv4_mapped","to_ipv6_compatible","to_ipv6_mapped","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_socket_addrs","to_socket_addrs","to_socket_addrs","to_socket_addrs","to_socket_addrs","to_socket_addrs","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","arceos","api","modules","exit","Arc","Mutex","MutexGuard","Weak","atomic","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","force_unlock","from","from","get_mut","into","into","into_inner","is_locked","lock","new","try_from","try_from","try_into","try_into","try_lock","type_id","type_id","Builder","JoinHandle","Thread","ThreadId","as_u64","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","current","eq","exit","fmt","fmt","from","from","from","from","id","into","into","into","into","join","name","new","sleep","sleep_until","spawn","spawn","stack_size","thread","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","yield_now","Duration","Instant","MAX","MICROSECOND","MILLISECOND","NANOSECOND","SECOND","ZERO","abs_diff","add","add","add_assign","add_assign","as_micros","as_millis","as_millis_f32","as_millis_f64","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow","borrow_mut","borrow_mut","checked_add","checked_add","checked_div","checked_mul","checked_sub","checked_sub","clone","clone","clone_into","clone_into","cmp","default","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","duration_since","elapsed","eq","fmt","from","from","from","from_days","from_hours","from_micros","from_millis","from_mins","from_nanos","from_secs","from_secs_f32","from_secs_f64","from_weeks","hash","into","into","is_zero","mul","mul_assign","mul_f32","mul_f64","new","now","partial_cmp","saturating_add","saturating_mul","saturating_sub","sub","sub","sub","sub_assign","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","to_owned","to_owned","try_from","try_from","try_from_secs_f32","try_from_secs_f64","try_into","try_into","type_id","type_id"],"q":[[0,"axstd"],[27,"axstd::env"],[29,"axstd::fs"],[137,"axstd::io"],[284,"axstd::io::prelude"],[304,"axstd::net"],[612,"axstd::os"],[613,"axstd::os::arceos"],[615,"axstd::process"],[616,"axstd::sync"],[648,"axstd::thread"],[700,"axstd::time"],[794,"alloc::string"],[795,"axstd::fs::file"],[796,"axstd::fs::dir"],[797,"core::fmt"],[798,"core::option"],[799,"alloc::vec"],[800,"axio"],[801,"core::result"],[802,"core::any"],[803,"core::convert"],[804,"axio::buffered::bufreader"],[805,"axstd::io::stdio"],[806,"axstd::net::tcp"],[807,"core::net::socket_addr"],[808,"core::net::ip_addr"],[809,"axstd::net::socket_addr"],[810,"axstd::net::udp"],[811,"core::cmp"],[812,"core::net::parser"],[813,"core::hash"],[814,"core::iter::traits::iterator"],[815,"std::io::error"],[816,"axstd::sync::mutex"],[817,"core::marker"],[818,"core::default"],[819,"axstd::thread::multi"],[820,"core::num::nonzero"],[821,"core::time"],[822,"axhal::time"],[823,"core::ops::function"],[824,"smoltcp::time"],[825,"core"],[826,"alloc"],[827,"arceos_api"],[828,"alloc::sync"],[829,"core::sync"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,12,0,12,0,0,0,0,0,12,12,5,7,15,11,9,7,10,5,15,11,9,7,10,5,5,5,9,10,5,0,0,9,5,10,11,11,7,9,11,7,10,5,15,11,9,7,10,5,15,11,9,7,10,5,15,7,7,7,0,9,10,5,15,9,5,9,11,7,0,9,5,0,0,10,0,0,0,9,9,7,5,5,15,11,9,7,10,5,15,11,9,7,10,5,15,11,9,7,10,5,0,9,5,26,26,26,26,0,0,26,26,22,26,22,2,0,26,26,26,26,26,26,26,26,2,26,0,26,0,0,0,22,0,0,0,0,26,26,26,26,0,26,26,27,36,31,33,34,22,26,27,36,31,33,34,22,26,27,27,22,26,22,26,26,29,27,31,22,26,29,27,31,32,33,34,22,26,26,27,36,31,33,34,22,26,27,27,29,27,36,31,33,34,22,26,27,36,33,27,0,30,27,36,31,27,30,36,31,29,27,30,27,30,31,29,37,37,0,0,37,22,26,26,27,36,31,33,34,22,26,26,27,36,31,33,34,22,26,27,36,31,33,34,22,26,32,33,34,32,32,0,0,0,0,29,29,32,29,30,30,29,30,30,29,37,37,37,32,32,32,43,44,43,0,0,0,45,43,44,0,0,0,0,0,0,43,44,0,47,41,47,41,39,43,44,43,44,39,46,43,43,43,43,44,44,44,44,43,43,44,44,43,43,43,43,44,44,44,44,43,43,44,44,40,39,46,47,43,44,41,48,49,40,39,46,47,43,44,41,48,49,47,43,44,41,48,49,47,43,44,41,48,49,47,43,44,41,48,49,40,46,47,47,47,43,43,44,44,41,48,49,49,40,47,47,43,43,44,44,41,41,48,48,49,49,43,44,43,44,40,39,46,47,47,47,47,47,47,43,43,43,44,44,44,44,41,41,41,41,48,49,43,44,47,43,44,41,48,49,47,43,44,41,48,49,40,39,46,47,43,44,41,48,49,41,48,49,47,43,44,43,47,43,44,47,43,44,47,41,44,47,41,43,47,43,44,47,43,44,43,43,43,44,44,44,44,47,43,44,40,39,46,44,43,44,41,48,49,43,43,44,44,43,44,47,43,44,41,48,49,47,47,47,43,43,44,44,41,48,49,46,40,46,41,48,49,40,46,46,49,44,46,46,49,41,48,49,41,48,49,49,40,43,44,43,44,47,44,44,44,43,43,47,43,44,41,48,49,45,41,41,48,48,49,47,43,44,41,48,49,40,39,46,47,43,44,41,48,49,40,39,46,47,43,44,41,48,49,40,39,46,47,43,44,41,48,49,40,0,0,0,0,0,0,0,0,0,65,68,65,68,65,68,68,68,65,68,65,65,68,65,65,68,65,65,65,65,65,68,65,68,65,65,68,0,0,0,0,70,72,74,70,73,72,74,70,73,70,70,0,70,0,70,73,72,74,70,73,72,72,74,70,73,74,73,73,0,0,0,73,73,74,70,72,74,70,73,72,74,70,73,72,74,70,73,0,0,0,75,75,75,75,75,75,75,80,75,80,75,75,75,75,75,75,75,75,75,80,75,80,75,80,75,75,75,80,75,80,75,80,75,75,75,75,75,75,75,75,75,80,80,75,75,80,75,75,75,75,75,75,75,75,75,75,75,75,75,80,75,75,75,75,75,75,75,80,75,75,75,75,80,80,75,80,75,75,75,75,75,75,80,75,80,75,75,75,80,75,80,75],"f":"```````````````````````````{{}{{d{b}}}}{f{{d{h}}}}```````````````{{jl}j}{nA`}{ce{}{}}00000000000{jj}{{ce}h{}{}}{f{{d{Ab}}}}{{Adf}{{d{h}}}}67716{{}Ad}{Afb}{AfAh}{nAh}{Ab{{d{h}}}}{{AfAj}Al}{{nAj}Al}{{AdAj}Al}{{jAj}Al}{cc{}}00000>>>>>>>{nl}0{nA`}{f{{d{n}}}}{Ab{{d{n}}}}={{}j}{An{{B`{{d{Af}}}}}}{f{{d{Ab}}}}{{jf}{{d{Ab}}}}3{Afb}{nBb}{f{{d{{Bf{Bd}}}}}}{{Ab{Bh{Bd}}}{{d{Bj}}}}{{jl}j}{f{{d{An}}}}{f{{d{b}}}}{{Adl}Ad}{f{{d{h}}}}0{{ff}{{d{h}}}}{{AbBl}{{d{A`}}}}{{AbA`}{{d{h}}}}{nA`}{ce{}{}}9{c{{Bn{e}}}{}{}}00000000000{cC`{}}00000{{fc}{{d{h}}}{{Cb{{Bh{Bd}}}}}}=<```````````````````````````````````````{Cdf}44444444444444{{{Cf{c}}}{{Bh{Bd}}}{}}{{{Cf{c}}}Bj{}}{BlBl}{CdCd}{{ce}h{}{}}0{CdCh}{{CjBj}h}{{{Cf{c}}Bj}hCl}{{CnBj}h}{{BlBl}l}{{CdCd}l}{Cj{{Bn{{Bh{Bd}}Cd}}}}{{{Cf{c}}}{{Bn{{Bh{Bd}}Cd}}}Cl}{Cn{{d{{Bh{Bd}}}}}}{D`{{Bn{hCd}}}}{Db{{d{h}}}}{Dd{{d{h}}}}{{BlAj}{{Bn{hDf}}}}{{CdAj}{{Bn{hDf}}}}0{cc{}}000000{{{Cf{c}}}c{}}0{Cj{{Bn{lCd}}}}{ce{}{}}0000002{DhCn}{DbDd}{c{{Cf{c}}}Cl}`{{Cl{Bh{Bd}}}{{Bn{BjCd}}}}{{{Cf{c}}{Bh{Bd}}}{{Bn{BjCd}}}Cl}{{Dh{Bh{Bd}}}{{d{Bj}}}}{{Cn{Bh{Bd}}}{{d{Bj}}}}{{{Cf{c}}{Bh{Bd}}}{{Bn{hCd}}}Cl}{{Cl{Bh{Bd}}}{{Bn{hCd}}}}{{Dhb}{{d{Bj}}}}{{Cnb}{{d{Bj}}}}{{Cjb}{{Bn{BjCd}}}}{{{Cf{c}}{Bf{Bd}}}{{Bn{BjCd}}}Cl}{{Cl{Bf{Bd}}}{{Bn{BjCd}}}}{{{Cf{c}}b}{{Bn{BjCd}}}Cl}{{Clb}{{Bn{BjCd}}}}{{CnBd{Bf{Bd}}}{{d{Bj}}}}{{CjBd{Bf{Bd}}}{{Bn{BjCd}}}}{Dj{{Bn{hCd}}}}{{DjBl}{{Bn{A`Cd}}}}{{}Dh}{{}Db}{Dj{{Bn{A`Cd}}}}{ce{}{}}0{cb{}}{c{{Bn{e}}}{}{}}000000{Ch{{Bn{Cd}}}}1111111{cC`{}}000000{{D`{Bh{Bd}}}{{Bn{BjCd}}}}{{Db{Bh{Bd}}}{{d{Bj}}}}{{Dd{Bh{Bd}}}{{d{Bj}}}}{{D`{Bh{Bd}}}{{Bn{hCd}}}}{{D`Dl}{{Bn{hCd}}}}````{{CjBj}h}{Cj{{Bn{{Bh{Bd}}Cd}}}}{D`{{Bn{hCd}}}}{Cj{{Bn{lCd}}}}{{Cl{Bh{Bd}}}{{Bn{BjCd}}}}{{Cl{Bh{Bd}}}{{Bn{hCd}}}}{{Cjb}{{Bn{BjCd}}}}{{Cl{Bf{Bd}}}{{Bn{BjCd}}}}{{Clb}{{Bn{BjCd}}}}{{CjBd{Bf{Bd}}}{{Bn{BjCd}}}}{Dj{{Bn{hCd}}}}{{DjBl}{{Bn{A`Cd}}}}{Dj{{Bn{A`Cd}}}}{{D`{Bh{Bd}}}{{Bn{BjCd}}}}?>``````````````````````{Dn{{d{{Ed{E`Eb}}}}}}{{EfBj}{{B`{Ef}}}}{{EhBj}{{B`{Eh}}}}{{EfBj}Ef}{{EhBj}Eh}{c{{d{Dn}}}Ej}{c{{d{El}}}Ej}{{EfEf}Ef}000{{EhEh}Eh}000{{EfEf}h}0{{EhEh}h}0333322221100{ce{}{}}00000000000000000{EnEn}{EfEf}{EhEh}{EbEb}{F`F`}{FbFb}{{ce}h{}{}}00000{{EnEn}Fd}{{EfEf}Fd}{{EhEh}Fd}{{EbEb}Fd}{{F`F`}Fd}{{FbFb}Fd}{c{{d{E`}}}Ej}{{ElEb}{{d{h}}}}{{EnEf}l}{{EnEn}l}{{EnEh}l}{{EfEf}l}{{EfEn}l}{{EhEh}l}{{EhEn}l}{{EbEb}l}{{F`F`}l}{{FbFb}l}{FbFf}{E`{{d{h}}}}{{EnAj}{{Bn{hDf}}}}0{{EfAj}{{Bn{hDf}}}}0{{EhAj}{{Bn{hDf}}}}0{{EbAj}{{Bn{hDf}}}}0{{F`Aj}{{Bn{hDf}}}}0{{FbAj}{{Bn{hDf}}}}0{{EfBj}{{B`{Ef}}}}{{EhBj}{{B`{Eh}}}}{{EfBj}Ef}{{EhBj}Eh}{cc{}}00{EfEn}{{{Fj{Fh}}}En}{{{Fj{Bd}}}En}{EhEn}414{FfEf}{{{Fj{Bd}}}Ef}{FlEh}{{{Fj{Fh}}}Eh}{{{Fj{Bd}}}Eh}9{FbEb}:{{{Ed{cFh}}}Eb{{Fn{En}}}}{F`Eb}<<75{f{{Bn{EnG`}}}}{f{{Bn{EfG`}}}}{f{{Bn{EhG`}}}}{f{{Bn{EbG`}}}}{f{{Bn{F`G`}}}}{f{{Bn{FbG`}}}}{{Enc}hGb}{{Efc}hGb}{{Ehc}hGb}{{Ebc}hGb}{{F`c}hGb}{{Fbc}hGb}{ce{}{}}00000000{EbEn}{F`Ef}{FbEh}{Enl}{Efl}{Ehl}12102102{Ebl}13023213212221111321{E`{{d{Eb}}}}{Dn{{d{Eb}}}}{El{{d{Eb}}}}{Eh{{B`{Gd}}}}{{BdBdBdBd}Ef}{{FhFhFhFhFhFhFhFh}Eh}{{EnFh}Eb}{{EfFh}F`}{{EhFhFfFf}Fb}{EfEf}0{EhEh}0{Ef{{Fj{Bd}}}}{Eh{{Fj{Bd}}}}{{{Bh{Bd}}}{{Bn{EnG`}}}}{{{Bh{Bd}}}{{Bn{EfG`}}}}{{{Bh{Bd}}}{{Bn{EhG`}}}}{{{Bh{Bd}}}{{Bn{EbG`}}}}{{{Bh{Bd}}}{{Bn{F`G`}}}}{{{Bh{Bd}}}{{Bn{FbG`}}}}{{EnEn}{{B`{Fd}}}}{{EnEh}{{B`{Fd}}}}{{EnEf}{{B`{Fd}}}}{{EfEf}{{B`{Fd}}}}{{EfEn}{{B`{Fd}}}}{{EhEn}{{B`{Fd}}}}{{EhEh}{{B`{Fd}}}}{{EbEb}{{B`{Fd}}}}{{F`F`}{{B`{Fd}}}}{{FbFb}{{B`{Fd}}}}{{El{Bh{Bd}}}{{d{{Ed{BjEb}}}}}}{E`{{d{Eb}}}}{El{{d{Eb}}}}{EbFh}{F`Fh}{FbFh}{{E`{Bh{Bd}}}{{d{Bj}}}}{{El{Bh{Bd}}}{{d{Bj}}}}7{FbFf}{Eh{{Fj{Fh}}}}2{{El{Bh{Bd}}c}{{d{Bj}}}Ej}{{FbFf}h}{{EbEn}h}{{F`Ef}h}{{FbEh}h}{{EbFh}h}{{F`Fh}h}{{FbFh}h}6{E`{{d{h}}}}{{EfEf}{{B`{Bj}}}}{{EhEh}{{B`{Bj}}}}{EfFf}{EhFl}{EnEn}{EhEn}{Eh{{B`{Ef}}}}0{EfEh}0{ce{}{}}00000{{{Ej{}{{Gf{c}}}}}{{d{c}}}{{Gj{}{{Gh{Eb}}}}}}{Eb{{Bn{{Gl{Eb}}Gn}}}}{Eb{{d{{Gl{Eb}}}}}}{F`{{d{{Gl{Eb}}}}}}{F`{{Bn{{Gl{Eb}}Gn}}}}{Fb{{Bn{{Gl{Eb}}Gn}}}}{cb{}}00000{c{{Bn{e}}}{}{}}00000000000000000{cC`{}}00000000{{E`{Bh{Bd}}}{{d{Bj}}}}```{ChH`}`````;;;;{{}{{Hb{c}}}{HdHf}}{{{Hh{c}}}cHd}0{{{Hh{c}}}hHd}{{{Hb{c}}Aj}Al{HdHj}}{{{Hh{c}}Aj}Al{HdHj}}{{{Hb{c}}}hHd}{cc{}}0{{{Hb{c}}}cHd}{ce{}{}}0{{{Hb{c}}}c{}}{{{Hb{c}}}lHd}{{{Hb{c}}}{{Hh{c}}}Hd}{c{{Hb{c}}}{}}{c{{Bn{e}}}{}{}}000{{{Hb{c}}}{{B`{{Hh{c}}}}}Hd}{cC`{}}0````{HlHn}88888888{HlHl}{{ce}h{}{}}{{}I`}{{HlHl}l}{ChH`}{{HlAj}Al}{{IbAj}Al}{cc{}}000{I`Hl}{ce{}{}}000{{{Id{c}}}{{d{c}}}{}}{{Ibb}Ib}{{}Ib}{Ifh}{Ihh}{e{{Id{c}}}Ij{{In{}{{Il{c}}}}Ij}}{{Ibe}{{d{{Id{c}}}}}Ij{{In{}{{Il{c}}}}Ij}}{{IbBj}Ib}{{{Id{c}}}I`{}}9{c{{Bn{e}}}{}{}}0000000{cC`{}}000{{}h}````````{{IfIf}If}{{J`If}J`}1{{J`If}h}{{IfIf}h}{IfFl}0{IfJb}{IfJd}2{IfA`}21{ce{}{}}000{{J`If}{{B`{J`}}}}{{IfIf}{{B`{If}}}}{{IfFf}{{B`{If}}}}021{J`J`}{IfIf}{{ce}h{}{}}0{{IfIf}Fd}{{}If}{{IfFf}If}{{IfFf}h}{{IfIf}Jb}{{IfIf}Jd}{{IfJb}If}{{IfJd}If}{{J`J`}If}{J`If}{{IfIf}l}{{IfAj}{{Bn{hDf}}}}{cc{}}0{JfIf}{A`If}000000{JbIf}{JdIf}2{{Ifc}hGb}{ce{}{}}0{Ifl}{{IfFf}If}{{IfFf}h}?>{{A`Ff}If}{{}J`}{{IfIf}{{B`{Fd}}}}{{IfIf}If}50{{J`J`}If}{{J`If}J`}2{{J`If}h}{{IfIf}h}{IfFf}00{cIf{{Gj{}{{Gh{If}}}}}}0=={c{{Bn{e}}}{}{}}0{Jb{{Bn{IfJh}}}}{Jd{{Bn{IfJh}}}}22{cC`{}}0","D":"CE`","p":[[5,"String",794],[8,"Result",137],[1,"str"],[1,"unit"],[5,"OpenOptions",29,795],[1,"bool"],[5,"Metadata",29,795],[1,"u64"],[5,"File",29,795],[5,"DirBuilder",29,796],[5,"DirEntry",29,796],[8,"FileType",29,795],[5,"Formatter",797],[8,"Result",797],[5,"ReadDir",29,796],[6,"Option",798],[8,"Permissions",29,795],[1,"u8"],[5,"Vec",799],[1,"slice"],[1,"usize"],[6,"SeekFrom",137,800],[6,"Result",801],[5,"TypeId",802],[10,"AsRef",803],[6,"Error",137],[5,"BufReader",137,804],[1,"i32"],[10,"BufRead",137,800],[10,"Read",137,800],[5,"StdinLock",137,805],[10,"Write",137,800],[5,"Stdout",137,805],[5,"StdoutLock",137,805],[5,"Error",797],[5,"Stdin",137,805],[10,"Seek",137,800],[5,"Arguments",797],[5,"TcpListener",304,806],[5,"TcpStream",304,806],[6,"SocketAddr",304,807],[1,"tuple"],[5,"Ipv4Addr",304,808],[5,"Ipv6Addr",304,808],[10,"ToSocketAddrs",304,809],[5,"UdpSocket",304,810],[6,"IpAddr",304,808],[5,"SocketAddrV4",304,807],[5,"SocketAddrV6",304,807],[6,"Ordering",811],[1,"u32"],[1,"u16"],[1,"array"],[1,"u128"],[10,"Into",803],[5,"AddrParseError",812],[10,"Hasher",813],[6,"Ipv6MulticastScope",808],[17,"Iter"],[17,"Item"],[10,"Iterator",814],[5,"IntoIter",798],[5,"Error",815],[1,"never"],[5,"Mutex",616,816],[10,"Sized",817],[10,"Default",818],[5,"MutexGuard",616,816],[10,"Debug",797],[5,"ThreadId",648,819],[8,"NonZeroU64",820],[5,"Thread",648,819],[5,"Builder",648,819],[5,"JoinHandle",648,819],[5,"Duration",700,821],[8,"TimeValue",822],[10,"Send",817],[17,"Output"],[10,"FnOnce",823],[5,"Instant",700],[1,"f32"],[1,"f64"],[5,"Duration",824],[5,"TryFromFloatSecsError",821]],"r":[[0,825],[1,826],[2,825],[3,825],[4,826],[6,826],[8,825],[10,825],[11,825],[13,825],[18,825],[19,825],[20,825],[21,826],[25,826],[26,826],[32,796],[33,796],[35,795],[37,795],[38,795],[39,795],[40,795],[41,796],[141,800],[142,804],[160,800],[163,800],[164,800],[166,805],[167,805],[168,805],[169,805],[174,800],[233,800],[251,805],[252,805],[284,800],[285,800],[286,800],[287,800],[307,808],[308,808],[309,808],[313,807],[314,807],[315,807],[316,806],[317,806],[318,809],[321,810],[614,827],[616,828],[617,816],[618,816],[619,828],[620,829],[648,819],[649,819],[650,819],[651,819],[663,819],[682,819],[700,821]],"b":[[210,"impl-Debug-for-Error"],[211,"impl-Display-for-Error"],[333,"impl-BitAnd%3C%26Ipv4Addr%3E-for-%26Ipv4Addr"],[334,"impl-BitAnd%3CIpv4Addr%3E-for-%26Ipv4Addr"],[335,"impl-BitAnd%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[336,"impl-BitAnd-for-Ipv4Addr"],[337,"impl-BitAnd-for-Ipv6Addr"],[338,"impl-BitAnd%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[339,"impl-BitAnd%3C%26Ipv6Addr%3E-for-%26Ipv6Addr"],[340,"impl-BitAnd%3CIpv6Addr%3E-for-%26Ipv6Addr"],[341,"impl-BitAndAssign-for-Ipv4Addr"],[342,"impl-BitAndAssign%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[343,"impl-BitAndAssign%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[344,"impl-BitAndAssign-for-Ipv6Addr"],[345,"impl-BitOr-for-Ipv4Addr"],[346,"impl-BitOr%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[347,"impl-BitOr%3C%26Ipv4Addr%3E-for-%26Ipv4Addr"],[348,"impl-BitOr%3CIpv4Addr%3E-for-%26Ipv4Addr"],[349,"impl-BitOr%3CIpv6Addr%3E-for-%26Ipv6Addr"],[350,"impl-BitOr%3C%26Ipv6Addr%3E-for-%26Ipv6Addr"],[351,"impl-BitOr%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[352,"impl-BitOr-for-Ipv6Addr"],[353,"impl-BitOrAssign-for-Ipv4Addr"],[354,"impl-BitOrAssign%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[355,"impl-BitOrAssign-for-Ipv6Addr"],[356,"impl-BitOrAssign%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[395,"impl-PartialEq%3CIpv4Addr%3E-for-IpAddr"],[396,"impl-PartialEq-for-IpAddr"],[397,"impl-PartialEq%3CIpv6Addr%3E-for-IpAddr"],[398,"impl-PartialEq-for-Ipv4Addr"],[399,"impl-PartialEq%3CIpAddr%3E-for-Ipv4Addr"],[400,"impl-PartialEq-for-Ipv6Addr"],[401,"impl-PartialEq%3CIpAddr%3E-for-Ipv6Addr"],[407,"impl-Debug-for-IpAddr"],[408,"impl-Display-for-IpAddr"],[409,"impl-Display-for-Ipv4Addr"],[410,"impl-Debug-for-Ipv4Addr"],[411,"impl-Display-for-Ipv6Addr"],[412,"impl-Debug-for-Ipv6Addr"],[413,"impl-Debug-for-SocketAddr"],[414,"impl-Display-for-SocketAddr"],[415,"impl-Debug-for-SocketAddrV4"],[416,"impl-Display-for-SocketAddrV4"],[417,"impl-Debug-for-SocketAddrV6"],[418,"impl-Display-for-SocketAddrV6"],[426,"impl-From%3CIpv4Addr%3E-for-IpAddr"],[427,"impl-From%3C%5Bu16;+8%5D%3E-for-IpAddr"],[428,"impl-From%3C%5Bu8;+16%5D%3E-for-IpAddr"],[429,"impl-From%3CIpv6Addr%3E-for-IpAddr"],[431,"impl-From%3C%5Bu8;+4%5D%3E-for-IpAddr"],[433,"impl-From%3Cu32%3E-for-Ipv4Addr"],[434,"impl-From%3C%5Bu8;+4%5D%3E-for-Ipv4Addr"],[435,"impl-From%3Cu128%3E-for-Ipv6Addr"],[436,"impl-From%3C%5Bu16;+8%5D%3E-for-Ipv6Addr"],[437,"impl-From%3C%5Bu8;+16%5D%3E-for-Ipv6Addr"],[439,"impl-From%3CSocketAddrV6%3E-for-SocketAddr"],[441,"impl-From%3C(I,+u16)%3E-for-SocketAddr"],[442,"impl-From%3CSocketAddrV4%3E-for-SocketAddr"],[512,"impl-Not-for-Ipv4Addr"],[513,"impl-Not-for-%26Ipv4Addr"],[514,"impl-Not-for-%26Ipv6Addr"],[515,"impl-Not-for-Ipv6Addr"],[524,"impl-PartialOrd-for-IpAddr"],[525,"impl-PartialOrd%3CIpv6Addr%3E-for-IpAddr"],[526,"impl-PartialOrd%3CIpv4Addr%3E-for-IpAddr"],[527,"impl-PartialOrd-for-Ipv4Addr"],[528,"impl-PartialOrd%3CIpAddr%3E-for-Ipv4Addr"],[529,"impl-PartialOrd%3CIpAddr%3E-for-Ipv6Addr"],[530,"impl-PartialOrd-for-Ipv6Addr"],[573,"impl-ToSocketAddrs-for-SocketAddr"],[574,"impl-ToSocketAddrs-for-SocketAddr"],[575,"impl-ToSocketAddrs-for-SocketAddrV4"],[576,"impl-ToSocketAddrs-for-SocketAddrV4"],[774,"impl-Sub-for-Instant"],[775,"impl-Sub%3CDuration%3E-for-Instant"],[782,"impl-Sum%3C%26Duration%3E-for-Duration"],[783,"impl-Sum-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAHIBPQABAAQABwAAAAkAAAALAAEADgAAABMAAwAaAAEALwANAEQAAABIAAQAWQAAAGEAAABoAAAAcAAAAHMAAAB1ABEAiAAAALIADQDCAAMAyAADAM0AAQDQAAQA7AADAPIAAAD0AAAA9gAAAPgAAAD/ABgAGQEBAEgBAwBOATsAjAEJAJcBEADAAQsAAQIDAA0CCQAdAgAALQIBADcCBQA+AiYAZgIBAGkCAABsAggAdgIBAIICAwCHAgEAjgIJAJkCAACbAgEArwIMAMcCAgDSAgMA3AIHAOoCAQDuAgAA+QIAAP0CAQADAwAACAMDAA8DBQAXAwMA","a":{"in6addr_any":[320],"in6addr_any_init":[320],"in6addr_loopback":[312],"in6addr_loopback_init":[312],"inaddr_any":[319]}}],\
["axsync",{"t":"FFNNNNNNNNNNNNNNNNNNNNENNNNNNN","n":["Mutex","MutexGuard","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","force_unlock","from","from","get_mut","into","into","into_inner","is_locked","lock","new","spin","try_from","try_from","try_into","try_into","try_lock","type_id","type_id"],"q":[[0,"axsync"],[30,"axsync::mutex"],[31,"core::marker"],[32,"core::default"],[33,"core::fmt"],[34,"core::result"],[35,"core::option"],[36,"core::any"]],"i":[0,0,1,4,1,4,1,4,4,4,1,4,1,1,4,1,1,4,1,1,1,1,0,1,4,1,4,1,1,4],"f":"``{ce{}{}}000{{}{{b{c}}}{df}}{{{h{c}}}cd}0{{{h{c}}}jd}{{{b{c}}l}n{dA`}}{{{h{c}}l}n{dA`}}{{{b{c}}}jd}{cc{}}0{{{b{c}}}cd}88{{{b{c}}}c{}}{{{b{c}}}Abd}{{{b{c}}}{{h{c}}}d}{c{{b{c}}}{}}`{c{{Ad{e}}}{}{}}000{{{b{c}}}{{Af{{h{c}}}}}d}{cAh{}}0","D":"An","p":[[5,"Mutex",0,30],[10,"Sized",31],[10,"Default",32],[5,"MutexGuard",0,30],[1,"unit"],[5,"Formatter",33],[8,"Result",33],[10,"Debug",33],[1,"bool"],[6,"Result",34],[6,"Option",35],[5,"TypeId",36]],"r":[[0,30],[1,30]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA8ABAADAAYACwABABcABAAdAAEA"}],\
["axtask",{"t":"IFFFFNNNNNNNNNNNNHHNNNHNNNNNNNNHHNNNNNNNNNNHHHHHHHHHNNNNNNNNNNNNNNNNNNHH","n":["AxTaskRef","CurrentTask","TaskId","TaskInner","WaitQueue","as_task_ref","as_u64","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","current","current_may_uninit","deref","drop","eq","exit","fmt","fmt","from","from","from","from","id","id_name","init_scheduler","init_scheduler_secondary","into","into","into","into","join","name","new","notify_all","notify_one","notify_task","on_timer_tick","run_idle","set_priority","sleep","sleep","sleep_until","sleep_until","spawn","spawn_raw","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wait","wait_timeout","wait_timeout_until","wait_until","with_capacity","yield_now","yield_now"],"q":[[0,"axtask"],[72,"axtask::task"],[73,"axtask::api"],[74,"core::option"],[75,"core::fmt"],[76,"alloc::string"],[77,"axtask::wait_queue"],[78,"core::time"],[79,"axhal::time"],[80,"core::ops::function"],[81,"core::marker"],[82,"core::result"],[83,"core::any"]],"i":[0,0,0,0,0,1,3,7,1,15,3,7,1,15,3,3,3,0,0,1,7,3,0,7,3,7,1,15,3,7,7,0,0,7,1,15,3,7,7,15,15,15,15,0,0,0,0,0,0,0,0,0,3,7,1,15,3,7,1,15,3,7,1,15,3,15,15,15,15,15,0,0],"f":"`````{bd}{fh}{ce{}{}}0000000{ff}{{ce}j{}{}}{{}b}{{}{{l{b}}}}{bc{}}{nj}{{ff}A`}{AbAd}{{nAf}Ah}{{fAf}Ah}{cc{}}000{nf}{nAj}{{}j}0>>>>{n{{l{Ab}}}}{nAl}{{}An}{{AnA`}j}{{AnA`}A`}{{AnA`d}A`}6{{}Ad}{B`A`}{Bbj}0{Bdj}0{cd{BfBh}}{{cAjBj}d{BfBh}}{ce{}{}}{c{{Bl{e}}}{}{}}0000000{cBn{}}000{Anj}{{AnBb}A`}{{AnBbc}A`{{Cb{}{{C`{A`}}}}}}{{Anc}j{{Cb{}{{C`{A`}}}}}}{BjAn}{{}j}0","D":"Ej","p":[[5,"CurrentTask",0,72],[8,"AxTaskRef",0,73],[5,"TaskId",0,72],[1,"u64"],[1,"unit"],[6,"Option",74],[5,"TaskInner",0,72],[1,"bool"],[1,"i32"],[1,"never"],[5,"Formatter",75],[8,"Result",75],[5,"String",76],[1,"str"],[5,"WaitQueue",0,77],[1,"isize"],[5,"Duration",78],[8,"TimeValue",79],[10,"FnOnce",80],[10,"Send",81],[1,"usize"],[6,"Result",82],[5,"TypeId",83],[17,"Output"],[10,"Fn",80]],"r":[[0,73],[1,72],[2,72],[3,72],[4,77],[17,73],[18,73],[22,73],[31,73],[32,73],[43,73],[44,73],[45,73],[46,73],[47,73],[48,73],[49,73],[50,73],[51,73],[70,73],[71,73]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABsABAAIAAkAFAACABgAAQA1AAwA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
