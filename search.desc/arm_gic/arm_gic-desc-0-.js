searchState.loadedDescShard("arm_gic", 0, "ARM Generic Interrupt Controller (GIC) register …\nEdge-triggered.\nMaximum number of interrupts supported by the GIC.\nDifferent types of interrupt that the GIC handles.\nLevel-sensitive.\nPrivate Peripheral Interrupt.\nInterrupt ID 16-31 are used for PPIs (Private Peripheral …\nSoftware-generated interrupt.\nInterrupt ID 0-15 are used for SGIs (Software-generated …\nShared Peripheral Interrupt.\nInterrupt ID 32-1019 are used for SPIs (Shared Peripheral …\nInterrupt trigger mode.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTypes and definitions for GICv2.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTranslate an interrupt of a given type to a GIC INTID.\nThe GIC CPU interface.\nThe GIC distributor.\nConfigures the trigger mode for the given interrupt.\nThe number of implemented CPU interfaces.\nInforms the CPU interface that it has completed the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nhandles the signaled interrupt.\nReturns the interrupt ID of the highest priority pending …\nInitializes the GIC distributor.\nInitializes the GIC CPU interface.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum number of interrupts that the GIC supports\nConstruct a new GIC distributor instance from the base …\nConstruct a new GIC CPU interface instance from the base …\nEnables or disables the given interrupt.")