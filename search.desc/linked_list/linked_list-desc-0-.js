searchState.loadedDescShard("linked_list", 0, "Linked lists that supports arbitrary removal in constant …\nA descriptor of wrapped list elements.\nA linked list.\nSpecifies which wrapper (e.g., <code>Box</code> and <code>Arc</code>) wraps the list …\nWraps an object to be inserted in a linked list.\nReturns a reference to the wrapped object.\nReturns the last element of the list, if one exists.\nReturns a cursor starting on the first (front) element of …\nReturns the argument unchanged.\nConverts the object back from the pointer representation.\nReturns the first element of the list, if one exists.\nInserts the given object after <code>existing</code>.\nCalls <code>U::from(self)</code>.\nConverts the wrapped object into a pointer that represents …\nReturns whether the list is empty.\nConstructs a new empty linked list.\nRemoves the element currently at the front of the list and …\nAdds the given object to the end (back) of the list.\nRemoves the given entry.\nIntrusive circular doubly-linked lists.\nA linked-list adapter.\nA list cursor that allows traversing a linked list and …\nThe type of the enties in the list.\nAn iterator for the linked list.\nLinks of a linked list.\nAn intrusive circular doubly-linked list.\nReturns the last element of the list, if one exists.\nReturns the element the cursor is currently positioned on.\nReturns a cursor starting on the last (back) element of …\nReturns a cursor starting on the first (front) element of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the first element of the list, if one exists.\nAdds the given object after another object already in the …\nAdds the given object before another object already in the …\nInserts the only entry to a list.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDetermines if the list is empty.\nReturns an iterator for the list starting at the first …\nReturns an iterator for the list starting at the last …\nMoves the cursor to the next element.\nMoves the cursor to the previous element.\nConstructs a new empty list.\nConstructs a new instance of the linked-list links.\nAdds the given object to the end of the list.\nAdds the given object to the beginning of the list.\nRemoves the given object from the list.\nRetrieves the linked list links for the given object.")