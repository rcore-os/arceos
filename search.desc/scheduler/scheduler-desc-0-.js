searchState.loadedDescShard("scheduler", 0, "Various scheduler algorithms in a unified interface.\nThe base scheduler trait that all schedulers should …\ntask for CFS\nA simple Completely Fair Scheduler (CFS).\nA simple FIFO (First-In-First-Out) cooperative scheduler.\nA task wrapper for the <code>FifoScheduler</code>.\nA simple Round-Robin (RR) preemptive scheduler.\nA task wrapper for the <code>RRScheduler</code>.\nType of scheduled entities. Often a task struct.\nAdds a task to the scheduler.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitializes the scheduler.\nReturns a reference to the inner task struct.\nReturns a reference to the inner task struct.\nReturns a reference to the inner task struct.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nnew with default values\nCreates a new empty <code>CFScheduler</code>.\nCreates a new <code>FifoTask</code> from the inner task struct.\nCreates a new empty <code>FifoScheduler</code>.\nCreates a new <code>RRTask</code> from the inner task struct.\nCreates a new empty <code>RRScheduler</code>.\nPicks the next task to run, it will be removed from the …\nPuts the previous task back to the scheduler. The previous …\nRemoves a task by its reference from the scheduler. …\nget the name of scheduler\nget the name of scheduler\nget the name of scheduler\nset priority for a task\nAdvances the scheduler state at each timer tick. Returns …")