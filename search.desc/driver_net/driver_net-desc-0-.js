searchState.loadedDescShard("driver_net", 0, "Common traits and types for network device (NIC) drivers.\nThe ethernet address of the NIC (MAC address).\nA RAII network buffer.\nA RAII network buffer wrapped in a <code>Box</code>.\nA pool of <code>NetBuf</code>s to speed up buffer allocation.\nA raw buffer struct for network device.\nOperations that require a network device (NIC) driver to …\nAllocates a buffer from the pool.\nAllocates a buffer wrapped in a <code>Box</code> from the pool.\nAllocate a memory buffer of a specified size for network …\nReturns the length of each buffer.\nWhether can receive packets.\nWhether can transmit packets.\nReturns the capacity of the buffer.\nReturns the capacity of the pool.\nDeallocates the buffer into the <code>NetBufPool</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRestore <code>NetBuf</code> struct from a raw pointer.\nReturns the header part of the buffer.\nReturns the length of the header part.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the buffer into a <code>NetBufPtr</code>.\nixgbe NIC device driver.\nThe ethernet address of the NIC.\nCreates a new pool with the given <code>capacity</code>, and all buffer …\nCreate a new <code>NetBufPtr</code>.\nReturns the packet part of the buffer.\nReturn <code>NetBufPtr</code> buffer as &amp;u8.\nReturn <code>NetBufPtr</code> buffer len.\nReturns the mutable reference to the packet part.\nReturn <code>NetBufPtr</code> buffer as &amp;mut u8.\nReturns both the header and the packet parts, as a …\nReturns the entire buffer.\nReturns the mutable reference to the entire buffer.\nReturn raw pointer of the original object.\nReceives a packet from the network and store it in the …\nGives back the <code>rx_buf</code> to the receive queue for later …\nPoll the transmit queue and gives back the buffers for …\nSize of the receive queue.\nSet the length of the header part.\nSet the length of the packet part.\nTransmits a packet in the buffer to the network, without …\nSize of the transmit queue.\nDevice ID for the 82599ES, used to identify the device …\nVendor ID for Intel.\nThe interface which a particular hardware implementation …\nThe ixgbe NIC device driver.\nPhyaical Address\nAllocates and zeroes the given number of contiguous …\nDeallocates the given contiguous physical DMA memory pages.\nReturns the argument unchanged.\nCreates a net ixgbe NIC instance and initialize, or …\nCalls <code>U::from(self)</code>.\nConverts a physical address used for MMIO to a virtual …\nConverts a virtual address used by the driver to access …\nWait until reaching the given deadline.")